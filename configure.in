AC_INIT(bonobo/bonobo-moniker.h)

AM_CONFIG_HEADER(config.h)

BONOBO_MAJOR_VERSION=2
BONOBO_MINOR_VERSION=3
BONOBO_MICRO_VERSION=0
BONOBO_VERSION="$BONOBO_MAJOR_VERSION.$BONOBO_MINOR_VERSION.$BONOBO_MICRO_VERSION"

AM_INIT_AUTOMAKE(libbonobo, $BONOBO_VERSION)

AC_SUBST(BONOBO_MAJOR_VERSION)
AC_SUBST(BONOBO_MINOR_VERSION)
AC_SUBST(BONOBO_MICRO_VERSION)

AM_MAINTAINER_MODE

dnl
dnl Due to the sed scripts being split on 90 line
dnl blocks, this macro needs to be right at the beggining.
dnl
AC_PROG_INTLTOOL

dnl with higher autotools, we can set ACLOCAL_AMFLAGS to make Makefile's
dnl aware of our aclocal include dirs; but this works for automake-1.4
dnl gnome-autogen.sh sets ACLOCAL_FLAGS properly
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

LIBBONOBO_LT_VERSION_INFO='-version-info 0:0:1'
BONOBO_ACTIVATION_LT_VERSION_INFO='-version-info 4:0:0'

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL
AC_PROG_YACC
AC_PATH_PROGS(PATH_TO_XRDB, "xrdb")
AC_CHECK_FUNCS(bind_textdomain_codeset)

GETTEXT_PACKAGE=libbonobo-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

ALL_LINGUAS="am ar az be bg ca cs da de el eo es fa fi fr gl he hu id it ja ko lv mk ml mn ms nl nn no pl pt pt_BR ro ru sk sl sq sv ta tr uk vi zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

GNOME_COMPILE_WARNINGS(maximum)

dnl Test for dladdr
AC_MSG_CHECKING(for dladdr)
have_dladdr=false
AC_TRY_COMPILE([
#define _GNU_SOURCE
#include <dlfcn.h>], [
{
	Dl_info info;
	int     a;
	a = dladdr ("SHLIB_ID", &info);
}], have_dladdr=true)

if $have_dladdr; then
	AC_MSG_RESULT(found)
else
	AC_MSG_RESULT(not found - no auto shlib factory unloads)
fi

AC_DEFINE(HAVE_DLADDR,$have_dladdr)

dnl Checks for library functions
AC_CHECK_FUNCS(usleep nanosleep)

#
# Start of pkg-config checks
#
ORBIT_VERSION=2.4.0
GLIB_VERSION=2.0.1

PKG_CHECK_MODULES(LIBBONOBO, \
	ORBit-2.0 >= $ORBIT_VERSION \
	ORBit-CosNaming-2.0 >= $ORBIT_VERSION \
	glib-2.0 >= $GLIB_VERSION \
	gobject-2.0 >= $GLIB_VERSION \
	gthread-2.0 >= $GLIB_VERSION)
AC_SUBST(LIBBONOBO_CFLAGS)
AC_SUBST(LIBBONOBO_LIBS)

PKG_CHECK_MODULES(SERVER, \
	gmodule-2.0 >= 2.0.1 \
	ORBit-2.0 >= 2.4.0 \
	ORBit-CosNaming-2.0 >= 2.4.0 \
	libxml-2.0 >= 2.4.20)
AC_SUBST(SERVER_LIBS)
AC_SUBST(SERVER_CFLAGS)

# orbit-idl
ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

# glib-genmarshal
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

# Activation idl files
BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACTIVATION_IDL_DIR)

GTK_DOC_CHECK([1.0])

AC_ARG_ENABLE(debug, 
  [  --enable-debug   Enable debugging code [default=disabled]],
  enable_debug="$enableval",
  enable_debug=no)

if test x$enable_debug = xyes; then
  AC_DEFINE(G_ENABLE_DEBUG, 1, [Defined if debugging code should be compiled])
fi

AC_OUTPUT([
Makefile
po/Makefile.in
idl/Makefile
bonobo/Makefile
bonobo/libbonobo-2.0.pc
bonobo-activation/Makefile
bonobo-activation/bonobo-activation-2.0.pc
bonobo-activation/bonobo-activation-version.h
activation-server/Makefile
monikers/Makefile
samples/Makefile
samples/echo/Makefile
tests/Makefile
doc/Makefile
doc/api/Makefile
doc/api/figures/Makefile
])

