AC_INIT(bonobo/bonobo-moniker.h)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libbonobo, 2.2.3)

AM_MAINTAINER_MODE

dnl
dnl Due to the sed scripts being split on 90 line
dnl blocks, this macro needs to be right at the beggining.
dnl
AC_PROG_INTLTOOL

dnl with higher autotools, we can set ACLOCAL_AMFLAGS to make Makefile's
dnl aware of our aclocal include dirs; but this works for automake-1.4
dnl gnome-autogen.sh sets ACLOCAL_FLAGS properly
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

LT_VERSION_INFO='-version-info 0:0:1'

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL
AC_PROG_YACC
AC_PATH_PROGS(PATH_TO_XRDB, "xrdb")
AC_CHECK_FUNCS(bind_textdomain_codeset)

GETTEXT_PACKAGE=libbonobo-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

ALL_LINGUAS="am ar az be bg ca cs cy da de el eo es fa fi fr gl he hu id it ja ko lv mk ml mn ms nl nn no pl pt pt_BR ro ru sk sl sq sr sr@Latn sv ta tr uk vi yi zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

GNOME_COMPILE_WARNINGS(maximum)

dnl Test for dladdr
AC_MSG_CHECKING(for dladdr)
have_dladdr=false
AC_TRY_COMPILE([
#define _GNU_SOURCE
#include <dlfcn.h>], [
{
	Dl_info info;
	int     a;
	a = dladdr ("SHLIB_ID", &info);
}], have_dladdr=true)

if $have_dladdr; then
	AC_MSG_RESULT(found)
else
	AC_MSG_RESULT(not found - no auto shlib factory unloads)
fi

AC_DEFINE(HAVE_DLADDR,$have_dladdr)

#
# Start of pkg-config checks
#
ORBIT_VERSION=2.4.0
GLIB_VERSION=2.0.1

PKG_CHECK_MODULES(LIBBONOBO, \
	ORBit-2.0 >= $ORBIT_VERSION \
	ORBit-CosNaming-2.0 >= $ORBIT_VERSION \
	glib-2.0 >= $GLIB_VERSION \
	gobject-2.0 >= $GLIB_VERSION \
	gthread-2.0 >= $GLIB_VERSION \
	bonobo-activation-2.0 >= 1.0.0)
AC_SUBST(LIBBONOBO_CFLAGS)
AC_SUBST(LIBBONOBO_LIBS)

# Always define this for the moment
AC_DEFINE(ENABLE_ORBIT2)

# orbit-idl
ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

# glib-genmarshal
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

# Activation idl files
BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACTIVATION_IDL_DIR)

##################################################
# Check for gtk-doc.
##################################################

AC_ARG_WITH(html-dir, [  --with-html-dir=PATH path to installed docs ])

if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gtk-doc/html'
else
  HTML_DIR=$with_html_dir
fi

AC_SUBST(HTML_DIR)

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.10
if $GTKDOC ; then 
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])

    IFS="${IFS= 	}"; bonobo_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
        cur=$1; shift
        if test -z $min ; then break; fi
        if test -z $cur ; then GTKDOC=false; break; fi
        if test $cur -gt $min ; then break ; fi
        if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$bonobo_save_IFS"

    if $GTKDOC ; then
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no 
  fi
fi

AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

AC_ARG_ENABLE(debug, 
  [  --enable-debug   Enable debugging code [default=disabled]],
  enable_debug="$enableval",
  enable_debug=no)

if test x$enable_debug = xyes; then
  AC_DEFINE(G_ENABLE_DEBUG, 1, [Defined if debugging code should be compiled])
fi

AC_OUTPUT([
Makefile
po/Makefile.in
idl/Makefile
bonobo/Makefile
bonobo/libbonobo-2.0.pc
monikers/Makefile
samples/Makefile
samples/echo/Makefile
tests/Makefile
doc/Makefile
doc/api/Makefile
doc/api/figures/Makefile
])

