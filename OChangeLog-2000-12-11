Sat Nov 27 09:20:51 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/gshell.c: new menus

Fri Nov 26 08:15:53 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/inout.c (file_open_cb): use g_file_test instead of stat.

	* gshell/gshell.c (update_buffer_menu): only display the
	g_basename() of a file in the buffer menu.

	* gshell/inout.c (buffer_save_pf): new save routine.
	(buffer_save_ps): new save routine.

	* components/bonobo.keys: use embeddable:text-plain as default
	viewer for text/* 

Thu Nov 25 12:51:09 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/gshell.c (frame_create_toolbar): add toolbar support

	* gshell/inout.c (file_open_cmd_cb): add mime type support
	(buffer_load_ps): add PersistStream support
	(buffer_load_pf): add PersistFile support

	* gshell/gshell.c (update_buffer_menu): implemented the Buffer
	menu.  

Wed Nov 24 15:49:45 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-client-site.c (gnome_client_site_new_view): don't
	call gtk_widget_show for the wrapper.

	* bonobo/gnome-view.h: set GnomeViewClass parent class to
	GnomeControlClass.

	* bonobo/gnome-view-frame.h: set GnomeViewFrameClass parent class
	type to GnomeControlFrameClass.

	* gshell/gshell.c (buffer_create_cb): check if buffer is NULL

Sun Nov 21 11:51:37 1999  Dietmar Maurer  <dm@darkstar>

	* storage-modules/gnome-storage-efs.c (gnome_storage_efs_open):
	use gnome_object_destroy instead of gtk_object_destroy.

	* bonobo/gnome-control.h: added prototype for
	gnome_control_corba_object_create()

	* bonobo/gnome-bonobo-selector.c (gnome_bonobo_select_goad_id):
	fixed compile warning.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view):
	fixed compile warning.

Fri Nov 19 12:55:35 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-view-frame.c (gnome_view_frame_destroy): destroy
	the wrapper after destroying the remove view (so that
	plug_destroy_cb is not called).

Thu Nov 18 08:40:55 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-control.c (impl_GNOME_Control_set_window): replaced
	destroy_event with delete_event.

	* bonobo/gnome-view-frame.c (gnome_view_frame_destroy): call
	GNOME_Unknown_unref to delete the remote view.

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): move
	gnome_container_remove to the end, since it unref (destroys) the
	object. Don't call gnome_object_unref, since it is called by
	gnome_container_remove.

Wed Nov 17 10:52:15 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/*: added a new subdir for gshell (see gshell/README)

	* bonobo/gnome-wrapper.c (gnome_wrapper_init): unset the
	GTK_NO_WINDOW flag, since we have a window.

1999-11-09  Alexander Werner Skwar <askwar@digitalprojects.com>

	* bonobo.spec.in: More fixes.

1999-11-11  Jesus Bravo Alvarez  <jba@pobox.com>

	* configure.in: Added Galician (gl) to ALL_LINGUAS

1999-11-09  Alexander Werner Skwar <askwar@digitalprojects.com>

	* bonobo.spec.in: Add sysconfdir.

1999-11-09  Michael Meeks  <mmeeks@gnu.org>

	* configure.in: kill image-generic.

	* components/Makefile.am (SUBDIRS): ditto.

1999-10-30  Michael Meeks  <mmeeks@gnu.org>

	* components/bonobo.keys: Add text/html.

1999-10-24  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view): Add
	warning if an object returned does not have a valid corba object.

1999-10-22  Michael Meeks  <mmeeks@gnu.org>

	* components/image-generic/bonobo-image-generic.c:
	s/GdkPixBuf/GdkPixbuf/
	(release_pixbuf_cb): create. (release_pixbuf): use foreach_view.
	(load_image_from_stream, redraw_all_cb): ditto
	(load_image_from_stream): Update to new gdk-pixbuf API.

1999-09-23  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/test-container.c (add_gnumeric_cmd): Change this to goadid

1999-10-12  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-bonobo-widget.c (gnome_bonobo_widget_size_allocate):
	comment out gdk_window_move_resize, it caused a loop shrinking the
	widget.

	* bonobo/test-bw.c (button_clicked_cb): update (main): Allow component
	specification on the cmdline.

1999-10-10  Michael Meeks  <mmeeks@gnu.org>

	* samples/paint-component-simple.c (main): Make factory global, add
	running_object count. (embeddable_factory): increment count.
	(embeddable_destroy_cb): Add quit on 0 objects.

1999-10-06  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-generic-factory.c: New file.  Now we use a generic
	factory rather than an embeddable factory.

	* bonobo/gnome-client-site.c (gnome_client_site_new_item): Updated
	to the new setup.

	* bonobo/gnome-bonobo-item.c (gnome_bonobo_item_new): Take a
	gnome-embddable rathern than a ViewFrame. 

	* bonobo/gnome-client-site.c: Updated and initialize corba class
	in a routine rather than using a structure.

	* bonobo/gnome-embeddable.c (gnome_embeddable_destroy): Destroy
	the items as well.

	* bonobo/gnome-embeddable.c (GnomeEmbeddablePrivate): move the
	list of views here;  Add support for creating canvas items;  Add
	the canvas creation functions here;  add the callback pointers
	here. 

1999-10-05  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-canvas.idl (set_bounds): New method.

	* bonobo/gnome-view.c (gnome_view_class_init): Removed the code
	that has been moved to the gnome-control.

	* bonobo/gnome-control.c: New file, implements the control side.
	This is a very simple interface for creating controls 

	* idl/gnome-control.idl (Control, ControlFrame): new interfaces,
	they are now the basis for View and ViewFrame.

	* idl/gnome-embeddable.idl (View): we no longer return the canvas
	item here.
	(Embeddable): new method for returning a canvas item from this
	embeddable. 

1999-10-04  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/gnome-desktop-window.c (gnome_desktop_window_construct):
	Rename from gnome_view_construct.

1999-10-04  Gregory McLean <gregm@gnu.org>

	* bonobo.spec.in: Updated. Commited at the request of the miggypoo.

1999-09-29  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-desktop.idl, bonobo/gnome-desktop-window.c: New files,
	used to control a toplevel GtkWindow and export its properties
	through corba.

1999-09-29  Rodrigo Stulzer Lopes <rodrigo@conectiva.com.br>

	* configure.in: add pt_BR to ALL_LINGUAS

1999-09-28  Nat Friedman  <nat@gnome-support.com>

	* storage-modules/Makefile.am (libstorage_efs_la_LDFLAGS): Link
 	with -Llibefs/src/.libs, not -Llibefs/src/.

	* idl/gnome-client-site.idl (GNOME::ClientSite): Remove the
 	queue_resize method from this ineterface.

1999-09-28  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "ro" to ALL_LINGUAS.
	
1999-09-26  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-bonobo-item.c (gbi_set_arg): Add support for
	delayed realization of the remote item for the startup case (ie,
	the parent item is shown, tries to be realized, but the
	GnomeBonoboItem is not yet finished setting itself up).

	* bonobo/gnome-bonobo-selector.c (gnome_bonobo_select_goad_id):
	Use GnomeDialogRun here.

	* bonobo/gnome-bonobo-item.c (gbi_finalize): Unref the remote item
	here. 
	(gbi_set_arg): Also unref the remote item if we are changing it here.

	* bonobo/gnome-client-site.c (gnome_client_site_new_item,
	gnome_client_site_new): CORBA_Object_release the view refereces we
	get. 

	* bonobo/gnome-view-frame.c (gnome_view_frame_destroy): Unref the
	remote view when we are destroyed.

	* bonobo/gnome-client-site.c (gnome_client_site_new_item): Catch
	view destruction to clean up the list of view-frames.

1999-09-25  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-client-site.c (gnome_client_site_new_item): API
	change to improve consistency.

	* bonobo/gnome-view-frame.c (gnome_view_frame_init): Allocate
	private structure.
	(gnome_view_frame_get_canvas_item,
	gnome_view_frame_set_canvas_item): New accessor methods.
	(gnome_view_frame_destroy): Free private.

1999-09-23  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-embeddable.idl: Embeddables no longer throw a
	MultiViewNotSupported exception.  These kind of things will be
	handled by a separate interface.

1999-09-21  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-control.idl: New interface, based on Chuck's
	suggestions. 

1999-09-22  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/Makefile.am: add gnomine.

	* configure.in: add gnomine

1999-09-22  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/image-generic/bonobo-image-generic.c (view_size_allocate_cb):
	Remove redundant duplicate + use new gdk_pixbuf scaling API + protect with
	a const.

1999-09-18  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/image-generic/bonobo-image-generic.c (view_size_allocate_cb):
	Add image scaling.

	* components/image-generic: Create; #defined out for now: nasty
	hack with temp files :-)

1999-09-17  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/image-x-png/bonobo-image-x-png.c (stream_read): Add init
	/ free corba exception. (bonobo_object_factory): setup 'image'.

	* components/bonobo.keys: Add new keys.

	* components/Makefile.am: add image-generic.

	* configure.in: Added image-generic.

1999-09-17  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "da" to ALL_LINGUAS.
	
1999-09-16  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/gnome-canvas-component.c: include stdio.h

	* bonobo/gnome-stream-memory.c (mem_read): Read from the current offset,
	and not the BOF. (mem_write): ditto.

1999-09-15  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/test-container.c (add_pdf_cmd): Update to application-x-pdf,
	fixup menu shortcut.

1999-09-13  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/Makefile.am: Add bonobo created file clean.

	* bonobo/gnome-client-site.c (gnome_client_site_new_view): Use
	gnome_object_unref. (gnome_client_site_new_item): ditto.

	* components/image-x-png/bonobo-image-x-png.c (get_pixbuf): Helper fn.
	(redraw_view, configure_size): use it
	(view_size_query_cb): Implement size query (view_factory): ditto.

1999-09-14  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-canvas-component.c (gcc_render): If the is_buf is
	FALSE, then allocate our buffer

	* bonobo/gnome-bonobo-item.c (gbi_render): Do not queue an
	update.  Thanks Federico!
	(gbi_render): Optimization.  if is_buf is FALSE, then we do not
	transfer the buffer across.

	* bonobo/test-container.c (add_canvas_cmd): Make a bigger canvas.  
	(item_event_handler): fix logic.
	
1999-09-11  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_object_destroy): Only
	release the servant resources if we have a servant.
	(GnomeObjectClient is our example).

1999-09-11  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/gnome-ui-handler.c (toolbar_toplevel_get_widget): Created.
	(toolbar_toplevel_set_sensitivity_internal): Use toolbar_topleve_get_widget
	so we look in the right hash table.
	(pixmap_data_to_corba): Remove warning on stock / filename; seems to
	work well.
	(pixmap_xpm_copy_data, pixmap_copy_data, pixmap_xpm_get_length): Constify.
	(gnome_ui_handler_destroy): Added warning & kill compile warning.

	* doc/debugging.txt: Removed enumeration: pain to renumber :-) Add
	mention of the FAQ

1999-09-10  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-bonobo-item.c (gbi_finalize): Add call to
	POA_GNOME_Unknown__fini here too.

	* bonobo/gnome-object.c (gnome_object_object_destroy): Add call to
	POA_GNOME_Unknown__fini here.

1999-09-09  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view.c (make_component): Invoke gdk_rgb_init if we
	create an _aa canvas.

	* bonobo/gnome-canvas-component.c (gcc_update): Copy the entire
	affine, not only the first 5 fields.

	* bonobo/gnome-bonobo-item.c (gbi_update): ditto

	* doc/bonobo-faq.sgml: Start a FAQ.
	
	* bonobo/gnome-client-site.c: New routine for requesting a
	GnomeCanvasItem from a View.  I am not sure if I like this setup.
	Needs discussion with Nat.

	* bonobo/Makefile.am: Ship item.gnorba;  Add Bonobo-item support. 

	* idl/gnome-canvas.idl: Canvas::Item update method should return
	its boudning box and the update flag status.
	
1999-09-08  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/sample-server.c (main): Invoke bonobo_main here.

	* bonobo/sample-item.c: new file, implements an item server.

	* bonobo/gnome-view.c: Moved various private members into our
	private data structure.
	(make_component): Creates the component if we are missing one by
	calling the view-item-provider routine.
	(impl_GNOME_View_set_window): Returns the canvas for the item if
	we are requested a window.
	(impl_GNOME_View_get_canvas_item): New routine.
	(gnome_view_construct): modify to accept an item_creator callback
	routine. 
	(gnome_view_new_canvas): New routine to create a GnomeView server
	that will respond to get_canvas_item requests.

	* bonobo/sample-server.c: fixed to use bonobo_main().

	* bonobo/sample-item.c: Sample item server.

	* bonobo/test-container.c: New test for bonobo canvas items.

	* idl/gnome-canvas.idl: Make Item derived from GNOME_Unkown.
	
	* bonobo/gnome-canvas-component.c: New file.  the other end of a
	GnomeBonoboItem. 

1999-09-07  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-canvas-item.c: Implements a server for
	GNOME::Canvas::Item interface for a real item.
	
	* bonobo/gnome-view.c (gnome_view_popup_verbs): Constify.

	* bonobo/gnome-bonobo-item.c (gdk_event_to_bonobo_event): Finished
	event marshalling here.

1999-09-08  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/bonobo.keys: Update text/plain: doh.

1999-09-08  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/Makefile.am: Added bonobo.keys install

	* components/bonobo.keys: Added.

1999-09-07  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-bonobo-item.c: New file, implements a proxy canvas
	item that will talk to a GNOME::Canvas::Item returned by a GNOME::View.

1999-09-07  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-object.c (gnome_object_usage_error): Updated warning to
	elucidate the fix.

1999-09-05  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (impl_menu_activated, impl_menu_get_children): 
	Cleaned pointer dereference style.

1999-09-06  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/gnome-canvas.idl: New interface for canvas-based renderers. 

Mon Sep  6 01:22:10 1999 Timur Bakeyev <timur@gnu.org>

	* storage-modules/Makefile.am: Remove in libstorage_efs_la_LDFLAGS
	$(shell pwd) and src/.libs - libtool takes care about paths.

1999-09-04  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_create_toolbar): Add docs.
	Added precondition on name.
	Added several unimplemented warnings.
	(menu_toplevel_item_activated): Remove cast.
	(toolbar_toplevel_item_activated): Implemented.
	(impl_toolbar_activated): Implemented.
	(init_ui_handler_corba_class): Inserted missing impl assignments, moved to eof
	to save using innumerable forward static definitions !
	struct _ToolbarItemLocalInternal: update callback to GnomeUIHandlerCallbackFunc.

	* components/image-x-png/bonobo-image-x-png.c (bonobo_object_factory):
	Clean redundant assignment.

1999-09-04  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* samples/sample-container.c (component_add_view): fix typo

1999-09-03  Nat Friedman  <nat@gnome-support.com>

	* samples/paint-component-simple.c (view_button_press_cb): New
 	function to pop up a component-side verb menu.
	(view_factory): Connect to the button_press_event on the drawing
 	area.
	(container_exit_cmd): Destroy the GnomeContainer object on exit.
	(component_shutdown): New function.
	(component_view_frame_system_exception_cb): New function.
	(component_add_view): Connect to the system_exception signal on
 	the view frame.
	(component_client_site_system_exception_cb): New function.
	(container_activate_component): Connect to the system_exception
 	signal on the client site.
	(container_container_system_exception_cb): New function.
	(container_create): Connect to the system_exception signal on the
 	GnomeContainer.

	* components/text-plain/bonobo-text-plain.c (destroy_view): Don't
 	unref the widgets.

	* bonobo/gnome-view.c
	(gnome_view_execute_verb): New function.
 	(impl_GNOME_View_do_verb): Call gnome_view_execute_verb.
	(gnome_view_construct): Moved bonobo_setup_x_error_handler call
 	here.
	(gnome_view_popup_verbs): New function.

	* bonobo/gnome-ui-handler.c
 	(toolbar_toplevel_item_remove_widgets_recursive): New function.
	(toolbar_toplevel_toolbar_override_notify_recursive): Ditto.
	(impl_toolbar_overridden): Filled in.
	(toolbar_toplevel_create_item): Added a call to
 	set_sensitivity_internal and set_toggle/radio_state_internal upon
 	toolbar widget creation.
	(gnome_ui_handler_toolbar_free_list): Implemented.
	(gnome_ui_handler_toolbar_free_tree): Implemented.
	(gnome_ui_handler_toolbar_get_pos): Implemented.
	(gnome_ui_handler_toolbar_set_sensitivity): Implemented.
	(gnome_ui_handler_toolbar_get_sensitivity): Implemented.

	* bonobo/gnome-persist-stream.c (init_persist_stream_corba_class):
 	Hook up the implementation for is_dirty.

	* bonobo/gnome-main.c (bonobo_init): Add a note about EPIPE.

	* bonobo/gnome-embeddable.c (gnome_embeddable_view_destroy_cb):
 	Disable ping again.
	(gnome_embeddable_get_verbs): New function.

	* bonobo/gnome-container.c (gnome_container_add): Pass the
 	container as the closure on the ClientSite destroy signal.

	* bonobo/gnome-bonobo.h: Include gnome-bonobo-widget.h

	* bonobo/gnome-bonobo-widget.c: Now overrides size_allocate and
 	size_request.

	* bonobo/Makefile.am: Added test-bw and gnome-bonobo-widget.

1999-09-02  Michael Meeks  <michael@imaginator.com>

	* doc/debugging.txt: Updated.

	* components/image-x-png/bonobo-image-x-png.c (main): Add bonobo_main() !

	* components/audio-ulaw/bonobo-audio-ulaw.c (main): ditto.

	* components/text-plain/bonobo-text-plain.c (main): Use bonobo_main();

	* components/image-x-png/bonobo-image-x-png.c (bonobo_object_factory),
	(init_bonobo_image_x_png_factory): Update to embeddable:image-x-png.

	* components/image-x-png/image-x-png.gnorba (location_info):
	the component make lives inside the factory. Remove loop in location_info.

	* bonobo/gnome-object.c: include gtktypeutils for gtk_type_is_a

	* bonobo/gnome-embeddable.c (gnome_embeddable_get_uri): Return NULL
	on preconditions. (impl_GNOME_Embeddable_set_uri): remove const.

	* bonobo/gnome-embeddable.h (GNOME_VIEW_FACTORY): Add helper macro.

	* bonobo/gnome-view.h (GNOME_VIEW_VERB_FUNC): Add helper macro.

	* samples/sample-container.c: Considerably simplify by moving
	all redundant gpointer data casts into the function prototype.

	* samples/paint-component-simple.c (view_size_allocate_cb): 
	ditto: s/gpointer data/embeddable_data_t *embeddable_data/ &
	s/gpointer data/view_data_t *view_data/. Saving scads of lines.
	(view_factory, view_create_menus): Add function cast macros.

1999-09-01  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-embeddable.h: host_name_changed signature now
	includes the new name.
	new uri_changed signal

	* bonobo/gnome-embeddable.c (gnome_embeddable_destroy): Release
	the uri if we have one.
	(gnome_embeddable_set_uri): New method.
	(gnome_embeddable_get_uri): New method.
	(gnome_embeddable_corba_class_init): Use this method instead of
	the static initialization scheme.

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_activate_uri):
	Emit the "activate_uri" signal here.
	(init_view_frame_corba_class): Implement the activate_uri. 
	
	* idl/gnome-embeddable.idl (GNOME::ViewFrame): new method:
	activate_uri
	(GNOME::Embeddable): new method: set_uri.
	
	* bonobo/gnome-view-frame.c  

	* bonobo/gnome-view-frame.h (GnomeViewFrame): Added private field
	for future growth.

	* bonobo/gnome-ui-handler.h (GnomeUIHandler): Added private field
	for future growth.

	* bonobo/gnome-stream-memory.h (GnomeStreamMem): Added private
	field for future growth.

	* bonobo/gnome-storage.h (GnomeStorage): Added private field for
	future growth.

	* bonobo/gnome-simple-source.h (GnomeSimpleDataSource):  Added
	private field for future growth.

	* bonobo/gnome-progressive.h (GnomeProgressiveDataSink): Added
	private field for future growth.

	* bonobo/gnome-persist.h (GnomePersist): Added private field for
	future growth.

	* bonobo/gnome-persist-stream.h (GnomePersistStream); Added
	private field for future growth.

	* bonobo/gnome-persist-file.h (GnomePersistFile): Added private
	field for future growth.

	* bonobo/gnome-moniker.h (GnomeMoniker): Added private field for
	future growth.

	* bonobo/gnome-embeddable-factory.h (GnomeEmbeddableFactory):
	Added private field for future growth.

	* bonobo/gnome-container.h (GnomeContainer): Added private field
	for future growth.

	* bonobo/gnome-client-site.h (GnomeClientSite): Added private
	field for future growth.

	* bonobo/gnome-view.h (GnomeView): Added private field
	for future growth.

	* bonobo/gnome-embeddable.h (GnomeEmbeddable): Added private field
	for future growth.

1999-08-30  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-bonobo-selector.c (select_row): Transparent handler
	except for double clicks.
	(gnome_bonobo_selector_init): Add double click support.

1999-08-29  Michael Meeks  <michael@imaginator.com>

	* components/text-plain/bonobo-text-plain.c (bonobo_object_destroy_cb):
	Same bug fixed again.

1999-08-29  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-view.c (plug_destroy_cb): Added debug.
	(gnome_view_destroy): Set plug to NULL: paranoid.

	* bonobo/gnome-container.c (gnome_container_destroy): Fix
	nasty bug using freed GList pointer.

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): ditto.

1999-08-29  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-embeddable.c (gnome_embeddable_destroy): Fix
	nasty bug using freed GList pointer.

1999-08-29  Nat Friedman  <nat@gnome-support.com>

	* samples/sample-container.c (component_view_set_size): New
 	function to abstract away the container-side size setting.
	(component_request_resize_cb): New function to handle component
 	size change requests.
	(component_add_view): Connect to the "resize_request" signal.

	* bonobo/gnome-view.c (gnome_view_request_resize): New method.

	* bonobo/gnome-bonobo-widget.c: More work.

	* samples/sample-container.c (container_add_embeddable_cmd):
 	Ignore NULL goad ids.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_set_app): Set the
 	UIHandler's global accelgroup to the GnomeApp's accelgroup if it's
 	not already set.

1999-08-28  Ettore Perazzoli  <ettore@comm2000.it>

	* bonobo/gnome-view-frame.c: Make `gnome_view_frame_epv' and
	`gnome_view_frame_vepv' extern.
	* bonobo/gnome-view-frame.h: Declare them here.

	* bonobo/gnome-view.c: Make `gnome_view_epv' and `gnome_view_vepv'
	extern.
	* bonobo/gnome-view.h: Declare them here.

1999-08-27  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-object.c (gnome_object_destroy): Move use of pointer
	to after pre-condition.

1999-08-24  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-bonobo-widget.c: Just a start.  Written during
 	Miguel's O'Reilly talk, as he described this widget on stage.

	* samples/sample-container.c (component_add_view): Perform the
 	size negotiation here, manually.

	* components/audio-ulaw/bonobo-audio-ulaw.c (embeddable_factory):
 	Use gnome_object_unref, not gtk_object_unref.
	(embeddable_factory): Cast the embeddable to GNOME_OBJECT, not
 	GTK_OBJECT.

	* bonobo/gnome-ui-handler.c (menu_copy_item): Use the COPY_STRING
 	macro instead of g_strdup() so we can copy NULL strings.
	(toolbar_toplevel_remove_item): Add a g_return_if_fail here to
 	check if the specified toolbar item exists.
	(toolbar_uiinfo_type_to_uih): Updated to print some more warning
 	messages.

	* bonobo/gnome-main.c (bonobo_init): Ignore SIGPIPE.  Please see
 	the in-line comment for an explanation.

	* bonobo/gnome-embeddable.c (gnome_embeddable_view_destroy_cb):
 	Re-enable gnome_unknown_ping.

	* bonobo/gnome-client-site.c (gnome_client_site_new_view): Remove
 	the automatic size_request proxying.

1999-08-22  Nat Friedman  <nat@gnome-support.com>

	* components/audio-ulaw/bonobo-audio-ulaw.c: Updated to use
 	gnome_object_add_interface.

1999-08-23  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (toolbar_remote_create_item): remove
	redundant GNOME_UIHandler uih_corba.
	(gnome_ui_handler_toolbar_add_one): remove in call.
	(toolbar_uiinfo_type_to_uih): added.
	(toolbar_local_remove_parent_entry, toolbar_local_add_parent_entry): 
	Add failure cases snarfed from menus.
	(toolbar_toplevel_item_remove_parent_entry): add failure return.
	(toolbar_toplevel_item_add_parent_entry): add null internal return.
	(toolbar_toplevel_item_create_widgets): add preconditions.

	* bonobo/gnome-ui-hander.c: Make toolbar API more similar to menu API
	( removed probably redundant GnomeUIHandlerToolbar argument ).

1999-08-23  Elliot Lee  <sopwith@redhat.com>
	* bonobo/gnome-bonobo-selector.c: Fix this aweful, ugly, totally messed up hack
	of a bonobo component directory to build with gcc 2.95.
	* bonobo/gnome-component-directory.h: Point out that we have a workable solution
	here for a component directory.

1999-08-23  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_toolbar_free_[one, list, tree]):
	Stubbed.
	(gnome_ui_handler_toolbar_parse_uiinfo_[one, list, tree]_with_data): Stubbed.
	(gnome_ui_handler_toolbar_free_[one, list, tree]): Stubbed.
	Added warning to unimplemented stubs.

1999-08-23  Elliot Lee  <sopwith@redhat.com>

	* Makefile.am: Put bonoboConf.sh in CLEANFILES.

1999-08-23  Miguel de Icaza  <miguel@gnu.org>

	* samples/sample-container.c (component_load_pf_ok_cb): Strdup the filename.
	(component_load_pf_ok_cb): unref queried interface.
	(component_load_ps_ok_cb): unref queried interface.
	(gnome_object_has_interface): unref queried interface.

	* bonobo/test-container-autoload.c (main): Activate bonobo.

	* bonobo/gnome-persist-file.c (create_gnome_persist_file):
	Initialize the ev;

	* bonobo/gnome-client-site.c (gnome_client_site_bind_embeddable):
	Unref the object we query interfaced.

1999-08-22  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-client-site.c (
	* samples/sample-container.c (component_load_pf_ok_cb): Bug fix:
	duplicate the string before destroying its container. 
	(component_load_pf_ok_cb): Do not invoke method if previous
	operation failed.

	It would be useful if GTK+ followed the const return convention. 

1999-08-22  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-inplace.idl: Removed.
	* bonobo/gnome-inplace-component.c: Likewise.
	* bonobo/gnome-inplace-component.h: Likewise.
	* bonobo/gnome-inplace-site.c: Likewise.
	* bonobo/gnome-inplace-site.h: Likewise.
	* bonobo/gtk-interfaces.c: Likewise.
	* bonobo/gtk-interfaces.h: Likewise.
	
	* samples/sample-container.c (component_add_view): Use
 	gnome_client_site_new_view.
	(component_create_fs): New function to create a file selection
 	dialog.
	(component_load_pf_ok_cb): Callback for when the user hits 'ok' on
 	a PersistFile loading dialog.
	(component_load_pf_cb): Use component_create_fs.
	(component_load_ps_cb): Likewise.
	(component_destroy_cb): Unref the remote object and destroy the
 	widget.  Probably I should destroy the local objects too.

	* samples/paint-component-simple.c (main): Updated to reflect the
 	new bonobo_main system.

	* idl/gnome-embeddable.idl (GNOME::Embeddable): Removed some stale
 	verb documentation.

	* doc/debugging.txt: Fixed some typos.

	* bonobo/gnome-object-client.h (GnomeObjectClient): Removed the
 	view_frames member variable from this.  Ugh.

	* bonobo/gnome-main.c (bonobo_orb): New function.  This used to be
 	a macro.
	(bonobo_poa): Likewise.
	(bonobo_poa_manager): Likewise.
	(bonobo_main): New function.  Activated the POA manager and then
 	runs the main event loop.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view):
 	Deconstified function declaration to avoid a warning.

	* bonobo/gnome-container.c (gnome_container_destroy): Destroy all
 	child GnomeClientSites.
	(gnome_container_client_site_destroy_cb): New function.  Removed a
 	ClientSite from the internal list when it is destroyed.
	(gnome_container_add): Connect to the destroy signal on the client
 	site so that we can remove it from our internal list when it dies.

	* bonobo/gnome-client-site.h (GnomeClientSite): Added a
 	view_frames list here.  Removed compatibility macros.

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): Destroy
 	the view frames.  Use gnome_object_unref to unref a GnomeObject,
 	not gtk_object_unref.
	(destroy_view_frame): Reflect the fact that the view frame list is
 	now stored in the client site.
	(gnome_client_site_new_view): Likewise.

	* bonobo/gnome-bonobo-selector.h: Formatted.

	* bonobo/gnome-bonobo-selector.c: File updated to use the correct
 	indentation style.  Please, if you commit to Bonobo, follow the
 	GNOME Programming guidelines.
	(gnome_bonobo_selector_get_type): Documented.
	(gnome_bonobo_selector_new): Documented.
	(gnome_bonobo_selector_get_selected_goad_id): Documented.
	(gnome_bonobo_selector_select_goad_id): Documented.
	(gnome_bonobo_selector_select_activate): Removed.  It is not the
 	job of the selector to perform server activation.  Furthermore,
 	the API was broken and did not return a reference to the
 	newly-created server.
	(gnome_bonobo_selector_activate_selected): Likewise.
	(close_callback): Removed stale code.

	* bonobo/gnome-object.h (GnomeObject): Removed the per-object
 	CORBA_Environment, as it can lead to re-entrancy problems.  Now
 	you must create your own local CORBA_Environment whenever you need
 	one.
	(GNOME_OBJECT_EV): Removed.

	* bonobo/gnome-bind-context.c: Updated to reflect the fact that we
 	no longer have a per-object CORBA_Environment.
		
	* bonobo/gnome-view.c): Likewise.

	* bonobo/gnome-view-frame.c: Likewise.

	* bonobo/gnome-ui-handler.c: Likewise.

	* bonobo/gnome-stream-memory.c: Likewise.

	* bonobo/gnome-stream-fs.c: Likewise.

	* bonobo/gnome-simple-source.c: Likewise.

	* bonobo/gnome-progressive.c: Likewise.

	* bonobo/gnome-persist-stream.c: Likewise.

	* bonobo/gnome-persist-file.c: Likewise.

	* bonobo/gnome-object-client.c: Likewise.

	* bonobo/gnome-embeddable.c: Likewise.

	* bonobo/gnome-embeddable-factory.c: Likewise.

	* bonobo/gnome-container.c: Likewise.

	* bonobo/gnome-bonobo-selector.c: Likewise.

1999-08-22  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-embeddable-factory.c
	(gnome_embeddable_factory_construct): Use gnome_object_unref
	instead of gtk_object_unref.
	(gnome_embeddable_factory_finalize): rename destroy to finalize.
	Make this unregister from the name server.
	(gnome_embeddable_factory_construct): remember the goad-id we
	register to unregister at finalize time.

1999-08-22  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-view-frame.h: Add gnome_view_frame_set_zoom_factor
	prototype.

	* bonobo/gnome-view-frame.c (gnome_view_frame_set_zoom_factor):
	slight omission fixed.

1999-08-22  Nat Friedman  <nat@gnome-support.com>

	* samples/sample-container.c (component_load_cancel_cb): Callback
 	for the file selector 'cancel' button.  Kills the file selector.
	(component_load_ps_ok_cb): Callback for the PersistStream file
 	selector 'ok' button.  Tries to load a file into a component using
 	the GNOME::PersistStream interface.
	(component_load_ps_cb): Create a file selector and connect the
 	above callback functions to the Ok/Cancel buttons.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_do_popup_menu): Hook
 	up to the "deactivate" signal on the popup menu so that we pop a
 	frame off the gtk main stack when the popup is destroyed.
	(menu_toplevel_popup_deactivated): Callback to handle popup
 	disappearance.

	* bonobo/gnome-view-frame.c (gnome_view_frame_popup_verbs): Use
 	gnome_object_unref to destroy the popup menu.

	* bonobo/gnome-view.c (gnome_view_destroy): Don't g_free the keys
 	when we destroy the verb closures.

1999-08-22  Peter Wainwright  <prw@wainpr.demon.co.uk>

	* bonobo/gnome-main.c (bonobo_activate): New function to perform
 	the actual POA manager activation.
	(bonobo_init): Reomved POA manager activation from here.
	
1999-08-19  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view.c (impl_GNOME_View_set_zoom_factor):
	Implemente method.

1999-08-20  Nat Friedman  <nat@gnome-support.com>

	* samples/sample-container.c: Sample container.  New file.

	* samples/paint-component-simple.c (view_update): Update the
 	correct dimensions.
	(view_factory): Removed the set_usize.  We do proper size
 	negotiation now.
	(view_factory): Connect to system_exception.

	* bonobo/gnome-view.c (gnome_view_class_init): Use the correct
 	marshaler for size_query.

	* bonobo/gnome-view-frame.c: Added the user_context signal.
	(gnome_view_frame_wrapper_button_press_cb): Emit user_context if
 	it was a right click.
	(gnome_view_frame_popup_verbs): New convenience function to do the
 	verb popup for you.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_get_verb_list):
 	Setup the verb list properly.
	(gnome_embeddable_view_destroy_cb): Temporarily disable ping.

	* bonobo/gnome-client-site.c (gnome_client_site_get_embeddable):
 	New function to return the object to which the client site is
 	bound.
	(size_request): New callback function to proxy size request on
 	the view frame.
	(gnome_client_site_new_view): Hookup the size_request callback.

1999-08-19  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object-client.c (gnome_object_client_from_corba):
	New function.

	* doc/api/tmpl/gnome-client-site.smgl: Documented.  

	* doc/api/tmpl/gnome-wrapper.sgml: Documented.
	
1999-08-18  Miguel de Icaza  <miguel@gnu.org>

	* doc/api/tmpl/gnome-object.sgml: Wrote the gnome-object
	documentation. 

1999-08-19  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.c (gnome_view_destroy_remove_verb): A new
 	helper function to free verbs when a view is destroyed.
	(gnome_view_destroy): Free the verbs.
	(init_view_corba_class): size_query, not size_request.

	* bonobo/gnome-view-frame.c (gnome_view_frame_size_request): Call
 	GNOME_View_size_query.

	* bonobo/gnome-container.c (gnome_container_construct): Return a
 	GnomeContainer.
	(gnome_container_new): Likewise.

	* samples/paint-component-simple.c: Removed the global CORBA_ORB
 	and CORBA_Environment.

1999-08-20  Michael Meeks  <michael@imaginator.com>

	* doc/debugging.txt: Even more advice from Nat.

1999-08-19  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.h (GnomeView): Added the GnomeUIHandler field.

	* bonobo/gnome-view.c (impl_GNOME_View_reactivate_and_undo):
 	Removed CORBA_boolean argument.
	(plug_destroy_cb): Cleaned this function up.
	(impl_GNOME_View_size_query): Use -1,-1 as the default, not
 	10,10!
	(gnome_view_destroy): Disconnect from the plug destroy signal when
 	we kill the plug.
	(gnome_view_class_init): Add the "size_query" signal.  Changed from
	"size_request" to "size_query" to avoid conflicting.
	(gnome_view_set_ui_handler): New function.  Components can use
 	this to keep track of the GnomeUIHandler for this view.
	(gnome_view_get_ui_handler): New function.
	(gnome_view_get_remote_ui_handler): The old
 	gnome_view_get_ui_handler was renamed to this.

	* bonobo/gnome-ui-handler.c (uih_toplevel_unregister_containee):
 	Sort the removal list in descending order of path length to ensure
	that children appear before their parents in the list.
 	(menu_toplevel_prune_compare_function): New function to help sort
 	the removal list.
	(menu_local_remove_item): Store the new list in the hash table if
 	there are still local items matching this path.
	(menu_toplevel_remove_item_internal): Don't try to remove the
 	widgets of a radiogroup.
	(toolbar_free_data): New function.
	(toolbar_free): Likewise.
	(toolbar_toplevel_get_item_for_containee): Likewise.
	(toolbar_toplevel_item_is_head): Likewise.
	(gnome_ui_handler_toolbar_new_separator): Likewise.
	(gnome_ui_handler_toolbar_new_radiogroup): Likewise.
	(gnome_ui_handler_toolbar_new_radioitem): Likewise.
	(gnome_ui_handler_toolbar_new_toggleitem): Likewise.
	(toolbar_local_remove_item): Likewise.
	(toolbar_toplevel_item_reinstate_notify): Likewise.
	(impl_toolbar_reinstated): Likewise.
	(toolbar_toplevel_item_remove_notify): Likewise.
	(impl_toolbar_removed): Likewise.
	(toolbar_toplevel_item_remove_data): Likewise.
	(toolbar_toplevel_remove_item_internal): Likewise.
	(toolbar_toplevel_remove_item): Likewise.
	(toolbar_remote_remove_item): Likewise.
	(impl_toolbar_remove_item): Likewise.

	* bonobo/gnome-object.h (GnomeObjectClass): Removed
 	user_exception.

	* bonobo/gnome-object.c: Removed USER_EXCEPTION.
	(gnome_object_check_env): Better documentation.

	* bonobo/gnome-main.c (bonobo_x_error_handler): Ignore BadWindow
 	and BadDrawable.

	* bonobo/gnome-embeddable.c (gnome_embeddable_view_destroy_cb):
 	New function.  When all views are destroyed, this function pings
 	the remote GnomeClientSite to see if it is still alive.  If it
 	isn't, this object self-destructs.  Pinging seems to be
 	non-functional at the moment, however.
	(impl_GNOME_Embeddable_new_view): Connect to the "destroy" signal
 	on the new view.
	(gnome_embeddable_destroy): Destroy all the embeddable's views.
  	Properly free the verbs.

1999-08-20  Michael Meeks  <michael@imaginator.com>

	* doc/debugging.txt: Added some advice on debugging components.

1999-08-19  Michael Meeks  <michael@imaginator.com>

	* doc/storage.txt: Re-hash: downgrade librepro, mention libefs.

	* README: typo.

	* README-gdk-patch: kill duplicate line & typo.

	* doc/Bonobo.sgml: re-phrasing in places.

	* doc/interfaces.txt: typos.
	
1999-08-18  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* doc/api/bonobo.types: Updated to reflect the new data types.

	* doc/Makefile.am: Added

	* bonobo/gnome-view-frame.c (gnome_view_frame_view_activate):
	added error checking.
	(gnome_view_frame_view_deactivate): ditto.
	(gnome_view_frame_view_do_verb): ditto.
	(gnome_view_frame_size_request): ditto.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_unset_container):
	Free exception for all cases.
	(gnome_ui_handler_set_container): Added gnome_object_check_enving.
	(gnome_ui_handler_unset_container): ditto.
	(uih_remote_unregister_containee): ditto.
	(menu_toplevel_item_activated): ditto
	(menu_toplevel_override_notify): ditto
	(menu_remote_create_item): ditto
	(menu_toplevel_remove_notify): ditto
	(menu_toplevel_reinstate_notify): ditto
	(menu_remote_remove_item): ditto
	(menu_remote_fetch): ditto
	(menu_remote_get_children): ditto
	(menu_remote_get_pos): ditto
	(menu_remote_set_sensitivity): ditto
	(menu_remote_get_sensitivity): ditto
	(menu_remote_set_label): ditto
	(menu_remote_get_label): ditto
	(menu_remote_get_hint): ditto
	(menu_remote_set_hint): ditto.
	(menu_remote_set_pixmap): ditto.
	(menu_remote_set_accel): ditto.
	(menu_remote_get_accel): ditto.
	(menu_remote_set_toggle_state): ditto
	(menu_remote_get_toggle_state): ditto.
	(toolbar_toplevel_toolbar_override_notify_recursive): ditto.
	(toolbar_remote_toolbar_create): ditto.
	(toolbar_remote_toolbar_remove): ditto
	(toolbar_toplevel_item_override_notify): ditto.
	(toolbar_remote_create_item): ditto.

	* bonobo/gnome-object.c (gnome_object_check_env): Change to the
	new signature.
	(gnome_unknown_ping): New method.

	* bonobo/gnome-view.c (impl_GNOME_View_size_request): Implement
	size_request method.

	* bonobo/gnome-view.c (gnome_view_class_init): Added new signal
	view_undo_last_operation.   
	(impl_GNOME_View_reactivate_and_undo): New method implementation.
	Emit activate followed by view_undo_last_operation.

	* idl/gnome-embeddable.idl: Added reactivate_and_undo to the GNOME::View.

	* idl/Makefile.am (idl_DATA): gnome-inplace.idl has been dropped
	in favor of the GNOME::View interfaces.

	* idl/gnome-embeddable.idl: Added deactivate_and_undo to the
	GNOME::ViewFrame. 
	Added request_resize to the GNOME::ViewFrame.
	(ViewFrame): add size_request method.
	
	* bonobo/gnome-client-site.c (gnome_client_site_new_view): Check
	errors.  Pass view_frame to enable error signal emission.
	(gnome_client_site_get_verbs): Removed free of list in this case.
	If we got an exception, there is probably no information here.
	(gnome_client_site_get_verbs): added error checking.

1999-08-18  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.c (gnome_view_new): Call bonobo_setup_x_error_handler.

	* bonobo/gnome-main.c (bonobo_x_error_handler): New function to
 	handle X errors in bonobo.
	(bonobo_setup_x_error_handler): New function to setup the X error
 	handler.

	* bonobo/gnome-object.h: Added prototype for gnome_object_destroy.

	* bonobo/gnome-view.c (gnome_view_get_embeddable): Use
 	g_return_val_if_fail.
	(impl_GNOME_View_set_window): Connect to the destroy_event signal
 	when creating the plug.
	(plug_destroy_cb): New function to handle unexpected plug
 	destruction.  Please also see README-gdk-patch.

	* bonobo/gnome-view.h (GnomeView): Added plug_destroy_id.

1999-08-18  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_destroy): Implement
 	gnome_object_destroy

1998-08-11 Michael Meeks <michael@imagiantor.com>

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_create): kill 'full'
	(gnome_stream_fs_class_init): Add close, eos, length
	(fs_close, fs_eos): Stubbed,
	(fs_length): Implemented

	* bonobo/test-container.c: Hacked to include pdf bits.

1999-08-17  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-object-client.c (gnome_object_restore_from_url):
 	Set persist to NULL if an exception occurs in query_interface.
  	Thanks to Peter Wainwright <prw@wainpr.demon.co.uk> for spotting
 	this!

	* bonobo/gnome-view.h (GnomeView): Added an 'embeddable' field.

	* bonobo/gnome-view.c (gnome_view_set_embeddable): New function.
	(gnome_view_get_embeddable): Likewise.

	* bonobo/gnome-embeddable.h (GnomeEmbeddable): Added a views field
 	here to maintain a list of an embeddable's views.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view): Grow
 	the embeddable's view list and set the view's embeddable.

	(gnome_embeddable_corba_object_create): New
 	function. create_gnome_embeddable renamed to this and made public
 	so that derived objects which export no new CORBA functionality
 	can be created.

1999-08-16  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-storage.c (load_storage_driver): Change
	driver_open_t to gpointer to make glib happy.
	Add 'const' to scads of CORBA_char *path things to make
	compile clean.

1999-08-16  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-stream-fs.c (fs_seek): Update to
	new seek type.

	* bonobo/gnome-stream-memory.c (mem_seek): ditto.

	* storage-modules/gnome-stream-efs.c (real_seek): ditto.

	* idl/gnome-storage.idl: Added enum SeekType and
	updated 'seek'

1999-08-14  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-stream-fs.c (fs_eos): Implemented.
	(fs_close): Implemented.

1999-08-14  Michael Meeks  <michael@imaginator.com>

	* components/image-x-png/bonobo-image-x-png.c (bonobo_object_factory):
	Remove unused variable.

1999-08-13  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.h (GnomeObjectClass): Added "user_exception"
	and "system_exception" signals.
	(gnome_object_check_env, GNOME_OBJECT_CHECK): function and utility
	macro for testing exceptions.

1999-08-12  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-stream-fs.c (gnome_stream_create): Killed 'full'
	(gnome_stream_fs_class_init): Added close, eos, length
	(fs_close, fs_eos): Stubbed,
	(fs_length): Implemented.

	* bonobo/test-container.c (add_pdf_cmd): Implemented.

1999-08-11  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_ui_handler):
	If no UI Handler is there, return CORBA_OBJECT_NIL.

	* components/text-plain/bonobo-text-plain.c (create_view_menus):
	Handle the case of no UI Handler available.

1999-08-10  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-container.c (gnome_container_class_init): Set the
	function offset to zero, to not execute our default handler ever.
	(gnome_container_class_init): remove default_get_object from
	here. 

	* bonobo/gnome-object-client.c (parse_moniker_string): Do not
	create an empty item moniker if the string is empty here.

1999-08-10  Federico Mena Quintero  <federico@redhat.com>

	* doc/Bonobo.sgml: Made it valid DocBook.  Spell-checked it.
	Someone should fix the grammatical errors.

1999-08-09  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-ui-handler.c: Fixed numerous menu bugs.  Wrote half
 	of the toolbar routines.

	* bonobo/gnome-moniker.h: Include bonobo/bonobo.h

	* bonobo/gnome-container.c (gnome_container_class_init): Use
 	GTK_RETLOC_BOOL instead of GTK_RETLOC_POINTER.

1999-08-09  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_add_interface): Fix
	preconditions here.
	(gnome_object_instance_init): refernece count is initially 1.

1999-08-07  Miguel de Icaza <miguel@gnu.org>

	* bonobo/Makefile.am: Kill -Wstrict-prototypes.  

	If you feel like today is a good day to add a warning to the
	Makefile.am do *PUT* a ChangeLog entry.  And no, it was not
	correct. 

1999-08-08  Jaka Mocnik  <jaka.mocnik@kiss.uni-lj.si>

	* bonobo/gnome-moniker-client.[ch]: added some #includes to
	make them compile.

1999-08-06  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object-client.c (gnome_object_activate): Use
	"moniker_url:" instead of "moniker:"

	* bonobo/gnome-moniker.c: new implementation of this file.
	Simple creation of monikers and rendering them as strings.

1999-08-03  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_destroy): Do not release the
	aggregate information here. 
	(gnome_object_init): Catch "destroy" signal and abort if a member
	of an aggregate object is destroyed.
	(gnome_object_unref): 
	(gnome_object_ref, gnome_object_unref): New methods to do
	ref/unref from the Gtk level.  They encapsulate the life-time of a
	GnomeObject and any aggregates of it.

	* doc/Bonobo.sgml: Layed out the rules for query_interface,
	documented the fact that you have to fully assemble your object
	before using as discussed today with Federico.

	* bonobo/gnome-object.c: Added a refcount to the AggregateObject.
	(gnome_object_construct): GnomeObjects are all sinked at startup.

	* bonobo/gnome-object-client.c (gnome_object_activate): Simplistic
	file,item moniker implementation.  
	(gnome_object_restore_from_url): New routine for implementing
	moniker loading from an url.  We need an async version of this as
	well.  Probably we need async versions of all of these routines.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): Remove
	double free here.

1999-07-31  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/test-storage.c (main): Improved error checking;  Use a
	named file on the command line.

	* storage-modules/gnome-storage-fs.c (gnome_storage_fs_open): Use
	storage flags here too.

	* storage-modules/gnome-storage-efs.c (gnome_storage_driver_open):
	Use storage flags here.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_open): Does not longer
	take a GnomeStorageFS as an argument.

	* bonobo/gnome-storage.c (gnome_storage_open): New function for
	opening storages, uses a driver argument.
	
	* storage-modules/gnome-storage-efs.c (gnome_storage_driver_open):
	Added shared library entry point.

	* storage-modules/gnome-storage-fs.c: Killed
	gnome_storage_fs_create.
	(gnome_storage_fs_open): Made this routine take the same arguments
	as open(2).
	(gnome_storage_driver_open): Added shared library entry point.

	* components/text-plain/Makefile.am (bonobo_text_plain_LDADD):
	Kill references to efs.

	* components/image-x-png/Makefile.am (bonobo_image_x_png_LDADD):
	Kill references to efs.

	* components/audio-ulaw/Makefile.am (bonobo_audio_ulaw_LDADD):
	Kill references to efs.

	* bonobo/Makefile.am: remove references to moved files and to efs.
	
	* storage-modules: New directory that holds the storage modules.
	Moved bonobo/gnome-{storage,stream}-{fs,efs}.[ch] here. 

1999-07-30  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-item-moniker.c: Implemented bind operation here.

	* idl/gnome-container.idl: Eliminated the ItemContainer interface.
	And put everything into the Container interface.  There is little
	need for all of those other interfaces.

1999-07-29  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-moniker.c (gnome_moniker_create_corba_object):
	Export this CORBA creation routine, as it is used all over the
	place verbatim.

	* bonobo/gnome-item-moniker.c: Started implementing.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_destroy): Chain
	to parent destructor.

1999-07-29  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* configure.in (ALL_LINGUAS): Added es to the list of languages.

	* components/image-x-png/Makefile.am (bonobo_image_x_png_LDADD):
	Reference libefs in a libtool-happy fashion.

	* components/text-plain/Makefile.am (bonobo_text_plain_LDADD): Likewise.

	* components/audio-ulaw/Makefile.am (bonobo_audio_ulaw_LDADD): Likewise.

1999-07-29  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-ui-handler.c: Use CORBA_Object_duplicate and
 	CORBA_Object_is_equivalent where appropriate, thanks to Elliot's
 	suggestion.

	* components/text-plain/bonobo-text-plain.c
 	(bonobo_object_factory): Use gnome_object_add_interface instead of
 	gtk_object_add_interface.

July 29, 1999 Elliot Lee <sopwith@redhat.com>
	* bonobo/gnome-view-frame.c: CORBA_Object_duplicate() the containee we add.

July 28, 1999 Elliot Lee <sopwith@redhat.com>
	Include libefs as a virtual module.

Wed Jul 28 13:34:13 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>
	
	* configure.in: added checks for libefs.
	* bonobo/gnome-storage-repo.[ch]: Removed.
	* bonobo/gnome-stream-repo.[ch]: Removed.
	* bonobo/test-storage.c: New File.
	* bonobo/gnome-storage-efs.[ch]: New File.
	* bonobo/gnome-stream-efs.[ch]: New File.

	Removed obsolete librepo files and added files for libefs (you
	need libefs to compile bonobo).
	
1999-07-24  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c: Removed obsolete verb
 	code.

	* bonobo/gnome-ui-handler.c: Continued work.
	
	* bonobo/gnome-moniker.c (gnome_moniker_construct): Fixed the call
 	to gnome_persist_stream_construct so that the arguments are in the
 	right order.

	* bonobo/gnome-file-moniker.c: Added description to top of file.
	Include gnome-moniker-client.h
	(gnome_file_moniker_bind): Added const to the bind options parameter.

	* bonobo/gnome-embeddable.c: Added comment to top of file.

	* bonobo/gnome-embeddable-factory.c: Added description to top of
 	file.
	(gnome_embeddable_signals): Removed irrelevant cut-n-paste signal code.

	* bonobo/gnome-embeddable-client.c: Added description to top of
 	file.

	* bonobo/gnome-container.c: Added description to top of file.
	(impl_enum_objects): Cast client_site->bound_object to GNOME_OBJECT.

	* bonobo/gnome-client-site.c: Added descrption to top of file.
	(impl_GNOME_client_site_get_moniker): Pass ev, not &ev.

	* bonobo/gnome-bonobo.h: Include gnome-ui-handler.h.

	* bonobo/gnome-bind-context.c: Include bonobo/bonobo.h.

1999-07-21  Miguel de Icaza  <miguel@gnu.org>
                                                 
	* bonobo/gnome-item-container.c: New file.  Implements the
	GnomeItemContainer.

	* bonobo/gnome-container.c (impl_enum_objects): Implemented object
	enumeration in GnomeContainer.

1999-07-20  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-moniker-client.c (gnome_moniker_unregister,
	gnome_moniker_register, gnome_moniker_find_in_naming_service): New
	file.  Implement the file moniker registration/unregistration in
	the name server.

	Moved the finding-in-name-service routine here.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): Use the
	goad id from the GnomePersist object.
	(gnome_file_moniker_bind): Finished implementing.  And cleaned up.
	(map_file): killed

1999-07-19  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object-io.c (gnome_persist_stream_load_goad_id,
	gnome_persist_stream_save_goad_id,
	gnome_persiststream_save_to_stream, gnome_object_save_to_stream):
	New file and new functions for Component IO.

	* bonobo/gnome-stream-client.c: New file.
	* bonobo/gnome-persist-stream.c (gnome_persist_stream_construct,
	gnome_persist_stream_new): Now we require a GOAD it to initialize
	the stream.
	(gnome_persist_stream_set_dirty): New function.

	* bonobo/gnome-moniker.c (gnome_moniker_construct): Pass the
	monker_goad_id. 

	* bonobo/gnome-component-io.c (gnome_embeddable_save_to_stream):
	Rename class_id to goad_id.

July 19, 1999, Elliot:
	bonobo/gnome-embeddable-factory.c:
		Remove warning about using params - don't need to use
		them.
	bonobo/gnome-embeddable.h:
		Make the gnome_embeddable_epv be extern.
	bonobo/test-container-autoload.c:
		query_interface doesn't grant a refcount, so don't
		unref the results.

		Use CORBA_Object_is_nil instead of assuming that
		CORBA_OBJECT_NIL == NULL.

July 17, 1999, Elliot:
	bonobo/gnome-embeddable-factory.c:
		Duplicate the returned objref.

Changes July 16, 1999 by Elliot:
	bonobo/*.[ch]:
		Add an emacs indent format line to the top of each file.

Changes July 1[456], 1999 by Elliot:
	bonobo/gnome-main.c: Make it work with CORBA_OBJECT_NIL for all
			     params.

	bonobo/gnome-component-directory: Prototype solution for
		"How do I find a component to handle X" problem.

	doc/Bonobo.sgml: Change GNOME::obj to GNOME::Unknown

	components/image-x-png:
		. Don't need to initialize the 'ev' every time we use it,
		  as long as it is initialized somewhere.
		. Don't need to copy the data that we are writing to a
		  stream.
		. Use gnome_object_add_interface instead of
		  gtk_object_add_interface.
		. Pass CORBA_OBJECT_NIL to bonobo_init instead of NULL
		  (objrefs are totally opaque & non-equivalent).

1999-07-13  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-embeddable.idl (GNOME::ViewFrame): Documented
 	get_client_site.  Added get_ui_handler.

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_ui_handler):
 	New function to implement the new GNOME::ViewFrame.get_ui_handler
 	method.
	(gnome_view_frame_set_ui_handler): New function to set a
 	ViewFrame's GnomeUIHandler object.
	(gnome_view_frame_get_ui_handler): New function to get a
 	ViewFrame's GnomeUIHandler object.

	* bonobo/gnome-ui-handler.c: Massive updates.  Local menu stuff is
 	now functional.  More work to come.

	* bonobo/gnome-moniker.h: Added prototype for gnome_moniker_new.

	* bonobo/gnome-moniker.c (gnome_moniker_new): Cast to GNOME_OBJECT
 	when calling create_gnome_moniker, not GNOME_MONIKER.

	* bonobo/gnome-container.c (gnome_container_get_moniker):
 	Documented.

	* bonobo/gnome-client-site.c (gnome_client_site_new): Fixed up
 	docs.
	(gnome_client_site_bind_embeddable): Renamed
 	gnome_client_site_bind_bonobo_object to this.

	* bonobo/gnome-bind-context.c (gnome_bind_context_new):
 	Documented.
	(gnome_bind_context_get_type): Likewise.

1999-07-11  Raja R Harinath  <harinath@cs.umn.edu>

	* bonobo/gnome-file-moniker.c (MAP_FILE): 
	Define to zero if not already defined.

1999-07-08  Miguel de Icaza  <miguel@gnu.org>

	* components/text-plain/bonobo-text-plain.c
	(bonobo_object_factory): Removed unused initialization.

1999-07-08  Nat Friedman  <nat@gnome-support.com>

	* bonobo/Makefile.am: Don't compile gnome-ui-handler yet.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_construct):
 	Added missing closure argument to gnome_moniker_construct.

	* bonobo/gnome-object.h: Added missing semicolon to end of
 	prototype.

	* idl/gnome-ui-handler.idl (GNOME::UIHandler): Added iobuf
 	typedef.

1999-07-07  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.c (gnome_view_construct): Documented.
	(gnome_view_new): Likewise.
	(gnome_view_get_type): Likewise.

	* bonobo/gnome-view-frame.c (gnome_view_frame_construct):
 	Documented.
	(gnome_view_frame_new): Fixed docs.
	(gnome_view_frame_get_type): Documented.
	(gnome_view_frame_get_wrapper): Likewise.

	* bonobo/gnome-stream.c (gnome_stream_get_type): Documented.

	* bonobo/gnome-stream-memory.c (gnome_stream_mem_get_type):
 	Documented.
	(gnome_stream_mem_create): Likewise.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_create): Fixed up docs.

	* bonobo/gnome-storage.c (gnome_storage_get_type): Documented.
	(gnome_storage_construct): Likewise.

	* bonobo/gnome-progressive.c
 	(gnome_progressive_data_sink_get_type): Documented.
	(gnome_progressive_data_sink_construct): Likewise.
	(gnome_progressive_data_sink_new): Likewise.

	* bonobo/gnome-persist.c (gnome_persist_get_type): Documented.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_get_type):
 	Documented.
	(gnome_persist_stream_construct): Fixed up documentation.
	(gnome_persist_stream_new): Likewise.

	* HACKING: Added a note about using GtkDoc and documenting IDL
 	files.

	* bonobo/gnome-object.c (gnome_object_query_interface): Documented.
	(gnome_object_add_interface): Documented.
	(gnome_object_corba_objref): Documented.
	(gnome_object_get_servant): New function.

	* bonobo/gnome-moniker.h: Added the bind_function_closure field.

	* bonobo/gnome-moniker.c (gnome_moniker_new): New function to create a moniker.
	(impl_bind_to_object): Pass the closure to bind_function.
	(gnome_moniker_construct): Documented.
	(gnome_moniker_get_type): Documented.

	* bonobo/gnome-embeddable-factory.c
 	(gnome_embeddable_factory_construct): Documented.
	(gnome_embeddable_factory_set): Documented.  Fixed to set the
 	callback closure.
	* bonobo/gnome-emeddable-client.c: Reworded inline docs.

1999-07-07  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-stream-fs.c (fs_copy_to): Re-indented this
 	function.
	(gnome_stream_fs_create): Added API documentation for
 	gnome_stream_fs_get_type, gnome_stream_fs_construct,
 	gnome_stream_fs_open, and gnome_stream_fs_create.

	* HACKING: New file.

1999-07-06  Miguel de Icaza  <miguel@gnu.org>

	* More renaming.  We go back to GnomeObject for the
	implementation and we only keep GNOME::Unknown as the interface.

	* Renamed BonoboObject interface to Embeddable.

	* More to come, hold on.

1999-07-05  Elliot Lee <sopwith@redhat.com>

	* bonobo/gnome-component-factory.c
	(impl_GNOME_ComponentFactory_create_object): Use
	gnome_unknown_corba_objref here.  

	Make the code CORBA_Object_duplicate return values from
	implementation functions.
	
	* bonobo/gnome-unknown.h: Revamped the query interface mechanism

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_client_site): ditto.

	* bonobo/gnome-storage.c (impl_create_stream): ditto.
	(impl_open_stream): ditto.
	(impl_create_storage): ditto.
	(impl_open_storage): ditto.

	* bonobo/gnome-object-client.c (gnome_unknown_client_destroy): ditto.

	* bonobo/gnome-bonobo-object.c (impl_GNOME_BonoboObject_new_view): ditto.

	* bonobo/gnome-client-site.c (gnome_client_site_bind_bonobo_object): ditto.
	(impl_GNOME_client_site_get_moniker): ditto.
	(impl_GNOME_client_site_get_container): ditto.

	* bonobo/gnome-component-client.c
	(gnome_bonobo_object_client_new_view): ditto.
	(gnome_bonobo_object_client_get_verbs): ditto.
	(gnome_view_client_do_verb): ditto.


1999-07-06  Elliot Lee  <sopwith@redhat.com>

	* configure.in: s/gnome-object/gnome-unknown/

1999-07-05  Miguel de Icaza  <miguel@gnu.org>

	* components/image-x-png/bonobo-image-x-png.c: Make it use
	GNOME::Unknown as well.
	* components/text-plain/bonobo-text-plain.c (bonobo_object_factory): ditto.

	* idl/*, src/*: Changed from GNOME::obj to GNOME::Unknown. 

1999-06-28  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-ui-handler.h: Removed toolbar IDs.  Fixed some
 	return values.  Added some routines.

	* idl/gnome-ui-handler.idl (GNOME::UIHandler): Added object method
 	prototypes.

	* bonobo/gnome-ui-handler.h: Added sensitivity and hidden fields
 	to the GnomeUIHandlerMenuItem.  Changed return value of a bunch of
 	functions to void.

1999-06-26  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.h: Include bonobo/gnome-view-frame.h.
	(GnomeView): Added a field to store the GNOME_ViewFrame for this
 	View.

	* bonobo/gnome-component.c (impl_GNOME_BonoboObject_new_view):
 	Save a handle to the ViewFrame.

1999-06-26  Jaka Mocnik  <jaka.mocnik@kiss.uni-lj.si>

	bonobo/test-container-autoload.c (application_new): set default
	size and resizing policy (makes it behave better with ps component).

1999-06-26  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-persist-file.h: new file.

	* bonobo/gnome-persist-file.c: new file.

1999-06-23  Matt Loper  <matt@gnome-support.com>

	* bonobo/test-container-autoload.c
	(add_object_to_container): Add buttons for each containee, which
	correspond to loading and destruction of that containee. Also
	renamed.
	(gnome_object_has_interface): new function.
	(destroy_embedded_object_cb): new function.  
	(cancel_hydrating_object_from_file_cb): new function.
	(hydrate_object_from_file_cb): renamed.
	(create_persist_file_dialog_cb): renamed.
	Commenting.

1999-06-22  Tomas Ogren  <stric@ing.umu.se>

	* configure.in: Added 'sv' to ALL_LINGUAS

1999-06-22  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-component.idl (GNOME): Moved do_verb to the View.
  	Prefixed all standard bonobo verbs with "bonobo_".
	(GNOME::ViewFrame): Added the view_activated method.
	(GNOME): Fixed a typo in the get_verb_list comment.

	* components/text-plain/bonobo-text-plain.c (view_data_t): Keep
 	track of our View and ViewFrame, and the internal widgets we will
 	need to unref when the View is destroyed.
	(destroy_view): Unref the widgets we're done with and unref our
 	ViewFrame object.
	(bonobo_object_destroy_cb): New function to handle destroying the
 	BonoboObject and all its views.
	(verb_struct): Simple structure to pair verb names with their
 	functions.
	(view_do_verb_cb): This is the do_verb signal handler.  It
 	dispatches to the appropriate verb handling function.
	(verb_bonobo_activate): New function to handle activation.  All it
 	does is tell the container's ViewFrame that we're active.  The
 	ViewFrame will then uncover us so that we can receive X events.
	(view_factory): CORBA_Object_duplicate the ViewFrame interface so
 	that we can hang onto it.  Also save the widgets we need to unref
 	later.
	(create_menu_string): Takes a list of GnomeUIInfos and creates a
 	menu string.  Ignore all this menu stuff for now; it will all
 	change soon.
	(bonobo_object_factory): Connect to the destroy signal for the
 	BonoboObject.  Build a verb list.

	* components/image-x-png/bonobo-image-x-png.c (view_factory): Take
 	the view frame as a parameter.

	* bonobo/test-container.c (view_frame_activated_cb): New function
 	to handle the view_activated signal on the ViewFrame.
	(add_view): Use gnome_bonobo_object_client_new_view_simple now,
 	since it sets up the verb handler for BonoboObject activation.
  	Removed the call to gnome_bonobo_object_client_activate, since we
 	can now do activation properly.

	* bonobo/test-container-autoload.c (add_object_cmd): Use
 	gnome_bonobo_object_client_new_view, since
 	gnome_bonobo_object_new_view changed names.

	* bonobo/sample-server.c (view_factory): Take the ViewFrame as an
 	argument.

	* bonobo/gnome-wrapper.c (gnome_wrapper_realize): Added
 	GDK_BUTTON_PRESS_MASK to the event mask for the wrapper.

	* bonobo/gnome-view.c: Added a DO_VERB signal, since do_verb was
 	moved from the GNOME::BonoboObject to the GNOME::View.
	(gnome_view_construct): Added precondition that corba_view isn't
 	CORBA_OBJECT_NIL.
	(init_view_corba_class): Add do_verb to the epv.
	(gnome_view_class_init): Create a do_verb signal.
	(impl_GNOME_View_do_verb): New function to handle do_verb.

	* bonobo/gnome-view.h: Added do_verb to the GnomeViewClass.

	* bonobo/gnome-simple-source.c
 	(gnome_simple_data_source_construct): Added precondition that
 	corba_ssource isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-progressive.c
 	(gnome_progressive_data_sink_construct): Added precondition that
 	corba_psink isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-persist.c (gnome_persist_construct): Added
 	precondition that corba_persist isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_construct):
 	Added precondition that corba_ps isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-inplace-site.c (gnome_inplace_site_construct):
 	Added preconditions where none were.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_construct):
 	Added precondition that gfm_corba isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-component.c (enum): Removed DO_VERB.
	(impl_GNOME_BonoboObject_do_verb): Removed.
	(impl_GNOME_BonoboObject_new_view): Now takes a GNOME::ViewFrame
 	as a parameter and passes it to the view factory.
	(gnome_bonobo_object_epv): Removed do_verb.
	(gnome_bonobo_object_class_init): Removed DO_VERB signal.

	* bonobo/gnome-component.h: Removed do_verb signal handler pointer
 	from GnomeBonoboObjectClass.  Updated prototypes to reflect the
 	changes described above.

	* bonobo/gnome-component-client.c
 	(gnome_bonobo_object_client_new_view): Renamed from
 	gnome_bonobo_object_new_view, since it is not a method on a
 	GNOME::BonoboObject, but a helper function that the client uses.
	(gnome_bonobo_object_client_new_view_simple): Likewise.
	(gnome_bonobo_object_client_get_verbs): Likewise.
	(gnome_bonobo_object_client_free_verbs): Likewise.
	(gnome_view_client_do_verb): Likewise.
	(gnome_bonobo_object_client_new_view_simple): Connect to the
 	button_pres_event on the ViewFrame, not the server object.
	(gnome_view_client_do_verb): Now acts on a View, not a
 	BonoboObject.
	(wrapper_button_press_cb): Activate the view corresponding to this
 	wrapper when we get a double click.

	* bonobo/gnome-component-client.h: Include bonobo/gnome-view.h.
  	Updated function prototypes to reflect changes described above.

1999-06-22  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-component-factory.c: Rename BonoboObjectFactory to
	ComponentFactory, and make it useful to _anyone_ that wants
	convenience functions for implementing/exposing a factory that
	creates components.
	(gnome_component_factory_new_bonobo_object): Removed `name', as
	there's no use for create_path anymore.

	* bonobo/gnome-component-factory.h: likewise. Remove path from
	GnomeComponentFactoryFn.

	* bonobo/sample-server.c (bonobo_object_factory): Changed to
	return a GnomeObject.
	(init_server_factory): Changed to make a GnomeComponentFactory.

	* components/text-plain/bonobo-text-plain.c
	(bonobo_object_factory): Return GnomeObject.
	(init_bonobo_text_plain_factory): Call
	gnome_component_factory_new, as per name change.

	* components/image-x-png/bonobo-image-x-png.c
	(bonobo_object_factory): Return GnomeObject.
	(init_bonobo_image_x_png_factory): Call
	gnome_component_factory_new, as per name change.

	* components/audio-ulaw/bonobo-audio-ulaw.c (component_factory):
	No need for path. Return GnomeObject.
	(init_bonobo_audio_ulaw_factory): call
	gnome_component_factory_new, as per name change.	

	* bonobo/gnome-dot.h: old file removed.
	
1999-06-14  Jaka Mocnik  <jaka.mocnik@kiss.uni-lj.si>

	* bonobo/bonobo-stream-fs.c (fs_copy_to): implemented.
	(gnome_stream_fs_open): always g_free(full).

1999-06-13  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* doc/Bonobo.sgml: fixed typo ("funtion") in ref()/unref() section

1999-06-12  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-component.c
	(impl_GNOME_BonoboObject_set_client_site): Duplicate reference here.
	(impl_GNOME_BonoboObject_get_client_site): Duplicate return value
	here. 
	(impl_GNOME_BonoboObject_new_view): Duplicate return value here.

	* bonobo/gnome-object.c (gnome_object_construct): Duplicate the
	CORBA_Object_duplicate at construction time.
	(gnome_object_activate_servant): Do not duplicate the object
	here, this addresses the concerns I had.

	Added in-line api documentation for the whole file.

	* doc/Bonobo.sgml: Extended the Bonobo documentation a bit with
	more information on query_interface.

1999-06-11  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-file-moniker.c (map_file): helper function. Is
	there already a function to do this?

	* bonobo/gnome-moniker.h: Add find_moniker_in_naming_service.

	* bonobo/gnome-moniker.c (find_moniker_in_naming_service): New function.

	* bonobo/gnome-moniker.c (impl_bind_to_object): Changed it to take
	a GNOME_BindOptions* struct instead of a BindContext CORBA object.
	(impl_bind_to_storage): same.
	(impl_get_display_name): same.
	(impl_parse_display_name): same.

	* bonobo/gnome-moniker.h: Changed GnomeMonikerBindFn to take a
	GNOME_BindOptions struct.

	* idl/gnome-moniker.idl: Added BindOptions struct, which is
	analogous to GNOME::BindContext. I don't think we'll need the
	CORBA object form of BindContext; we'll see. . .

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): New
	function, which acts as the filemoniker-specific binding function.
	(gnome_file_moniker_construct): Give gnome_file_moniker_bind to
	gnome_moniker_construct.

1999-06-10  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-file-moniker.h: Change gnome_file_moniker_new to
	take filename and goad_id as params.  Changed
	gnome_file_moniker_construct to take filename and goad_id as
	params.

	* bonobo/gnome-moniker.h: Add a GnomeMonikerBindFn type to
	GnomeMoniker. Include gnorba.h. Add binding_function to
	gnome_moniker_construct.

	* bonobo/gnome-moniker.c (gnome_moniker_construct): Initialize a
	GnomeMoniker's bind_function here.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_new): Changed
	signature and body to reflect goad_id/filename basis for
	GnomeFileMoniker.
	(gnome_file_moniker_construct): Changed to reflect
	goad_id/filename basis for GnomeFileMoniker

	* bonobo/gnome-file-moniker.h: changed GnomeFileMoniker to be
	defined in terms of a goad_id and a filename.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_destroy):
	Changed to reflect the above.

1999-06-10  Nat Friedman  <nat@gnome-support.com>

	* bonobo/test-container.c: Added comment at top of file.

	* bonobo/sample-server.c (main): Return an int.

	* bonobo/gnome-component-client.c: Include gdktypes.h
	(view_frame_activated_cb): New simple default callback function to
 	attach to the view_activated signal of a newly-created
 	GnomeViewFrame.  Uncovers the BonoboObject by removing the
 	GnomeWrapper.  For use with gnome_bonobo_object_new_view_simple.
	(wrapper_button_press_cb): New simple default callback function to
 	attach to the button_press_event signal of a GnomeWrapper.  Sends
 	the bonobo_open verb to the contained BonoboObject when the user
 	double clicks on the GnomeWrapper.  For use with
 	gnome_bonobo_object_new_view_simple.
	(gnome_bonobo_object_new_view_simple): New function to make it
 	easy to setup a new view of an existing BonoboObject.

1999-06-09  Matt Loper <matt@gnome-support.com>

	* bonobo/test-container.c (add_image_cmd): Released `persist' properly.
	(add_text_cmd): likewise.

	* bonobo/test-container-autoload.c: Include
	bonobo/gnome-stream-fs.h rather than a local version.
	(hydrate_object_from_file): Release `persist' properly. Also some
	minor commenting.

1999-06-08  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-component.idl (ViewFrame): Added the GNOME::ViewFrame interface.
	(BonoboObject): Added the ViewFrame argument to new_view.

	* idl/gnome-client-site.idl (show_window): No longer oneway.

	* components/text-plain/bonobo-text-plain.c: Added
	progressive_data field to the BonoboObject private data structure
	to keep track of whether or not the component is in the process of
	receiving data view the ProgressiveDataSink.
	(progressive_start): Set bonobo_object_data->progressive_data to TRUE.
	(progressive_end): Set bonobo_object_data->progressive_data to FALSE.
	(view_factory): Only hide the progress meter if we're not
	receiving progressive data.

	* bonobo/test-container.c (text_client_site): New global variable
	to cache the client site associated with the text_obj
	BonoboObject.
	(image_client_site): Ditto for image_png_obj.
	(launch_server): Take the GnomeClientSite as a paramter.
	(add_view): Take the GnomeClientSite as an argument so it can be
	passed to gnome_bonobo_object_new_view.  Get the GnomeWrapper from
	the ViewFrame.  Return the ViewFrame, not the wrapper.
	(add_cmd): Create the client site and return it in a new
	parameter.  Pass it to add_view.
	(add_demo_cmd): Pass &client_site to add_cmd.
	(add_image_cmd): Pass &image_client_site to add_cmd.
	(add_image_view): Pass image_client_site to add_view.
	(add_text_cmd): Pass &text_client_site to add_cmd.
	(add_text_view): Pass text_client_site to add_view.

	* bonobo/test-container-autoload.c (launch_server): Added a
	client_site parameter.  Don't create the client_site here.
	(add_object_cmd): Create the client site here and pass it to
	launch_server.  Pass the client site to
	gnome_bonobo_object_new_view .  Get the view_widget from the
	view_frame that new_view returned.

	* bonobo/gnome-object-client.h: Changed views list to view_frames.

	* bonobo/gnome-component-client.h: Include gnome-client-site.h and
	gnome-view-frame.h.
	(gnome_bonobo_object_new_view): Changed prototype to have
	client_site argument.

	* bonobo/gnome-component-client.c (destroy_view_frame): Thre
	destroy_view function was renamed to this.  Remove the specified
	ViewFrame from the GnomeClientSite's ViewFrame list.
	(gnome_bonobo_object_client_activate): Get the wrapper from the
	ViewFrame list.
	(gnome_bonobo_object_client_deactivate): Likewise.

	(gnome_bonobo_object_new_view): Take the GnomeClientSite as an
	argument.  Create the view frame for the new view and return it.
	Associate the view and the view frame with the cover.

	* bonobo/Makefile.am (libbonobo_la_SOURCES): Added gnome-view-frame.c
	(libbonoboinclude_HEADERS): Added gnome-view-frame.h

1999-06-08  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view.c (gnome_view_class_init): Parent is
	GNOME::obj, not GtkObject.
	
	* bonobo/gnome-container.c (gnome_container_class_init): ditto.
	* bonobo/gnome-component-factory.c (gnome_bonobo_object_factory_class_init): ditto.
	* bonobo/gnome-bind-context.c (gnome_bind_context_class_init): ditto

1999-06-07  Matt Loper  <matt@gnome-support.com>

	* idl/gnome-persist.idl (GNOME): Added a `WrongDataType' exception
	to the load functions in PersistFile, PersistStorage, and
	PersistStream.

1999-06-06  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (text_inserted_cb):
 	New function to catch "insert_text" signals on a view.  Adds the
 	new text to all existing views and adds it to BonoboObject's
 	internal data.
	(text_deleted_cb): New function to catch "delete_text" signals on
 	a view.  Deletes the appropriate text from all existing views and
 	removes it from the BonoboObject's internal data.
	(view_factory): Use a table instead of a vbox to store the
 	progress bar and the scrollable window.  Add any existing
 	BonoboObject text into the new view when it is created.  Connect
 	to the "insert_text" and "delete_text" signals.

	* components/image-x-png/bonobo-image-x-png.c (view_factory):
 	Removed call to gtk_widget_set_usize.

	* bonobo/test-container.c (image_png_obj): New global variable to
 	hold a pointer to an existing image/x-png BonoboObject.
	(add_view): New function.  Creates a new view from a
 	BonoboObject's GnomeObjectClient.
	(add_cmd): Modified to use add_view.
	(add_image_cmd): Store a pointer to the new image BonoboObject in
 	image_png_obj.
	(add_image_view): New function to add a new view of an existing
 	image/x-png BonoboObject.
	(add_text_view): New function to add a new view of an existing
 	text/plain BonoboObject.
	(container_text_plain_menu): New menu subtree for all the
 	text/plain operations.
	(container_image_png_menu): New menu subtree for all the
 	image/x-png operations.
	(container_file_menu): Removed image/x-png and text/plain
 	operations.
	(container_main_menu): Added subtree entries for
 	container_text_plain_menu and container_image_png_menu.

	* bonobo/gnome-component.c (gnome_bonobo_object_remove_verb): Cast
 	l->data to a char * in the strcmp to avoid a compiler warning.

1999-06-04  Richard Hestilow  <hestgray@ionet.net>

	* bonobo/gnome-bonobo-selector.h: Use 
	'GnomeBonoboSelectorPrivate *priv" instead of "gpointer priv" so
	as to avoid ugly casting.
	
1999-06-04  Chris Lahey  <clahey@umich.edu>

	* components/audio-ulaw/doc/C/Makefile.am,
	components/image-x-png/doc/C/Makefile.am: Fixed make distcheck.

1999-06-03  Richard Hestilow  <hestgray@ionet.net>
	
	* bonobo/gnome-bonobo-selector.[ch]: Updated to use the new private
	fields - didn't bother leaving compat fields in though, as nothing
	uses this code yet :-)

1999-06-02  Nat Friedman  <nat@gnome-support.com>

	* components/image-x-png/doc/C/image_x_png.sgml: Rewrote the
 	summary.  Changed some of the section titles.

	* components/image-x-png/bonobo-image-x-png.c (save_image): New
 	function implementing GNOME::PersistStream.save.
	(stream_write): New fuhnction.  Helper for save_image.
	(bonobo_object_factory): Setup callback to save_image for
 	GNOME::PersistStream.save.

1999-06-01  Chris Lahey  <clahey@umich.edu>

	* configure.in, components/Makefile.am: Added audio-ulaw subdirectory.

	* components/audio-ulaw/Makefile.am,
	components/audio-ulaw/.cvsignore: Files needed for compilation and cvs.

	* components/audio-ulaw/audio-ulaw.gnorba: Description of this
	component for gnorba to use.

	* components/audio-ulaw/color.h, components/audio-ulaw/color.c:
	These are borrowed almost exactly from gnumeric/src/color.[ch].
	They handle color allocation.

	* components/audio-ulaw/bonobo-audio-ulaw.h,
	components/audio-ulaw/bonobo-audio-ulaw.c: The bonobo component.
	Uses item-audio to display audio/ulaw data.

	* components/audio-ulaw/item-audio.h,
	components/audio-ulaw/item-audio.c: This is the gnome-canvas item
	which displays the audio data.

	* components/audio-ulaw/: Added a audio/ulaw component.

1999-06-01  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (view_data_t): Added a
 	progress field for the progress bar widget.
	(view_destroy_cb): Renamed destroy_view to this.
	(blank_all_views): Hide the progress bar.
	(progressive_update): Removed the old progress meter code.  Update
 	the new progress bar widget.
	(progressive_start): Show the progress bar.
	(progressive_end): Removed the old progress meter code.  Hide the
 	progress bar widget.
	(view_factory): Create a vbox to hold both the GtkText and the new
 	GtkProgressBar.

	* bonobo/gnome-progressive.h (GnomeProgressiveDataSinkAddDataFn):
 	Made the iobuf const.
	(GnomeProgressiveDataSinkClass): Made the iobuf in the add_data_fn
 	callback's paramter list const.

	* bonobo/gnome-progressive.c (impl_add_data): Made the iobuf
 	parameter const to match the skels.
	(gnome_progressive_data_sink_add_data_nop): Removed the
 	CORBA_Environment parameter.

	* bonobo/gnome-view.c (impl_GNOME_View_set_window): Moved the call
 	to gtk_widget_show_all before the gtk_container_add so that the
 	component can control when its subwidgets are displayed.

	* bonobo/gnome-inplace-site.c (create_inplace_site): Removed
 	unused untyped variable corba_class_inited.

1999-05-31  Nat Friedman  <nat@gnome-support.com>

	* bonobo/test-container.c (timeout_next_line): Call
 	GNOME_ProgressiveDataSink_end when the whole file has been sent.
  	Then free the tmt struct, close the file, and release the
 	interface object.

	* bonobo/test-container.c (send_text_cmd): Stat the file and call
 	GNOME_ProgressiveDataSink_set_size.
	
1999-06-01  Elliot Lee <sopwith@redhat.com>

	* bonobo/gnome-object.[ch]: Removed servant_to_object hash table.
  	Now all servants store a gnome_object pointer for
 	servant->GnomeObject translation.

	* bonobo/*.[ch]: Changes to match above.

1999-06-01  Richard Hestilow  <hestgray@ionet.net>

	* bonobo/gnome-bonobo-selector.[ch]: New widget, a dialog
	that prompts the user to select from a filtered list of goad servers.

	* bonobo/selector_test.c: Test program for aforementioned widget
	
	* bonobo/Makefile.am: added new sources, test program

1999-06-01  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object.c: Removed object_to_servant hash table.
	Now the GnomeObject contains a pointer to the servant.

1999-05-31  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (SHOW_PROGRESS_INFO):
 	Define this for kicks.
	(bonobo_object_data_t): Added total_size field.
	(progressive_set_size): New function.
	(progressive_end): Likewise.
	(bonobo_object_factory): Hook up the callbacks for progressive_end
 	and progressive_set_size.
	(progressive_update): Update the progress meter.

1999-05-31  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component-client.c (gnome_bonobo_object_get_verbs):
	Helper routine to fetch the verbs supported by an embedded
	BonoboObject.
	(gnome_bonobo_object_free_verbs): Routine to release the return
	value returned from gnome_bonobo_object_get_verbs.

	* idl/gnome-component.idl (BonoboObject): Verbs are now only
	strings.  No code is now passed.
	
	* bonobo/gnome-component.c (gnome_bonobo_object_remove_verb,
	gnome_bonobo_object_add_verb, gnome_bonobo_object_add_verbs):
	Change the API to only use strings.

	* bonobo.spec.in (Obsoletes): Include *Conf.sh files in distribution.

	* bonobo/Makefile.am (EXTRA_DIST): Include corba_DATA in
	distirbution. 

1999-05-30  Matt Loper  <matt@gnome-support.com>

	* idl/gnome-component.idl (GNOME): Changed the GNOME::Component
	interface to GNOME::BonoboObject. This implies changes in all of
	the following files.

	* idl/gnome-persist.idl (GNOME): likewise

	* idl/gnome-inplace.idl (GNOME): likewise

	* components/text-plain/text-plain.gnorba: likewise

	* components/text-plain/bonobo-text-plain.c: likewise

	* components/image-x-png/image-x-png.gnorba: likewise

	* components/image-x-png/bonobo-image-x-png.c: likewise

	* bonobo/test-container.c: likewise

	* bonobo/test-container-autoload.c: likewise 

	* bonobo/sample.gnorba: likewise

	* bonobo/sample-server.c: likewise

	* bonobo/gnome-object.c: likewise

	* bonobo/gnome-inplace-component.c: likewise

	* bonobo/gnome-container.c: likewise.

	* bonobo/gnome-component.h: likewise

	* bonobo/gnome-component.c: likewise

	* bonobo/gnome-component-io.h: likewise

	* bonobo/gnome-component-io.c: likewise

	* bonobo/gnome-component-factory.h: likewise

	* bonobo/gnome-component-factory.c: likewise

	* bonobo/gnome-component-client.h: likewise

	* bonobo/gnome-component-client.c: likewise

	* bonobo/gnome-client-site.h: likewise

	* bonobo/gnome-client-site.c:likewise

1999-05-29  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (view_factory): Put
	the GtkText widget in a scrolled window.

1999-05-28  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c
	(progressive_add_data): Removed the call to
	GNOME_SimpleDataSource_pop_data.  Now just use the buffer that
	comes from add_data.

	* bonobo/test-container.c (struct progressive_timeout): Now stores
	much less information since we don't need to manage a
	SimpleDataSource.  It now only stores the file we're loading data
	from and the GNOME_ProgressiveDataSinik.
	(ssource_pop_data): Removed, since we're no longer using the
	SimpleDataSource.
	(ssource_remaining_data): Likewise.
	(timeout_next_line): Modified to just send a buffer with add_buff.
	(send_text_cmd): No longer creates a SimpleDataSource interface
	object.

	* bonobo/gnome-progressive.h (GnomeProgressiveDataSinkAddDataFn):
	Modified to reflect the change in the interface to add_data.
	(GnomeProgressiveDataClass): Likewise.

	* bonobo/gnome-progressive.c (impl_add_data): Modified to reflect
	the change in the interface to add_data, which only takes one
	argument now.
	(gnome_progressive_data_sink_add_data_nop): Likewise.

	* bonobo/gnome-bonobo.h: Don't include gnome-simple-source.h

	* idl/gnome-progressive.idl: Removed SimpleDataSource interface.

	* bonobo/Makefile.am: Removed gnome-simple-source.c and
	gnome-simple-source.h

1999-05-28  Raja R Harinath  <harinath@cs.umn.edu>

	* configure.in (AC_OUTPUT): Remove 'sed .. POTFILES' expression.
	(AM_GNOME_GETTEXT): Use instead of AM_GNU_GETTEXT.
	(BONOBO_INCLUDEDIR): Use $GNOME_CONFIG instead of calling
	gnome-config directly.
	(BONOBO_LIBS): Likewise.

	* bonobo/Makefile.am (idl_flags): Use $(GNOME_CONFIG) instead of
	calling `gnome-config' directly.
	($(CORBA_SOURCE)): Use $(ORBIT_IDL) instead of calling `orbit-idl'
	directly. 

	* components/text-plain/Makefile.am (bonobo_text_plain_LDADD): 
	Use $(top_builddir) not $(top_srcdir).
	* components/image-x-png/Makefile.am (bonobo_image_x_png_LDADD): 
	Likewise.
	
1999-05-28  Nat Friedman  <nat@gnome-support.com>

	* Makefile.am (SUBDIRS): Added components.

	* bonobo/gnome-simple-source.c: New file which implements the
	GNOME::SimpleDataSource interface.
	* bonobo/gnome-simple-source.h: New file.

	* bonobo/gnome-progressive.c: New file which implements the
	GNOME::ProgressiveDataSink interface.
	* bonobo/gnome-progressive.h: New file.

	* idl/gnome-progressive.idl: New file which defines the interfaces
	for GNOME::ProgressiveDataSink and GNOME::SimpleDataSource, which
	work together to provide an interface for progressive loading of
	slow data streams to components.

	* idl/gnome-component.idl: Fixed comment.

	* idl/Makefile.am (idl_DATA): Added gnome-progressive.idl.

	* components/text-plain/bonobo-text-plain.c (free_text): Set
	component_data->text to NULL after freeing it.
	(blank_all_views): Don't blank blank views.
	(update_all_views): New function to perform non-progressive
	display updating, as occurs after new data is loaded through the
	PersistStream interface.
	(progressive_update): Renamed progressive_update_all_views to
	this.  It also updates the component data and is modified to take
	a char * buffer and a byte count.
	(stream_read): Don't call CORBA_exception_free, since we have a
	global exception.  Don't progressively update the display as we
	read data; stream_read is only used as a helper function for the
	PersistStream interface now.  Return -1 on error and 0 on success.
	(pstream_load): Renamed load_text_from_stream to this.  Modified
	to only update the display after the entire stream has been
	loaded.
	(pstream_save): New function to implement
	GNOME::PersistStream:save.
	(progressive_start): New function to implement
	GNOME::ProgressiveDataSink:start.
	(progressive_add_data): New function to implement
	GNOME::ProgressiveDataSink:add_data.
	(component_factory): Add the GNOME::ProgressiveDataSink interface.

	* bonobo/test-container.c: Added struct progressive_timeout to
	hold the closure data that needs to be sent to the timeout.
	(ssource_pop_data): New function.  Implements the
	GNOME::SimpleDataSource:pop_data method for progressive loading.
	(timeout_next_line): New function.  Timeout callback to send new
	data to the text/plain BonoboObject using the ProgressiveDataSink
	interface.
	(send_text_cmd): Modified to use ProgressiveDataSink.
	(container_file_menu): New accelerators.
	(ssource_remaining_data): New function to implement the
	GNOME::SimpleDataSource:remaining_data method.

	* bonobo/gnome-persist-stream.h: Added get_size_max_fn to
	GnomePersistStream.

	* bonobo/gnome-persist-stream.c (impl_get_size_max): Try to call
	the user-provided get_size_max function if it is available.

	* bonobo/gnome-bonobo.h: Include gnome-stream.h,
	gnome-stream-fs.h, gnome-progressive.h and gnome-simple-source.h

	* bonobo/Makefile.am (libbonobo_la_SOURCES): Added
	gnome-progressive.c and gnome-simple-source.c.
	(libbonobo_la_SOURCES): Added gnome-progressive.h and
	gnome-simple-source.h

	* bonobo/Makefile.am (idls): Added gnome-progresive.idl to idls
	list.

1999-05-28  Matt Loper  <matt@gnome-support.com>

	* bonobo/test-container-autoload.c: New file.

1999-05-27  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* doc/.cvsignore: added file

	* bonobo/test-container.c (main): fix compiler warnings
	(should bonobo.h include gnome-stream-fs.h? 
	if so: remove #include <bonobo/gnome-stream-fs.h> from here)
	
1999-05-24  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-storage-repo.c (gnome_storage_repo_class_init):
	Method rename from delete to erase to deal with C++.

	* bonobo/gnome-storage.c (init_storage_corba_class): ditto

	* idl/gnome-storage.idl: ditto.

1999-05-27  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c (gnome_component_remove_verb): Add
	routines for registering and unregistering verbs. 

	* bonobo/gnome-container.c (corba_container_class_init): Use corba
	init class mechanism instead of online initialization.

	* bonobo/gnome-view.c (impl_GNOME_View_size_allocate): Pass the
	size on the component to the actual widget.

	* bonobo/gnome-component-client.c (size_allocate): Propagage size
	changes to the client.

1999-05-27  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* idl/gnome-component.idl: change a "Baboon" -> "Bonobo"

1999-05-27  Michael Meeks  <michael@imaginator.com>

	* idl/gnome-persist.idl: Polish docs.

	* idl/gnome-inplace.idl: typo.

1999-05-26  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* components/text-plain/.cvsignore: added file

	* doc/Bonobo.sgml: changed some GNOME::object -> GNOME::obj

	* bonoboConf.sh.in: typo: XML -> Bonobo

1999-05-26  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* idl/Makefile.am (idl_DATA): Removed gnome-base.idl and
	gnome-object.idl from the list of files.

	* bonobo/Makefile.am (idls): Likewise.

1999-05-26    <sopwith@moebius.labs.redhat.com>

	* idl/bonobo.idl: Use GnomeObject.idl (from gnome-libs) instead of
	gnome-object.idl and gnome-base.idl

1999-05-26  Nat Friedman  <nat@nat.org>

	* components/text-plain/bonobo-text-plain.c (blank_all_views): New
 	function.
	(progressive_update_all_views): New function.
	(stream_read): Update the display as the data comes in.
	(load_text_from_stream): Updated to use the progressive display.
	(component_factory): No default text.
	(view_factory): No default text.

	* bonobo/test-container.c (add_text_cmd): Load /usr/dict/words.
	(text_obj): New variable.
	(send_text_cmd): New callback to send /tmp/pipe to the current
	text component.  To show off progressive loading.
	(container_file_menu): Added a menu entry for send_text_cmd.

1999-05-26  Nat Friedman  <nat@nat.org>

	* components/image-x-png/bonobo-image-x-png.c (view_factory): Add
 	the new view to the component_data's view list.

	* bonobo/test-container.c (add_text_cmd): New function to embed a
 	text/plain component.
	(container_file_menu): Added a menu item to embed a text/plain
 	component.

	* configure.in: Added components/text-plain/Makefile to the build
 	list.

	* components/text-plain/text-plain.gnorba (location_info): New file.

	* components/text-plain/Makefile.am: New file.

	* components/text-plain/bonobo-text-plain.c: New component to
 	implement the text/plain display component.

1999-05-25  Nat Friedman  <nat@nat.org>

	* components/image-x-png/image-x-png.gnorba (location_info):
 	Changed the description to "image/x-png component factory" for the
 	component-factory:image-x-png entry.
 
	* bonobo/test-container.c (add_cmd): Removed unused 'socket'
 	variable.  This stuff is handled in gnome-component-client.c these
 	days anyway.
	(add_cmd): Added call to gnome_component_client_activate.
	(add_image_cmd): Display a warning if the component can't be
 	added.
	(container_file_menu): Use the GNOMEUIINFO_MENU_EXIT_ITEM macro.

	* bonobo/gnome-component.c (gnome_component_class_init): Inherit
 	from GnomeObject, not GtkObject.
	(gnome_component_class_init): Added missing call to
 	gtk_object_class_add_signals.  Verbs now work.

	* bonobo/gnome-component-client.h: Added prototypes for
 	gnome_component_client_activate and
 	gnome_component_client_deactivate.

	* bonobo/gnome-component-client.c (gnome_component_new_view):
 	Don't call gtk_container_add on the socket twice.
	(gnome_component_client_deactivate): Renamed
 	gnome_object_client_deactivate to
 	gnome_component_client_deactivate.
	(gnome_component_client_activate): Renamed
 	gnome_object_client_activate to
 	gnome_component_client_activate.

1999-05-25  Havoc Pennington  <hp@pobox.com>

	* bonobo/gnome-component.c (impl_GNOME_Component_do_verb): Cast
	the varargs arguments to be sure they're the right size

	* bonobo/gnome-storage.h, bonobo/gnome-storage.c,
	idl/gnome-storage.idl:
	s/delete/erase (fixes from LE)

1999-05-18  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* idl/gnome-storage.idl (interface Stream):
 	added new functions close, eos, length. seek now returns the 
	current position.
	* idl/gnome-storage.idl (interface Storage):
	renamed destory to delete 
	
1999-05-16  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/gnome-object.idl, idl/*.idl: Renamed GNOME::object to
	GNOME::obj to make it complain to the CORBA standard (they do not
	let use use object in any case-sensitive fashion).

	* bonobo/gtk-interfaces.c: Simplified the code, cleaned up, and
	address the bug pointed out by Jacob: interfaces were not being
	propagated to all of the conforming objects, only to the last 2
	objects being assembled.

	* bonobo/object_test.c (test2): Extended interfaces tests to cover
	the bug found by Jacob.

	* bonobo/gtk-interfaces.c (gtk_object_query_interface): Use
	gtk_get_interface here, so that we can do query (A, A) and get A.
	Thanks to Dietmar for pointing this out.

1999-05-10  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-storage-fs.c (gnome_storage_fs_get_type): use
	initialization class.

1999-05-14  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-stream-fs.c (fs_write): small fix 
	(gnome_stream_fs_create): added O_RDWR to open flags
	* bonobo/gnome-storage-fs.c 
	(gnome_storage_fs_create): small fix 
	* bonobo/gnome-storage-repo.[hc]: new files (librepo interface) 
	* bonobo/gnome-stream-repo.[hc]: new files (librepo interface)

1999-05-12  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-storage.[hc]: added destroy function
	
1999-05-11  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-storage.c (impl_*): don't access storage->object
	if object == NULL.
	
1999-04-28  Jacob Berkman  <jberk+@cmu.edu>

	* idl/Makefile.am (idl_DATA): install the .idl files in
	$(datadir)/idl

1999-04-28  Jacob Berkman  <jberk+@cmu.edu>

	* idl/Makefile.am (idl_files): install gnome-*.idl files now
	* idl/: removed old .idl files

1999-04-28  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object-client.c
	(gnome_object_activate_with_goad_id): Small fix.

	* bonobo/gnome-client-site.c (gnome_client_site_bind_component):
	Adapt to new GnomeObjectClient existance.

	Added documentation.

	* bonobo/test-container.c: ditto.

	* bonobo/gnome-object-client.c (set_remote_window): New file.
	Includes all the client-side implementation of a remote
	GNOME::object. 

1999-04-27  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/test-container.c,sample-server.c,
	components/image-x-png/bonobo-image-x-png:  Simplify by using the
	gnome-bonobo.h header file.

	* bonobo/gnome-stream-memory.c (mem_read): Typo fix.  And use the
	auto-release feature for sequences from Elliot.

	* bonobo/gnome-stream-fs.c (fs_read): Use the auto-release feature
	here.  Thanks to Elliot for pointing this out.

1999-04-26  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/gnome-storage.idl: Use sequences of octets, not strings for
	the buffers. 

	* bonobo/test-container.c: Improved to have a sample call to
	PersistStream_load
	
	* bonobo/gnome-stream-fs.c (fs_read): Implement this function

	* bonobo/gnome-stream-memory.c (mem_read): Use
	CORBA_octet_allocbuf here instead of malloc.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_get_type): List the
	class initialization routine.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_new): Do not
	use const for the streams.

	* components/image-x-png/bonobo-image-x-png.c (stream_read):
	Implement using CORBA streams instead of the hardcoded values. 

1999-04-24  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c (gnome_component_class_init): Register
	the "do_verb" and "host_name_changed" signals.  
	(impl_GNOME_Component_do_verb): Implement it.

1999-04-23  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object.h: Jesus.  I am a dork.  These should be
	externs.  Thanks to Robert Roebling for pointing this out.

1999-04-22  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-stream-memory.c: New memory-based stream object.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_get_type): Use the
	correct class name here.

1999-04-21  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* components/image-x-png: It loads PNG files now, draws them,
	works.  Hardcoded value currently.  Will fix in a second.
	
	* bonobo/gnome-object.c (gnome_object_activate_with_goad_id):
	Implement activation by goad-id.

	* bonobo/test-container.c (main): Argument line allows you to
	specify the goad id to activate.
	(launch_server): Activate by goad id instead of repo id.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_new): Finish
	implementing. 

1999-04-21  Havoc Pennington  <hp@pobox.com>

	* bonobo/gnome-client-site.h
	bonobo/gnome-component-factory.h
	bonobo/gnome-component.h
	bonobo/gnome-container.h
	bonobo/gnome-dot.h
	bonobo/gnome-inplace-component.h
	bonobo/gnome-inplace-site.h
	bonobo/gnome-object.h
	bonobo/gnome-view.h
	bonobo/gtk-interfaces.h:
	Match BEGIN_GNOME_DECLS with END_GNOME_DECLS in these
	headers.

1999-04-16  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c (gnome_component_new_view): Use a
	GtkCover on top of the Socket.

	* bonobo/gtk-cover.c (gtk_cover_get_type): New file.  An InputOnly
	window used to cover embedded objects. 

1999-04-14  Tomislav Vujec  <tvujec@carnet.hr>

	* configure.in: remove second GNOME_INIT invocation.

	* bonobo/Makefile.am: $(includedir) should be on the end, because in
	$(srcdir) != $(builddir) scenario, bonobo picks up old headers from
	$(includedir)

1999-04-13  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* bonobo/gnome-object.c: #include "gtk-interfaces.h"

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_new): Declare
	gfm_corba as "GNOME_Moniker gfm_corba", not "GNOME_Moniker *gfm_corba".

	* bonobo/gnome-client-site.c (impl_GNOME_client_site_save_object):
	Made static.

1999-04-11  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): Unref
	the remote object here.
	(gnome_client_site_bind_component): Keep track of the remote
	object here. 

1999-04-07  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-stream.c: Base class for stream implementations.
	
	* bonobo/gnome-storage-fs.c: Implemented sample file-system based
	storage. 

	* bonobo/gtk-interfaces.c (gtk_object_query_interface): Do the
	query interface on the hierarchy.

1999-03-31  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-view.c: Use the new corba-class init framework.

1999-04-05  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object.c (impl_GNOME_object_query_interface): Make
	gnome_object_query_interface call gtk_object_query_interface.  We
	need to make gtk_object_query_interface walk the hierarchy
	optionally (ie, to ask for parent classes).  

	This fixes the first part of the problem.  Need to fix the next later.

1999-04-01  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-file-moniker.c, bonobo/gnome-moniker.c: Initial
	implementations. 

1999-03-17  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-bind-context.c: New file. 

1999-03-26  Timur Bakeyev <mc@bat.ru>

	* bonobo/Makefile.am: fixed library inclusion order in $(bonobo_libs).

1999-03-08  Martijn van Beers <martijn@earthling.net>

	* bonobo/Makefile.am: fixed double -I for orbit-idl
	* po/.cvsignore:
	* idl/.cvsignore: New files

1999-03-07  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-inplace-site.c (init_inplace_corba_class): New file.

1999-02-16  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c: New file.  Implements a component.

	* bonobo/gnome-view.c (create_gnome_view): Simplify.
	(gnome_view_construct): New function.

	* bonobo/gnome-object.c (gnome_object_activate_servant): New
	function. 

	* bonobo/gnome-container.c: Implement.

1999-02-06  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* src/gnome-object.c (gnome_object_drop_binding,
	gnome_object_drop_binding_by_servant): New routines to drop the
	bindings by servant and by object.

	* src/gnome-main.c (bonobo_init): Bootstrap routine, plus helper
	routines. 

	* src/gnome-object.h: Provide an environment here.

1999-02-08  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* src/gtk-interfaces.c (gtk_get_interface): Apply the mixins patch
	from Tero.

1999-02-04  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* src/gtk-interfaces.c, src/gtk-interfaces.h: New files.
	Implements gtk-interfaces.
	(gtk_get_interface): Use destroy, not shutdown.

