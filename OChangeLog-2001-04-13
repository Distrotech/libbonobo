2000-11-01  Joe Shaw  <joe@helixcode.com>

	* monikers/bonobo-moniker-http.c (http_parse_display_name): Added a
	hack so that the ! is a seperator and does not invoke the item moniker.

	* monikers/bonobo-moniker-gunzip.c: Added. Decompresses a 
	Bonobo_Stream.

	* monikers/Makefile.am: Build and install the gunzip moniker.

2000-10-31  JP Rosevear  <jpr@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_finalize): Revert unauthorized
	patch (misunderstanding) pending approval.
	
2000-10-31  JP Rosevear  <jpr@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_finalize): bonobo_object_unref
	rather than gtk_object_unref

Tue Oct 31 09:29:17 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* storage-modules/bonobo-stream-efs.c (real_set_info): raise more
	exceptions.

	* storage-modules/bonobo-storage-efs.c (real_set_info): raise more
	exceptions.

	* tests/test-storage.c: a complete new test environment for
 	storage drivers.

	* bonobo/bonobo-storage-plugin.c (bonobo_storage_load_plugins):
	new environment variable BONOBO_PLUGIN_PATH.

2000-10-30  John Sullivan  <sullivan@eazel.com>

	* doc/ui-faq.txt:
	* doc/ui-xml.txt:
	Mentioned 'verb=""' shorthand.

Mon Oct 30 20:41:10 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* storage-modules/bonobo-stream-efs.c: raise more exceptions. 

	* storage-modules/bonobo-storage-efs.c: raise more exceptions.

2000-10-30  ERDI Gergo  <cactus@cactus.rulez.org>

	* monikers/bonobo-moniker-item.c (item_resolve):
	s/Container/ItemContainer/ in the query_interface call

2000-10-30  Darin Adler  <darin@eazel.com>

	* bonobo.spec.in: Remove bonobo-ui-extract from here.

2000-10-30  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am (bin_PROGRAMS): kill bonobo-ui-extract.

	* gshell/Makefile.am: remove bonobo-ui-extract style
	translation of xml files.

	* Makefile.am: re-enable gshell.

	* configure.in: ditto.

2000-10-30  Dietmar Maurer <dietmar@maurer-it.com>

	* idl/bonobo-storage.idl: erase raises NotEmpty.
	
	* bonobo/bonobo-storage.c (bonobo_storage_open_full),
	(bonobo_storage_open): add exception handling.

	* bonobo/bonobo-stream.c (bonobo_stream_open_full),
	(bonobo_stream_open): add exception handling.

	* bonobo/bonobo-storage-plugin.h: Update

	* storage-modules/bonobo-storage-efs.[ch]: Update

	* storage-modules/bonobo-stream-efs.[ch]: Update

	* storage-modules/bonobo-storage-fs.[ch]: Update

	* storage-modules/bonobo-stream-fs.[ch]: Update
	
2000-10-28  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/application-x-gnomine/Makefile.am:
	Added the xml file to make dist. Trying to fix
	the build.

2000-10-27  Zach Frey <zfrey@bright.net>

	* bonobo/doc/api/bonobo.types: remove the deprecated 
	bonobo_stream_fs_get_type and bonobo_ui_handler_get_type.

	* bonobo/doc/api/Makefile.am: remove bonobo-stream-fs.h
	since it's no longer in bonobo/bonobo and it's not installed.

	* bonobo/doc/api/Makefile.am: add the following headers 
	to the scan target:

	- bonobo/bonobo-canvas-component.h
	- bonobo/bonobo-canvas-item.h
	- bonobo/bonobo-client-site.h 
	- bonobo/bonobo-component-io.h
	- bonobo/bonobo-desktop-window.h
	- bonobo/bonobo-object-directory.h
	- bonobo/bonobo-persist-file.h 
	- bonobo/bonobo-plug.h 
	- bonobo/bonobo-property-bag.h 
	- bonobo/bonobo-property-types.h 
	- bonobo/bonobo-property.h 
	- bonobo/bonobo-socket.h 
	- bonobo/bonobo-storage-plugin.h 
	- bonobo/bonobo-stream-memory.h 
	- bonobo/bonobo-transient.h 
	- bonobo/bonobo-ui-node.h 
	- bonobo/bonobo-ui-toolbar-button-item.h 
	- bonobo/bonobo-ui-toolbar-icon.h 
	- bonobo/bonobo-ui-toolbar-item.h 
	- bonobo/bonobo-ui-toolbar-toggle-button-item.h 
	- bonobo/bonobo-view-frame.h 
	- bonobo/bonobo-wrapper.h 
	- bonobo/bonobo-zoomable-frame.h 
	- bonobo/bonobo-zoomable.h 

	* doc/api/bonobo.types: add in new types from new header files.

	* bonobo/bonobo-ui-toolbar-item.h: change enum definition to
	be stylistically compatible with gtk-doc.

2000-10-27  Michael Meeks  <michael@helixcode.com>

	* gshell/gshell.c: clean USING_OAF crud out, clean stylistic problems.

	* gshell/properties.c (populate_property_list): update to deal with
	controls with no properties.
	(edit_property): upd. Remove global 'pb' variable disaster area.
	(show_property_dialog): cope with controls with no properties.

2000-10-27  Michael Meeks  <michael@helixcode.com>

	* configure.in: bump version, add ORBIT flags export.

2000-10-27  Ian Peters  <itp@helixcode.com>

	* configure.in: set and AC_SUBST BONOBO_CURRENT, BONOBO_REVISION,
	and BONOBO_AGE, to control the .so numbering of bonobo

	* bonobo/Makefile.am: set -version-info in the LDFLAGS for bonobo,
	bonobox, and bonobo-print, using the above, so that we can start
	bumping this number when we break interface.

2000-10-27  Joe Shaw  <joe@helixcode.com>

	* monikers/bonobo-moniker-http.c (http_resolve): Use the "http"
	storage backend (which will be in GtkHTML) for resolving against the
	Bonobo/Stream interface.

2000-10-26  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-arg.h (bonobo_arg_type_is_equal): New function
	to check two BonoboArgTypes for equality.
	(BONOBO_ARG_SET_GENERAL, BONOBO_ARG_GET_GENERAL): Added three
	arguments to this macro: the TypeCode, the Type and an optional
	CORBA_Environment.

	* bonobo/bonobo-property-bag.h (bonobo_property_bag_notify_listeners):
	The CORBA_Environment argument is now optional.

	* bonobo/bonobo-property-bag.c
	(bonobo_property_bag_notify_listeners),
	(bonobo_property_bag_set_value): Use bonobo_arg_type_is_equal()
	to check for type equality.

	* bonobo/bonobo-object.c: Include the PID in the debugging output.

2000-10-27  Michael Meeks  <michael@helixcode.com>

	* api-convert.pl: flesh out.

	* api-convert.diff: Add.

2000-10-26  Michael Meeks  <michael@helixcode.com>

	* TODO: prune viciously and bring up to date.

2000-10-27  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-persist-file.c (impl_load, impl_save): Use correct
	order or arguments to the load_fn and save_fn.

2000-10-26  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (impl_destroy): free the priv->items list.

	* bonobo/bonobo-ui-xml.c (override_node_with): make flow more
	lucid and fix leak.

2000-10-26  Darin Adler  <darin@eazel.com>

	* monikers/bonobo-moniker-http.c:
	* monikers/moniker-control-test.c:
	Correct #include <bonobo.h> to say #include <bonobo/bonobo.h>
	instead. Fixes build.

2000-10-26  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_xml_to_pixbuf),
	(bonobo_ui_util_build_help_menu): use unsigned char.

	* bonobo-idl/util.c (lowercase, uppercase): use unsigned char.
	Thanks to Morten.

2000-10-26  Joe Shaw  <joe@helixcode.com>

	* bonobo/bonobo-moniker-util.c: Add the http moniker to the fast
	resolving ones, because doing a lookup through OAF doesn't work yet.

	* monikers/bonobo-moniker-http.c: Start of the HTTP moniker. Right now
	it only works when resolving against Controls, and will launch an
	ebrowser control.

	* moniker/bonobo-moniker-http.oafinfo: Added.

	* monikers/moniker-control-test.c: Little test application for
	resolving monikers against controls and launching them.

	* monikers/Makefile.am: Build and install bonobo-moniker-http and its 
	oafinfo file. Build but do not install moniker-control-test.

Thu Oct 26 20:54:27 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* storage-modules/bonobo-stream-efs.c (real_get_info): 
	(real_set_info): first implementation

	* storage-modules/bonobo-storage-efs.c (real_get_info):
	(real_set_info): first implementation

2000-10-26  Michael Meeks  <michael@helixcode.com>

	* Version 0.26
	
2000-10-26  Michael Meeks  <michael@helixcode.com>
	
	* bonobo/bonobo-property-bag.c
	(bonobo_property_bag_notify_listeners),
	(bonobo_property_bag_set_value): comment out dodgy type checking
	preconditions.

	* bonobo/bonobo-object-client.c: fix include.

	* bonobo/bonobo-main.c: fix include.

	* bonobo/bonobo-persist-file.c: Add exceptions where needed.

2000-10-25  Miguel de Icaza  <miguel@helixcode.com>

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_create_poa):
	Set the threading policy to SINGLE_THREAD_MODEL in the PropertyBag
	POA to avoid having the ORB use new threads as requests come in. 

	* bonobo/bonobo-transient.c (bonobo_transient_construct): ditto

Wed Oct 25 10:44:59 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* bonobo/bonobo-exception.c (bonobo_exception_get_text): add the
	new storage interface exceptions.

	* idl/bonobo-storage.idl: This is the long expected storage
	interface patch. I have changed the following:

	- no return value for writes
	- changed list_contents to return more infos
	- more exceptions
	- more open modes
	- removed the create methods (use open with the CREATE flag instead)
	- removed the eos() (read return a zero length buffer at eof)
	- removed length() (use the new get_info method instead)
	- changed the stream copy_to method to use out instead of inout
	- new revert() method
	- new get_info method (something like unix stat). 
	- new set_info method
	
	* bonobo/bonobo-storage.[ch]: see above
	* tests/test-storage.c: see above
	* storage-modules/bonobo-stream-fs.[ch]: see above
	* storage-modules/bonobo-stream-efs.[ch]: see above
	* storage-modules/bonobo-storage-fs.[ch]: see above
	* storage-modules/bonobo-storage-efs.c: see above
	* components/text-plain/bonobo-text-plain.c: see above
	* components/audio-ulaw/bonobo-audio-ulaw.c: see above
	* bonobo/bonobo-stream.[ch]: see above
	* bonobo/bonobo-stream-memory.c: see above
	* bonobo/bonobo-stream-client.c: see above

2000-10-24  Mike Kestner  <mkestner@ameritech.net>

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_set_value): Fix
	for the precondition bug that Troy Gillette discovered.
	(bonobo_property_bag_notify_listeners): Ditto.

2000-10-23  Zach Frey  <zfrey@bright.net>

	* doc/api/Makefile.am: update.

2000-10-23  Martin Baulig  <baulig@suse.de>

	* components/text-plain/bonobo-text-plain.c (control_set_frame): Removed;
	we can't create the menus here since we must not ask for our UI_Container
	when we're not activated.

2000-10-23  Michael Meeks  <michael@helixcode.com>

	* api-convert.pl: commence work.

2000-10-23  Michael Meeks  <michael@helixcode.com>

	* configure.in: Require Oaf >= 0.6.0,
	bump version in CVS.
	Demand gnome-libs >= 1.2.7, apparently 1.2.6 was broken.

2000-10-22  Joe Shaw  <joe@helixcode.com>

	* bonobo/bonobo-generic-factory.c (bonobo_generic_factory_construct): 
	Don't use od_server_register() anymore. Use 
	oaf_active_server_register() instead. Also change OD_REG_ERROR to 
	OAF_REG_ERROR.
	(bonobo_generic_factory_finalize): Don't use od_server_unregister().
	Use oaf_active_server_unregister() instead.

	* bonobo/bonobo-main.c (bonobo_init): Don't use od_get_org() anymore.
	Use oaf_orb_get() instead.

	* bonobo/bonobo-moniker-util.c 
	(bonobo_moniker_util_new_from_name_full): Don't use
	od_server_activate_with_id() anymore. Use oaf_activate_from_id()
	instead.

	* bonobo/bonobo-object-client.c	(bonobo_object_activate):
	Don't use od_server_activate_with_id(). Use oaf_activate_from_id instead.
	(bonobo_object_activate_async): New.
	Uses oaf_activate_from_id_async() for asynchronous activation.
	(oaf_activate_async_cb): Callback from the OAF function that calls the
	user provided bonobo callback.

2000-10-22  Mathieu Lacage  <mathieu@eazel.com>

	* bonobo/Makefile.am: fix the build: remove the new files
	bonobo-item-handler.{h,c} from the build: they cannot possibly 
	compile.

2000-10-22  Miguel de Icaza  <miguel@helixcode.com>

	* doc/Monikers: Updated the Moniker document.

	* monikers/bonobo-moniker-config.c,
	monikers/bonobo-moniker-item.c, monikers/bonobo-moniker-new.c,
	monikers/bonobo-moniker-oaf.c: Manually include header files to
	optimize for compilation speed.

	* bonobo/bonobo-item-handler.c, bonobo-bonobo-item-handler.h:
	Another implementation of IDL:Bonobo/ItemContainer:1.0, this one
	is targeted to be used in a more generic case, and not only for
	Embeddables. 

	Particuarly interesting for initializing objects through monikers,
	or locating/creating objects through the moniker system. 

	No API breakage, as these are completely new functions. 

Sun Oct 22 05:28:54 2000  George Lebl <jirka@5z.com>

	* bonobo/bonobo-win.c (toolbar_sync_state):  return from
	  cmd_get_attr needs to be freed with bonobo_ui_node_free_string,
	  just like everywhere else, lest glib with memchecking segs

2000-10-22  Michael Meeks  <michael@helixcode.com>

	* Version 0.25

2000-10-22  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_construct),
	(bonobo_control_frame_destroy): update.
	(bonobo_control_frame_set_ui_container): implement

2000-10-21  Martin Baulig  <baulig@suse.de>

	* gshell/gshell.c (bonobo_object_has_interface): Removed; use
	bonobo_object_client_has_interface() instead.
	(buffer_create, buffer_create_for_control): Rewrote and improved
	them; check whether we have a Control or an Embeddable and create
	the Buffer accordingly.

	* gshell/controls.c (destroy_view): Correctly destroy and unref
	everything here.
	(view_factory): bonobo_object_release_unref() the corba_control.
	(gshell_control_wrapper): Return a BonoboObjectClient instead of
	a BonoboEmbeddable.

	* gshell/inout.c: Reflect latest storage API changes; use
	bonobo_object_client_has_interface() instead of our own
	bonobo_object_has_interface().
	* gshell/controls.c (do_load_ps): Likewise.

2000-10-21  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-zoomable-frame.c (bonobo_zoomable_frame_destroy): New
	static function; release Bonobo::Zoomable object here.
	(bonobo_zoomable_frame_finalize): New static function.

2000-10-21  Michael Meeks  <michael@helixcode.com>

	* Version 0.24
	
2000-10-21  Michael Meeks  <michael@helixcode.com>

	* bonobo/app.c (main): add verb removal test.

	* bonobo/bonobo-ui-component.c (remove_verb): impl.
	(bonobo_ui_component_remove_verb_by_data),
	(bonobo_ui_component_remove_verb_by_func), 
	(bonobo_ui_component_remove_verb): impl.
	(bonobo_ui_component_remove_listener)
	(bonobo_ui_component_remove_listener_by_func),
	(bonobo_ui_component_remove_listener_by_data), 
	(remove_listener): impl.

2000-10-20  Robin * Slomkowski  <rslomkow@eazel.com>

	* bonobo.spec.in:references to non-existent documentation
	need to figure out where it moved to and put it back in.

2000-10-20  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.c (BONOBO_REF_HOOKS): turn off reference debugging; doh.

2000-10-20  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/paint-component-simple.c (view_color_select_cb):
	remove BonoboUIHandler reference.

	* bonobo/bonobo-widget.c (bonobo_widget_construct_control_from_objref): sink
	the CORBA reference into the control frame to couple its lifetime with the
	returned GtkWidget.

	* configure.in (vers): depend on at least gnome-libs-1.2.6

	* bonobo/bonobo-win.c (bonobo_win_get_contents): actualy return the contents!

	* bonobo/bonobo.h: remove bonobo-ui-compat.h

	* bonobo/Makefile.am: Don't install or build the compat code / headers

	* bonobo/bonobo-win.c (override_fn, reinstate_fn, remove_fn): kill rather
	pointless event emission.

	* idl/bonobo-ui.idl: remove a load of events no-one uses.

	* bonobo/bonobo-ui-toolbar.c (impl_destroy): NULL the popup window so we don't
	do a double destroy in gtk_container_destroy; do priv free below parent destroy.

	* samples/controls/bonobo-clock-control.c (bonobo_clock_factory),
	(bonobo_entry_factory): unref property bag.

	* samples/controls/bonobo-calculator-control.c (bonobo_calculator_factory): ditto.

	* bonobo/bonobo-control.c (bonobo_control_set_property_bag): ref on set.
	(bonobo_control_destroy): unref the bag.

	* bonobo/bonobo-control-frame.c (impl_Bonobo_ControlFrame_get_ambient_properties): upd.

	* bonobo/bonobo-control.c (bonobo_control_plug_destroy_event_cb):
	release the associated property bag.

2000-10-20  John Gotts  <jgotts@linuxsavvy.com>

	* bonobo.spec.in: Added some missing files.  lib/*.so should probably
	be moved to -devel, but maybe somebody else knows better.

2000-10-20  Darin Adler  <darin@eazel.com>

	* bonobo/extract.c: (find_strings), (print_line_and_free),
	(seek_translatable_strings):
	Oops. Checked in wrong version of the tool before.

2000-10-20  Darin Adler  <darin@eazel.com>

	* bonobo/Makefile.am:
	* bonobo/extract.c: (find_strings), (print_line),
	(seek_translatable_strings), (main):
	Write translatable strings out in alphabetical order so trivial
	changes to the XML file don't cause changes to the generated file.

2000-10-19  Darin Adler  <darin@eazel.com>

	* bonobo.spec.in: Use "-k" so you see more than just the first
	error when you use RPM to build. (Especially useful for the
	Tinderbox.)
	
	* storage-modules/bonobo-storage-fs.c:
	* storage-modules/bonobo-stream-fs.c:
	* tests/test-container-autoload.c:
	Fix path in bonobo-storage-fs.h includes.

2000-10-19  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar-control-item.c (impl_set_orientation):
	hide both in the display_none case.

	* bonobo/bonobo-ui-toolbar.c (init): upd.
	(bonobo_ui_toolbar_set_hv_styles): impl.
	s/set_style/style_changed/ signal.
	(impl_style_changed): update.
	(bonobo_ui_toolbar_set_orientation): signal STYLE_CHANGED.
	(bonobo_ui_toolbar_set_style): remove.

	* bonobo/bonobo-win.c (parse_look): impl.
	(update_dockitem): use it; add "hlook", "vlook"

2000-10-19  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-object-client.c:
	* bonobo/bonobo.h:
	Remove includes of <bonobo/bonobo-stream-fs.h>. There is no longer
	a file with that path, and removing doesn't seem to break
	compiling, so I assume it's an unneeded include for now.
	
	* doc/ui-xml.txt: Add some incomplete dock item attribute
	documentation.

2000-10-19  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar-control-item.c 
	(bonobo_ui_toolbar_control_item_set_display): impl.
	(impl_set_orientation): update.

	* bonobo/bonobo-win.c (decode_control_disp): impl.
	(toolbar_sync_state): setup the display params.

	* doc/ui-xml.txt: update.

2000-10-17  Jon K Hellan  <hellan@acm.org>

	* bonobo/bonobo-ui-toolbar-button-item.h: Virtualize set_icon and
	set_label.

	* bonobo/bonobo-ui-toolbar-control-item.[ch]: A few ItemControl ->
	ControlItem renamings.

	* bonobo/bonobo-ui-toolbar-control-item.c
	(bonobo_ui_toolbar_control_item_construct, struct
	_BonoboUIToolbarControlItemPrivate): Add a
	BonoboUIToolbarButtonItem to display instead of control in
	vertical mode, and a vbox to contain button and control.
	(impl_set_orientation): New function. Switch between displaying
	button and control depending on orientation.
	(impl_set_style): New function. Delegate to button item.
	(impl_set_want_label): Ditto.
	(class_init): Add the new impl_xxx functions.

2000-10-19  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object-directory.c (build_id_query_fragment): split from
	(od_get_server_list): here.
	(bonobo_directory_find_for_file): impl.

	* bonobo/bonobo-stream.h (BONOBO_IO_DRIVER_FS): add constants to
	make selecting drivers less error prone.

Thu Oct 19 09:50:37 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* storage-modules/bonobo-storage-fs.c (fs_create_storage): small
	bug fix.

	* storage-modules/bonobo-stream-fs.c (bonobo_stream_fs_open):
	create the file if necessary, and removed the create method.
	
	* bonobo/bonobo-storage-plugin.c (plugin_load): use g_module_error
	(suggestion from martin)

	* monikers/bonobo-moniker-file.c: use bonobo_stream_open instead
	of bonobo_stream_fs_open 

	* tests/test-container-autoload.c: use bonobo_stream_open instead
	of bonobo_stream_fs_open 

	* tests/test-container.c: use bonobo_stream_open instead
	of bonobo_stream_fs_open 
	
	* tests/test-container.c: use bonobo_stream_open instead
	of bonobo_stream_fs_open 

	* storage-modules/bonobo-stream-fs.c (bonobo_stream_fs_open):
	changed parameter types to be compatible with new plugin code.

	* storage-modules/bonobo-storage-[e]fs.c (init_storage_plugin): add new
	plugin code

	* storage-modules/Makefile.am: add bonobo-storage-fs.[ch] 

	* bonobo/bonobo-stream.c (bonobo_stream_open): new function which
	permits us to move bonobo-stream-fs into the storage module.

	* bonobo/bonobo-storage.h: removed BONOBO_SS_* and some
	unimplemented functions.	

	* bonobo/bonobo-storage.c (bonobo_storage_open): use the new
	plugin code

	* bonobo/bonobo-storage-plugin.[ch]: new plugin code for storage
	drivers

	* bonobo/bonobo-storage-private.h: removed

	* bonobo/bonobo-storage-priv.h: removed

	* bonobo/bonobo-storage-driver.h: removed

	* storage-modules/bonobo-stream-fs.[ch]: moved from bonobo/
 	to this place

	* idl/bonobo-storage.idl: added more open modes, so that we can
	remove BONOBO_SS_* 

2000-10-19  Martin Baulig  <baulig@suse.de>

	* idl/bonobo-zoomable.idl (ZoomLevelName, ZoomLevelNameList): New typedefs.
	(Zoomable): Added `preferred_zoom_level_names' attribute.

	* bonobo/bonobo-zoomable.h (bonobo_zoomable_set_parameters): Renamed to
	bonobo_zoomable_set_parameters_full().
	(bonobo_zoomable_set_parameters_full): Added `preferred_zoom_level_names'
	argument.
	(bonobo_zoomable_set_parameters): New function; this is a simplified
	version of bonobo_zoomable_set_parameters_full().

	* bonobo/bonobo-zoomable.c (bonobo_zoomable_destroy): New static function.
	(bonobo_zoomable_finalize): New static function.

	* bonobo/bonobo-zoomable-frame.h
	(bonobo_zoomable_frame_get_preferred_zoom_levels): Changed return value
	from `float *' to a GList of float's and remove the `pnum_ret' argument.
	(bonobo_zoomable_frame_get_preferred_zoom_level_names): New function.

2000-10-18  Eskil Heyn Olsen  <eskil@eazel.com>

	* bonobo.spec.in:
	Added bonobo-ui-extract to the rpm

2000-10-18  Michael Meeks  <michael@helixcode.com>

	* doc/ui-faq.txt (practice): remove show all comment; has been fixed.

	* bonobo/Makefile.am: Sort out headers; don't install ones we want to
	hide.

2000-10-18  Eskil Heyn Olsen  <eskil@eazel.com>

	* bonobo.spec.in:
	Added requirements to the base package

2000-10-17  John Sullivan  <sullivan@eazel.com>

	* doc/ui-faq.txt: Added a Q/A pair about how to avoid
	flashiness and tear-off menus breakage.

2000-10-17  Michael Meeks  <michael@helixcode.com>

	* Version 0.23

2000-10-17  Michael Meeks  <michael@helixcode.com>

	* bonobo/app.c (main): remove the File label making the node transparent
	so that John can see tear-offs work.

2000-10-17  Michael Meeks  <michael@helixcode.com>

	* bonobo/*: try to cheer Maciej up.

2000-10-17  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (bonobo_win_show_all): impl.
	(bonobo_win_class_init): hook in.

	* doc/std-ui.xml: add standard placeholders for components.

2000-10-17  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am (libbonoboinclude_HEADERS): remove bonobo-ui-item.[ch]
	What about bonobo-storage-priv[ate].h ?
	What about bonobo-component-directory*

	* CVS remove: bonobo-file-moniker.[ch], bonobo-item-moniker.[ch],
	bonobo-moniker-client.[ch] bonobo-composite-moniker.[ch]
	bonobo-container.[ch] gnome-object.[ch]

	* bonobo/*: Add copyrights to all headers and clean all C files headers.

2000-10-17  Michael Meeks  <michael@helixcode.com>

	* bonobo/app.c (main): add status regression test.

	* bonobo/bonobo-win.c (info_dump_fn): update debug.
	(sync_generic_widgets): decrement the position if we are ignoring
	an uninitialized control.
	(sync_generic_widgets): add more debug.

	* bonobo/bonobo-ui-component.c (impl_xml_get): correct polarity
	of 'recurse', should make things faster and more efficient.

2000-10-16  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-node.c (bonobo_ui_node_transparent): nodes
	with content are not transparent: fix John's status bug.

2000-10-16  John Sullivan  <sullivan@eazel.com>

	* doc/ui-faq.txt:
	* doc/ui-xml.txt:
	Updated to add some info about non-alphanumeric accelerators.

2000-10-16  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (bonobo_ui_toolbar_get_children): upd.
	to take account of unparented widgets remaining in the toolbar list.
	(bonobo_ui_toolbar_insert): don't allow a widget we already have to
	be added again.

	* bonobo/bonobo-ui-toolbar-control-item.c
	(bonobo_ui_toolbar_item_control_construct): show the eventbox.

	* bonobo/Makefile.am (libbonoboinclude_HEADERS): add control.

	* bonobo/bonobo-win.c (toolbar_build_control): upd.

2000-10-16  Jon K Hellan  <hellan@acm.org>

	* bonobo/bonobo-win.c (toolbar_build_control): Use
	bonobo_ui_toolbar_item_control_new to build control.
	(toolbar_sync_state): Do not bail out early even if it is a control.

	* bonobo/bonobo-ui-toolbar-control-item.[ch]: Implemented.

2000-10-15  Jody Goldberg <jgoldberg@home.com>

	* bonobo/bonobo-ui-toolbar-icon.c (bonobo_ui_toolbar_icon_class_init):
	Call gdk_rgb_init.

2000-10-16  Michael Meeks  <michael@helixcode.com>

	* Version 0.22
	
2000-10-16  Martin Baulig  <baulig@suse.de>

	* bonobo/Makefile.am (test_app_LDADD, test_toolbar_LDADD): Don't use
	`$(top_builddir)/bonobo/*.la' for things which are in the current
	directory, but just `*.la'; this is required to let automake get the
	dependencies right to make a `make -j' work.

2000-10-16  Martin Baulig  <baulig@suse.de>

	* configure.in (XML_LIBS): Separately check for libxml and AC_SUBST
	this; we link bonobo-ui-extract only against libxml, but none of the
	other GNOME libraries.

	* bonobo/extract.c: Only use libxml here so we don't need to have
	a connection to the X server to use this tool.
	* bonobo/Makefile.am (bonobo_ui_extract_LDADD): Replaced this with
	$(XML_LIBS).

2000-10-15  Martin Baulig  <baulig@suse.de>

	* Makefile.am (SUBDIRS): Put `po' last so the *-ui.xml.h files are
	already created.

	* components/application-x-gnomine/Makefile.am: Reverted Eskil's
	hack and did it the right way; $(ui_msgs) need to depend on
	$(top_builddir)/bonobo/bonobo-ui-extract and added a make rule to
	create this.

	* po/POTFILES.in: Removed gnomines.c and put back
	components/application-x-gnomine/bonobo-application-x-mines-ui.xml.h.

2000-10-14  Michael Meeks  <michael@helixcode.com>

	* Version 0.21

	* configure.in: remove tools apparently they don't build right

	* Makefile.am: ditto + move po to the end.

2000-10-14  Cody Russell  <bratsche@gnome.org>

	* bonobo/bonobo-ui-toolbar-button-item.c: Leave the icon item's
	alpha threshold at default rather than setting to 0.  Changing it
	to 0 was causing an ugly clipping problem on pixmap themes.

2000-10-14  Martin Baulig  <baulig@suse.de>

	* gshell/ui.xml: Renamed this to gshell-ui.xml.
	* gshell/Makefile.am: Install gshell-ui.xml.

	* gshell/ui.c (frame_create_ui): Use bonobo_ui_util_set_ui() to
	read the gshell-ui.xml file.

2000-10-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (cmd_get_node): cope with the "/command" node
	going away properly.

	* bonobo/bonobo-ui-xml.c (reinstate_old_node): issue a RENAME not
	a REINSTATE.
	(bonobo_ui_xml_class_init): setup RENAME.
	(override_node_with): don't emit OVERRIDE on transparent nodes it's
	very wasteful, emit REPLACE_OVERRIDE instead, we leave the widget
	untouched, but keep the component id safe in the override.
	(prune_overrides_by_id): allow NULL id's for pruning.

	* bonobo/bonobo-win.c (replace_override_fn): don't let a useful
	widget be destroyed.
	(rename_fn): stub; nothing needs to be done.
	(construct_priv): hook up the rename.

2000-10-14  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_create_toolbar):
	Make the toolbar exclusive.

2000-10-13  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/application-x-gnomine/Makefile.am:
	Still buildfixing...

2000-10-13  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/application-x-gnomine/Makefile.am:
	Still buildfixing...

2000-10-13  Eskil Heyn Olsen  <eskil@eazel.com>

	* po/POTFILES.in:
	Still buildfixing...

2000-10-13  Eskil Heyn Olsen  <eskil@eazel.com>

	* po/POTFILES.in:
	Removed
	./components/application-x-gnomine/bonobo-application-x-mines-ui.h
	to fix build

2000-10-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (put_hint_in_statusbar, menu_sync_state),
	(toolbar_sync_state): make the error message more friendly.

2000-10-13  Andy Hertzfeld  <andy@eazel.com>

	* bonobo/bonobo-ui-toolbar-item.c: (init),
	(bonobo_ui_toolbar_item_set_pack_end),
	(bonobo_ui_toolbar_item_get_pack_end):
	added a "pack_end" instance variable, and accessing routines
	* bonobo/bonobo-ui-toolbar-item.h:
	added get_pack_end and set_pack_end_routines
	* bonobo/bonobo-ui-toolbar.c: (create_popup_window),
	(allocate_popup_item), (hide_not_fitting_items),
	(size_allocate_helper), (impl_get_arg):
	handle toolbars with a single item specially, giving them all of
	the toolbar area and refraining from putting them in the pop-up
	window.  Also, lay out the "pack_end" items from the right/bottom.
	* bonobo/bonobo-win.c: (toolbar_sync_state):
	add the "pack_end" property to the toolbar item behaviors.
	
2000-10-13  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (impl_remove): Don't remove from the
	list.  That was correct.

2000-10-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (build_control): kill redundant parent
	arg; update every call.
	(update_status): fix a very stupid bug for John.
	(main_status_null): impl.
	(status_build_item): hook in.

	* bonobo/app.c (main): fix leak, add tooltips to all items.

	* bonobo/bonobo-win.c (menu_build_item),
	(move_dirt_cmd_to_widget): fix leak.
	(menu_sync_state): fix leak.

	* bonobo/bonobo-ui-toolbar.c (impl_destroy): free priv.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_build_help_menu):
	nail leak.

	* configure.in: remove bonobo-idl.

2000-10-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/app.c (main): make it more obvious what to do.

2000-10-12  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (impl_remove): Duh.  Remove the item
	from ->items.

2000-10-12  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (impl_get_arg): Take account of the
	border width for `ARG_PREFERRED_WIDTH' and `ARG_PREFERRED_HEIGHT'.

2000-10-12  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-win.c: 
	(put_hint_in_statusbar): Restructured slightly to avoid
	leaking two strings.
	(toolbar_sync_state): Decode the tool bar button text. This
	fixes the bug where tool bar button tips were in ASCII code.

2000-10-12  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-zoomable.c (bonobo_zoomable_set_zoom_parameters):
	Added `zoom_level' argument and API documentation for this function.
	(bonobo_zoomable_report_zoom_level_changed): Added API documentation.
	(bonobo_zoomable_report_zoom_parameters_changed): Likewise.

2000-10-12  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-zoomable.c (bonobo_zoomable_class_init): Added
	"set_frame" signal and emit it in impl_Bonobo_Zoomable_set_frame().
	* bonobo/bonobo-zoomable-frame.c (bonobo_zoomable_frame_class_init):
	Use correct signal marshaler for the "zoom_parameters_changed" signal.

2000-10-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (sync_generic_widgets): remove a hack
	breaking placeholder's separators: apologies.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_get_tree),
	(bonobo_ui_component_set_translate): fix leaks.

	* bonobo/bonobo-ui-xml.c (dump_internals): fixup printf.

	* bonobo/bonobo-ui-toolbar-popup-item.c: add missing comma
	causing string concat and IPR.

2000-10-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (info_dump_fn): use the node; check the
	widget's associated node for parity, beef up debugging power.
	(widget_set_node): make more clear & efficient.
	(status_build_placholder): impl.
	(build_control): add assertion back.
	(check_excess_widgets): impl.
	(sync_generic_widgets): increment pos as we sync state.
	(box_get_children_in_order): impl.
	(update_status): upd.

	* bonobo/bonobo-ui-xml.c (dump_internals): dump the node.

	* bonobo/bonobo-win.c (status_build_item): don't leak name.

2000-10-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (update_dockitem): use
	bonobo_ui_toolbar_get_children.

	* bonobo/bonobo-ui-toolbar.c (bonobo_ui_toolbar_clean): remove
	(containee_destroy_cb): remove.
	(bonobo_ui_toolbar_get_children): impl. gtk_container_foreach
	cannot return items in the popup.

2000-10-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_translate_ui):
	free the old properties before translation.

	* bonobo/bonobo-win.c (menu_build_item): remove redundant
	check on parent.

	* bonobo/bonobo-ui-xml.c (do_set_id): handle NULL nodes
	without leaking.
	(bonobo_ui_xml_merge): add node_free to nodes we can't
	merge due to an invalid path, fixed leak.
	
2000-10-12  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-zoomable-frame.c: Implemented all missing
	functions which were already present in the header file but
	just not yet implemented.
	(bonobo_zoomable_frame_get_zoom_level): Implemented.
	(bonobo_zoomable_frame_get_min_zoom_level): Implemented.
	(bonobo_zoomable_frame_get_max_zoom_level): Implemented.
	(bonobo_zoomable_frame_has_min_zoom_level): Implemented.
	(bonobo_zoomable_frame_has_max_zoom_level): Implemented.
	(bonobo_zoomable_frame_is_continuous): Implemented.
	(bonobo_zoomable_frame_get_preferred_zoom_levels): Implemented.
	(bonobo_zoomable_frame_set_zoom_level): Implemented.

2000-10-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (do_show_hide): return whether the
	hiddenness changed.
	(update_dockitem): add Andy's patch to resize the dock
	if we need to.

2000-10-11  Andy Hertzfeld  <andy@eazel.com>

	* bonobo/bonobo-win.c: (string_array_contains),
	(toolbar_sync_state):
	added a comma-delimited "behavior" property for toolbar items,
	and set an item's expandable boolean if "expandable" is
	specified in the behavior list.
	
2000-10-11  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c: Add args "preferred_width" e
	"preferred_height".
	(class_init): Add them here.
	(impl_get_arg): Handle them.

2000-10-11  Michael Meeks  <michael@helixcode.com>

	* doc/ui-faq.txt: explain the translation issue.

2000-10-11  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (status_sync_state): decode status.

	* bonobo/bonobo-ui-xml.c (override_node_with): prune overrides
	_after_ transfering the overrides; doh.

	* bonobo/bonobo-win.c (status_sync_state): set the state with the
	component id.
	(update_status): remove quick check on dirty bit, we need to look
	deeper.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set_status):
	fix leak and make set status "" work ( thanks to John Sullivan ).
	Also encode status for translation.

	* doc/ui-faq.txt: explain cmd / widget and accelerators.

Wed Oct 11 18:29:45 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* storage-modules/gnome-*: use prefix bonobo- instead of gnome-,
	renamed all files and made the necessary changes to Makefile.am

2000-10-11  Darin Adler  <darin@eazel.com>

	* bonobo/.cvsignore:
	* monikers/.cvsignore:
	Mention a few more generated files.
	
2000-10-11  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (containee_destroy_cb): Use correct
	cast and don't issue a stupid warning.
	(bonobo_ui_toolbar_clean): Don't issue a stupid warning here
	either.
	(containee_destroy_cb): Also, use the right types here.
	(bonobo_ui_toolbar_clean): Pass the toolbar instead of `->priv'.

2000-10-11  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/paint-component-simple.c (view_create_menus): 
	use set_translate.

	* components/text-plain/bonobo-text-plain.c (destroy_control_menus):
	in-line. (destroy_control): no need to unset container; done in control
	destroy anyway.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set_translate): impl
	helper fn.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_new_menu),
	(bonobo_ui_util_new_std_toolbar, bonobo_ui_util_new_toggle_toolbar):
	encode strings.

	* bonobo/bonobo-ui-compat.c (compat_menu_parse_uiinfo_one_with_data),
	(compat_toolbar_parse_uiinfo_one_with_data): update to encode strings.

	* bonobo/app.c (component_translate_and_set): impl.
	(main): use it.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set_prop),
	(bonobo_ui_component_get_prop): Hack for translation problems.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_build_help_menu):
	encode label.

	* bonobo/bonobo-win.c (de_accelerate_string): remove; the wrong
	approach anyway. (toolbar_sync_state): use decode_str instead.
	(menu_sync_state): decode the label.
	(put_hint_in_statusbar): do a decode.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_decode_str),
	(bonobo_ui_util_encode_str): impl.

	* bonobo/app.c (main): add test cases.

2000-10-11  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/Makefile.am (noinst_PROGRAMS): Add `test-toolbar'.
	(test_app_SOURCES): Set up the source file for `test-toolbar'.
	(test_app_LDADD): Likewise with the libraries.

	* test-toolbar.c: New file, test program for the toolbar widget
	alone.

	* bonobo/bonobo-ui-toolbar.c (impl_size_request): Request size for
	the popup item only.  Yes, I really mean it.  Don't change it back
	again.  I am not stupid.
	(size_allocate_horizontally): Removed.
	(size_allocate_vertically): Removed.
	(size_allocate_helper): New.  It uses the new `expandable'
	property for items.
	(impl_size_allocate): Use it.

	* bonobo/bonobo-ui-toolbar-item.c: New member `expandable' in
	`BonoboUIToolbarItemPrivate'.
	(init): Init.
	(bonobo_ui_toolbar_item_get_expandable): New.
	(bonobo_ui_toolbar_item_set_expandable): New.

2000-10-11  Cody Russell  <bratsche@gnome.org>

	* bonobo/bonobo-ui-toolbar-separator-item.c: Separator items'
	lines are now drawn to appear like those in GtkToolbar.

2000-10-11  Martin Baulig  <baulig@suse.de>

	* samples/compound-doc/paint-component-simple.c: Use the new
	UI handler [FIXME: someone need to look at the radio menu items].

	* samples/compond-doc/container/: Use the new UI handler.
	* samples/controls/sample-control-container.c: Lisewise.

	* tests/test-container.c: Add the text/plain component as a Control.

2000-10-11  Martin Baulig  <baulig@suse.de>

	* gshell/controls.c: Add support for PersistStream.

2000-10-11  Martin Baulig  <baulig@suse.de>

	[FIXME: The test-container doesn't work yet because we transformed
	the components into Controls.]

	* tests/test-container.c: Use the new UI handler code.

2000-10-11  Martin Baulig  <baulig@suse.de>

	* components/audio-ulaw/bonobo-audio-ulaw.c: Transformed this
	from a BonoboEmbeddable into a BonoboControl.

	* components/text-plain/bonobo-text-plain.c: Transformed this
	from a BonoboEmbeddable into a BonoboControl.

2000-10-11  Miguel de Icaza  <miguel@helixcode.com>

	* idl/bonobo-property.idl: Add get_values and set_values methods.
	Move exceptions to the 

2000-10-10  Miguel de Icaza  <miguel@helixcode.com>
	
	* bonobo/bonobo-property-bag.c
	(bonobo_property_servant_locator_preinvoke): Fix FIXME, set the
	exception if the the auxiliray servant can not be created.

2000-10-10  Darin Adler  <darin@eazel.com>
	
	* bonobo/bonobo-win.c: (radio_group_add): Fix bug where all radio
	menu items would look active.

2000-10-10  Michael Meeks  <michael@helixcode.com>

	* doc/std-ui.xml: moved accelerator label stuff to menus, leaving a
	better 'label' description.

	* bonobo/app.c (main): update warnings to make std-ui.xml positioning
	more explicit, show the window even if we can't find the file.

2000-10-08  Miguel de Icaza  <miguel@helixcode.com>

	* bonobo/*ui.h: use GNOME_BEGIN_DECLS/GNOME_END_DECLS instead of
	the ifdef madness.

2000-10-07  Miguel de Icaza  <miguel@helixcode.com>

	* monikers/std-moniker.c (std_destroy_cb): Fix prototype.
	(main): Remove OAF detect code.  We always use OAF now.

2000-10-09  Mathieu Lacage  <mathieu@eazel.com>

	* bonobo/bonobo-ui-util.c: (bonobo_ui_util_xml_get_icon_pixbuf):
	fix segfault in certain cases.

2000-10-10  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-win.c: (radio_group_add): Fix bug where all radio
	menu items would look active.

	* bonobo/bonobo-view.h: Remove headers for deleted functions.

	* bonobo/bonobo-view.c: Remove unused private fields.
	
2000-10-10  Larry Ewing  <lewing@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_pixbuf_to_xml): stick to
	assigning values to memory we have actually allocated.

2000-10-10  Andy Hertzfeld  <andy@eazel.com>

	* bonobo/bonobo-ui-toolbar.c: (size_allocate_horizontally),
	(size_allocate_vertically):
	don't use the pop-up window if there's only one item in the
	toolbar.
	
2000-10-10  Martin Baulig  <baulig@suse.de>

	* components/text-plain/bonbo-text-plain.c: Removed all gnorba stuff.
	* components/text-plain/text-plain.gnorba: Removed.

	* components/audio-ulaw/bonobo-audio-ulaw.c: Removed all gnorba stuff.
	* components/audio-ulaw/audio-ulaw.gnorba: Removed.

	* components/text-plain/bonobo-text-plain.c (create_view_menus):
	Use bonobo_view_get_remote_ui_container(), not _ui_handler().

2000-10-10  Michael Meeks  <michael@helixcode.com>

	* Version 0.20

2000-10-10  Michael Meeks  <michael@helixcode.com>
	
	* bonobo/bonobo-ui-util.c (bonobo_ui_util_xml_get_icon_pixbuf): 
	remove double free on text.

2000-10-10  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (de_accelerate_string): comment out debug.
	(widget_set_node): set your parent as well.
	(menu_build_item): remove duplicate set_widget.
	(replace_override_fn): the bug was here; failing to re-stamp the
	parent GtkMenuItem properly
	(toolbar_sync_state): remove 'std' attribute.

2000-10-09  Andy Hertzfeld  <andy@eazel.com>

	added a "minimum width" attribute to toolbar items for nicer
	toolbar button layout in Nautilus and elsewhere.
	
	* bonobo/bonobo-ui-toolbar-item.c: (impl_size_request), (init),
	(bonobo_ui_toolbar_item_activate),
	(bonobo_ui_toolbar_item_set_minimum_width):
	added minimum_width private instance variable, set to 0 in initialize,
	and used it to determine the size in size_request.
	
	* bonobo/bonobo-ui-toolbar-item.h:
	added bonobo_ui_toolbar_item_set_minimum_width.
	
	* bonobo/bonobo-win.c: (de_accelerate_string),
	(toolbar_sync_state):
	read the "min_width" attribute from the xml node and set the
	property of the toolbar item if present.
	
2000-10-09  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_destroy):
	Unref the socket and disconnect it's destroy handler.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (put_hint_in_statusbar): fall back to the tip
	on the cmd.
	(de_accelerate_string): remove '_'s from strings.
	(toolbar_sync_state): use it.

2000-10-09  Martin Baulig  <baulig@suse.de>

	Added support for controls to gshell.

	* gshell/controls.[ch]: New file.
	(gshell_control_wraper): This function wraps a BonoboEmbeddable around
	a BonoboControl.

	* gshell/gshell.c (buffer_create_for_control): New function.
	(verb_FileKill_cb): Call update_buffer_menu() after deleting the buffer.

	* gshell/inout.c (verb_LaunchComponent_cb): Split this into
	verb_LaunchControl_cb() and verb_LaunchEmbeddable_cb().

	* gshell/ui.xml: Did the cmd/widget thingie.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (get_stock_pixbuf): return NULL if no name.
	(bonobo_ui_util_xml_get_icon_pixbuf): fixup.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (do_set_pixmap, deal_with_pixmap): chop
	off 'Menu_' sometimes.

	* samples/compound-doc/paint-component-simple.c (view_button_press_cb),
	(view_clear_image_cb): remove (view_factory): upd.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_view_do_verb):
	remove.

	* bonobo/bonobo-view.c (bonobo_view_get_epv, impl_Bonobo_View_do_verb),
	(bonobo_view_construct, bonobo_view_register_verb),
	(bonobo_view_unregister_verb, bonobo_view_popup_verbs): kill verb bits.

	* bonobo/bonobo-client-site.c (bonobo_client_site_get_verbs),
	(bonobo_client_site_free_verbs): ditto.

	* bonobo/bonobo-embeddable.c (impl_Bonobo_Embeddable_get_verb_list),
	(bonobo_embeddable_get_epv, bonobo_embeddable_add_verb),
	(bonobo_embeddable_get_verbs, bonobo_embeddable_remove_verb),
	(bonobo_embeddable_add_verbs): remove redundant verb code.

	* idl/bonobo-embeddable.idl: remove verb stuff.

	* idl/*.idl: add copyright / author / descr. where missing.

	* bonobo/bonobo-ui-compat.c (compat_menu_parse_uiinfo_one_with_data):
	strip off 'Menu_'

	* bonobo/bonobo-win.c (menu_sync_state, toolbar_sync_state):
	make warnings more clear.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_xml_get_icon_pixbuf): 
	remove debug.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* doc/ui-faq.txt: add guff to the FAQ.

	* bonobo/bonobo-win.c (cmd_get_menu_pixmap): fix stupid typo.

	* bonobo/bonobo-control.c: include gtkmain.h so we don't get
	warnings about gtk_idle. (idle_destroy_socket): make type safe.

	* bonobo/bonobo-win.c (cmd_get_toolbar_pixbuf, cmd_get_menu_pixmap):
	impl.

	* doc/std-ui.xml: s/Menu_//

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_xml_get_icon_pixbuf): 
	prepend 'Menu_' to some stocks.
	(bonobo_ui_util_xml_get_icon_pixmap_widget): pass it through.

2000-10-09  Martin Baulig  <baulig@suse.de>

	* COPYING.LIB: Replaced this with version 2.1 of the
	GNU Lesser General Public License.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c: s/descr/tip/

	* doc/ui-xml.txt: upd.

	* bonobo/bonobo-win.c (toolbar_build_widget): upd.

	* bonobo/ui.xml: add comment; deferring to std-ui.xml

	* doc/std-ui.xml: cmd/widgitify

	* bonobo/bonobo-win.c (setup_root_widgets): add do show / hide.
	(remove_fn): hide the global menu dock item as it is removed,
	comment out; serious flicker causer; just use the "hidden"
	attribute.

2000-10-08  Mathieu Lacage  <mathieu@eazel.com>
	
	* bonobo/bonobo-win.c (update_menus): add do show / hide.

2000-10-09  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/bonobo-control.c: 
	(impl_Bonobo_Control_set_window): In the local bypass case, don't
	just `gtk_widget_hide' the GtkSocket, destroy it, or it might come
	back as a floating mystery gray box.
	(idle_destroy_socket): But we can't just destroy it, because you
	can't destroy a widget from a handler for the "realized" signalD,
	or bad things happen.
	(remove_destroy_idle): But we need to remove the idle callback if
	the socket gets destroyed.
	(bonobo_control_destroy): Or if the control gets destroyed.

	* bonobo/bonobo-control-frame.c:
	(bonobo_control_frame_socket_destroy): handle the socket being
	destroyed.
	(bonobo_control_frame_create_socket): factor out the code to
	recreate the socket
	(bonobo_control_frame_construct): use the above
	(bonobo_control_frame_bind_to_control): create socket as needed.

	* components/text-plain/bonobo-text-plain.c
	(progressive_update): Avoid dividing by zero when the total size
	has not been set.

	(embeddable_factory): Connect the "destroy" signal with
	`gtk_signal_connect', not `gtk_signal_connect_after'; `after'
	connections to the "destroy" signal don't work because the default
	destroy handler disconnects all signal handlers. This is needed to
	make bonobo-text-plain exit when it should.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (do_strip): make safer.
	(bonobo_ui_xml_strip): make safe.

	* bonobo/bonobo-win.c (win_components_dump): impl.
	(bonobo_win_dump): use it.
	(bonobo_win_xml_merge_tree): always 'strip' the tree, killing some
	nasty floating doc node bugs.
	
	* bonobo/bonobo-win.c (toolbar_sync_state, put_hint_in_statusbar)
	change 'descr' -> 'tip'
	s/get_cmd_state/get_cmd_node/
	(get_cmd_node): change semantics; fix leak.
	(set_cmd_dirty): upd.
	(get_cmd_attr): impl.
	(get_cmd_pixbuf): impl.
	(toolbar_sync_state): use get_cmd_attr, make cmd/widget complete, add
	warning for offenders.
	(menu_sync_state): ditto.
	(move_dirt_cmd_to_widget, dirty_by_cmd): make state set by cmd work.
	(update_widgets): call it.
	(set_cmd_state): rename to
	(set_cmd_attr): this and simplify.
	(menu_toggle_emit_ui_event): use it
	(win_item_emit_ui_event): use it.
	(get_cmd_node): transfer the CORBA id across as we create.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set_container):
	do the register once here.
	(impl_xml_rm): remove de-registration hack.
	(bonobo_ui_component_unset_container): move code here.

	* idl/bonobo-ui.idl: add set_container / unset_container & name
	attribute; no impl yet.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set_name),
	(bonobo_ui_component_get_name): impl.
	(impl_xml_set): split out register_component

	* bonobo/bonobo-control-frame.[ch]: Remove undo signal.

	* bonobo/bonobo-control.[ch]: Remove undo signal.

2000-10-07  Dan Winship  <danw@helixcode.com>
 
	* bonobo/bonobo-main.c (bonobo_x_error_handler): Hand off to
 	gdk_x_error if it's not something we're ignoring, so that
 	gdk_error_trap_{push,pop} continue to work as expected.

2000-10-08  Martin Baulig  <martin@home-of-linux.org>

	* gshell/gshell.c (zoom_level_changed_cb): New callback function.
	(buffer_create_zoomable_frame): Connect to the "zoom_level_changed"
	signal and display the new zoom level in the statusbar.
	(verb_Zoom_cb): Implement the "WindowZoom" verb; this pops up a
	dialog asking for a zoom level and then calls
	bonobo_view_frame_set_zoom_factor().

2000-10-08  Martin Baulig  <baulig@suse.de>

	* gshell/ui.c (frame_set_zoomable): New function.

	* gshell/ui.c (set_ui_state): Renamed to frame_set_sensitive().
	* gshell/gshell.c (frame_create): Initially set the frame insensitive.

	* gshell/menu.[ch]: Removed.

2000-10-08  Martin Baulig  <baulig@suse.de>

	* gshell/inout.c (verb_FileLoad_cb): Added verb "FileLoad" to load a
	file into the current component.

	* gshell/ui.xml: Removed the "Edit" menu.

2000-10-08  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-selector.h, bonobo/bonobo-selector.c
	(bonobo_selector_get_selected_name): New function.
	(bonobo_selector_get_selected_description): New function.

	* gshell/inout.c (verb_LaunchComponent_cb): Added verb "LaunchComponent"
	which is used to launch an arbitrary component.

2000-10-08  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-zoomable-frame.c: Renamed `_servant' to `servant'.
	(CLASS): Removed this unused #define.
	(impl_Bonobo_ZoomableFrame_report_zoom_level_changed): Added.
	(impl_Bonobo_ZoomableFrame_report_zoom_parameters_changed): Added.

	* bonobo/bonobo-zoomable.c: Renamed `_servant' to `servant'.
	(impl_get_arg): Renamed to bonobo_zoomable_get_arg().

2000-10-08  Martin Baulig  <baulig@suse.de>

	* idl/bonobo-zoomable.idl: Added correct copyright header, added Maciej
	Stachowiak as author and Eazel as copyright holder and use the name
	`GNU Lesser General Public License' for the LGPL.
	* bonobo/bonobo-zoomable.[ch]: Likewise.
	* bonobo/bonobo-zoomable-frame.[ch]: Likewise.

2000-10-08  Martin Baulig  <baulig@suse.de>

	* gshell/gshell.c (buffer_create_zoomable_frame): New static function.
	(verb_Zoom_cb): New static function.
	(gshell_verbs): Added new verbs "ZoomIn", "ZoomOut", "ZoomToFit" and
	"ZoomToDefault".

	* gshell/gshell.h (Buffer): Added `BonoboZoomableFrame *zoomable_frame'.

	* gshell/ui.xml: Added menu entries for the newly added verbs.

2000-10-08  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-control.c (impl_Bonobo_Control_reactivate_and_undo),
	(bonobo_control_get_epv): remove impl & hook.

	* bonobo/bonobo-control-frame.c (impl_Bonobo_ControlFrame_deactivate_and_undo),
	(bonobo_control_frame_get_epv): ditto.

	* idl/Bonobo.idl: add bonobo-listener.idl, bonobo-zoomable.idl and
	rename bonobo-app.idl to bonobo-ui.idl.

	* bonobo/Makefile.am: ditto.

	* idl/Makefile.am: ditto.

	* bonobo/Makefile.am: ditto.

	* bonobo/bonobo.h: ditto.

	* configure.in: remove dire API instability warnings.

2000-10-08  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-control.idl (Control): Remove reactivate_and_undo.
	(ControlFrame): remove deactivate_and_undo.

	* idl/bonobo-zoomable.idl: Zoomable interface taken from nautilus
	and adapted by Martin Baulig to bonoboness.

	* bonobo/bonobo-zoomable*.[ch]: the code.

	Date: Thu, 05 Oct 2000 12:48:49 -0700
	From: Darin Adler <darin@eazel.com>
	To: Michael Meeks <michael@helixcode.com>
	Cc: Bud Tribble <bud@eazel.com>, Maciej Stachowiak <mjs@eazel.com>,
	Martin Baulig <martin@home-of-linux.org>
	Subject: Nautilus:Zoomable interface license

	As we discussed, the Nautilus:Zoomable interface is currently under the GPL,
	but we (copyright holders, Eazel) give you permission to make an LGPL
	version of it for inclusion in Bonobo.

	    -- Darin

	Recieved with thanks.
	
2000-10-08  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-listener.idl: add.

2000-10-07  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am: remove bonobo-sizeable, it was a bad idea.

	* bonobo/bonobo.h: ditto.

	* idl/Makefile.am: ditto.

	* doc/Makefile.am (EXTRA_DIST): add all the docs we forgot to
	distribute for the last months (doh).

2000-10-07  Andy Hertzfeld  <andy@eazel.com>

	* bonobo/bonobo-win.c: (toolbar_build_widget):
	fixed bug introduced by Michael's previous check-in where toolbar
	buttons were broken.  He changed the parameters to exec_verb_cb and
	updated the menu item case, but not the toolbar item case.  Fixed
	by passing the priv parameter instead of the node like the
	callback now expects.
	
	* bonobo/bonobo-ui-util.c: (bonobo_ui_util_xml_get_icon_pixbuf):
	addded support for full path image filenames as well as gnome_pixmap
	relative ones for nautilus toolbar button theming.  Also, fixed
	minor bug where it was deallocating a text string before using it
	in a diagnostic message.
	
2000-10-07  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (reinstate_fn): prune widget info (
	although almost always it is NULL ).
	(toolbar_build_widget): make toolbar separators insensitive.
	(sync_generic_widgets): iterate over placeholder whether parent
	was dirty or not.
	(exec_verb_cb, real_exec_verb, win_item_emit_ui_event): re-arrange
	passing of node pointer to make it safer and to allow dynamic
	changing of verbs.
	(put_hint_in_statusbar, remove_hint_from_statusbar): ditto.
	(toolbar_build_widget, toolbar_build_placeholder),
	(toolbar_build_control, menu_build_item),
	(menu_build_placeholder, status_build_item): Update the position
	ourselfs, but only if we do an insertion.
	(sync_generic_widgets): fix a problem with non-widget itmes
	such as controls spewing warnings.

	* bonobo/bonobo-ui-xml.c (reinstate_old_node): fixup the path
	taken when removing a node that has had children of a different
	component added to it. Always emit a 'Remove' signal on a node
	we are about to destroy.

	* bonobo/bonobo-win.c (menu_build_placeholder): impl.
	(put_hint_in_statusbar): update to cope with a lack of hint.
	(menu_item_set_global_accels): subsume with
	(menu_item_set_label): this one into
	(menu_sync_state): this one ( impl. ).
	(menu_item_create): subsume into
	(menu_build_item): here ( impl. )
	(get_item_widget): impl. to overcome GtkMenu.
	(do_show_hide): use it.
	(prune_widget_info): remove the item widget.
	(container_destroy_siblings): remove nasty hackish routine.

	* idl/bonobo-control.idl: add realize / unrealize for the XSync
	code.

2000-10-06  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (widget_is_special, widget_get_node),
	(widget_set_node, node_is_dirty): impl.
	(node_get_parent_widget): upd.
	(replace_override_fn): re-stamp the widget.
	(override_fn, remove_fn): use new fn: (prune_widget_info): impl.
	(custom_widget_unparent): allow a double unparent.
	(node_get_parent_widget): make placeholder gubbins more explicit.
	(widget_is_special): detect widgets to ignore inside containers
	(widget_get_node, widget_set_node): tie a node to a widget
	(replace_override_fn): ensure it stays tied.
	(node_is_dirty): helper fn.
	(node_is_placeholder): helper.
	(next_node): tragicaly unused, but funky tree flattening iterator.
	(placeholder_sync): handler for placeholders.
	(sync_generic_widgets): split out all the evil bits of syncing
	a container with a tree; put them here.
	(do_show_hide): remove rubbish.
	(prune_widget_info): remove all widgets from NodeInfo records 
	down the tree as appropriate.
	(override_fn, remove_fn): simplify to use prune_widget_info
	(build_toolbar_placeholder): upd.
	(build_toolbar_widget): Split into:
	(build_toolbar_control, build_toolbar_widget)
	(build_toolbar_item, sync_toolbar_state): split state sync from build.
	(update_dockitem): update.
	(update_status): split out:
	(build_status_item, sync_status_item): split state sync from build.

	* bonobo/bonobo-ui-xml.c (set_children_dirty): impl.
	(bonobo_ui_xml_set_dirty): hook it in.

	* bonobo/bonobo-win.c (seek_dirty): Clean after re-build.

2000-10-06  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-win.c: 
	(update_menus): removed unused variable
	(string_array_contains): new helper function
	(create_dockitem): made behavior attribute be a comma-separated
	set of choices, matching all the GNOME_DOCK_ITEM_BEH_* ones.
	* doc/ui-xml.txt: explained behavior attribute

2000-10-06  Ramiro Estrugo  <ramiro@eazel.com>

	* bonobo.spec.in:
	Remove gshell which apparently is not built anymore.
	
2000-10-05  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-ui-component.h: Move BEGIN_GNOME_DECLS after the
	includes so this file can be included without including
	gnome-defs.h first.

2000-10-05  Darin Adler  <darin@eazel.com>

	* doc/ui-xml.txt: Doc says "Main" code says "main".

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (update_status): don't return after
	a hide missing the tree clean.
	(do_show_hide): split out.

	* bonobo/bonobo-ui-node.c (bonobo_ui_node_transparent): remove debug.

	* doc/ui-xml.txt: add hidden descr.

	* bonobo/bonobo-win.c (build_menu_widget): add "hidden" support.
	(build_toolbar_widget): ditto.
	(widget_set_state): ditto.
	(build_control): add "hidden" support here
	(update_status): upd.
	(build_menu_widget): remove show on control.
	(build_toolbar_control): ditto.
	(update_status): ditto.
	(update_menus): allow hiding the whole menu.

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* bonobo/app.c (main): add transparency regression test

	* bonobo/bonobo-ui-node.c (bonobo_ui_node_transparent): impl.
	(bonobo_ui_node_swap_attrs): impl.

	* bonobo/bonobo-ui-xml.c (override_node_with): ignore 'transparent'
	nodes during the merge, they only help structure the xml.

2000-10-05  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-selector.h: Remove unneeded include of
	<gtk/gtk.h>.
	* bonobo/bonobo-ui-compat.h: Add includes needed to use
	GnomeUIInfo.
	* bonobo/bonobo-ui-container.h: Remove unneeded include of
	<gnome.h>.
	* bonobo/bonobo-ui-util.h: Remove unneeded include of <gtk/gtk.h>
	added needed include of <bonbo/bonobo-ui-xml.h>.
	* bonobo/bonobo-ui-xml.h: Remove unneeded include of <gtk/gtk.h>.
	* bonobo/bonobo-win.h: Remove unneeded include of <gnome.h>.

	* bonobo/bonobo-ui-xml.c: Added include needed since we removed
	some unneeded ones from the headers.
	
	* components/text-plain/bonobo-text-plain.c: Added forward
	declaration to avoid warning compiling this.

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* idl/Makefile.am (idl_DATA): remove bonobo-listener.idl.

	* bonobo/Makefile.am (idls): ditto.

	* idl/Bonobo.idl: ditto.

	* idl/bonobo-property.idl: add Mike in Authors.

	* bonobo/bonobo-ui-xml.c (override_node_with): call
	prune_overrides_by_id to remove already overridden nodes with
	the same id: so A + BA -> AB not ABA.

	* bonobo/bonobo-exception.c (bonobo_exception_get_text): add
	property exceptions.

	* bonobo/bonobo-property-bag.c (notify_listeners): make public as
	(bonobo_property_bag_notify_listeners): this. Actually use the
	correct listener interface.
	(notify_listeners): don't emit a signal if there is no listening
	on this property.
	(bonobo_property_bag_add_listener): tool up with exceptions all
	over the shop. (bonobo_property_bag_remove_listener): ditto.

	* idl/bonobo-property.idl: add PropertyNoListening exception and
	add PROPERTY_NO_LISTENING exception.

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_control_get_remote_ui_handler):
	fix evil buglet.

	* bonobo/bonobo-socket.c (bonobo_socket_filter_func): ignore
	cases where we get a ConfigureRequest / MapRequest but the window is
	gone before we progress.

	* configure.in: bump configure version to 0.20 to simplify other
	people's builds.

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* Update everything to new bonobo_ui_component API.
	
	* bonobo/bonobo-ui-container.c (blank_win): s/app/win/

	* bonobo/bonobo-win.c (update_popups): don't try and build stuff for
	non existant menu widgets.

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_make_path): update.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_popup_verbs): kill.
	(bonobo_view_frame_verb_selected_cb): ditto.

	* bonobo/bonobo-control.c (bonobo_control_set_ui_component): 
	impl so people can set custom components.

	* bonobo/bonobo-canvas-item.c: include gtksignal for gtk_signal_connect.

	* bonobo/bonobo-ui-component.c: Add set / get container methods. Consequently
	alter all the daft bonobo_container_ methods to bonobo_component equivalents.
	Virtualize all the methods that could be used for a local cache.

	* bonobo/bonobo-control.c (bonobo_control_get_ui_handler):
	deprecate. (bonobo_control_get_ui_component): impl.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_new_from_component):
	split from (bonobo_ui_handler_new): here. Move misc. stuff here.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_new_default):
	implement: makes up a sane component name for lazy people.

	* bonobo/bonobo-win.h: s/BONOBO_WIN_TYPE/BONOBO_TYPE_WIN/

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (bonobo_win_add_popup): set dirty bit
	and re-generate widgets on registration; re-locate.
	(update_dockitem): update to new bonobo-ui-toolbar look
	enumeration. (update_widgets): s/popup/popups/
	(menu_item_set_label): set label-less menu widgets insensitive
	for separators (John).
	(update_popups): impl. (update_widgets): hook it.

	* bonobo/bonobo-ui-component.h: Make the default verb
	macros type safe, this will churn warnings all over people
	should do an s/BONOBO_UI_VERB/BONOBO_UI_UNSAFE_VERB/ if they
	don't like warnings.

	* bonobo/app.c (cb_do_dump, cb_do_quit, cb_do_popup): remove
	erroneous signatures.

	* bonobo/bonobo-control-frame.c s/uih/uic/ and update prototype
	to UIContainer.

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c s/app/win/ for Darin.

2000-10-04  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.h: Remove 'new' keyword in header.

2000-10-04  Michael Meeks  <michael@helixcode.com>

	* Version 0.19

	* NEWS: update

2000-10-04  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (update_status): don't re-build status if not
	dirty & clean the tree after use (update_keybindings): ditto.

	* bonobo/bonobo-ui-compat.c (compat_toolbar_parse_uiinfo_one_with_data):
	add separator.
	(bonobo_ui_handler_toolbar_add_list): insert into the right path, not
	into the parent path.

2000-10-03  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (impl_size_request): request more space
	if not floating.

	* bonobo/bonobo-win.c (update_dockitem): split out (create_dockitem):
	and add full set of dock properties, stop bands being exclusive.

	* doc/ui-xml.txt: update docs.

	* bonobo/bonobo-ui-util.c (bonobo_help_file_find_file): cut and paste
	so we can do a better job of finding help files.
	(bonobo_ui_util_build_help_menu): update.
	(bonobo_ui_util_fixup_help): upd.
	(bonobo_ui_util_new_ui): upd.
	(bonobo_ui_util_get_ui_fname): return NULL if file doesn't exist.

	* bonobo/bonobo-ui-toolbar-toggle-button-item.c (impl_set_state):
	only set state if it is different.

	* bonobo/bonobo-win.c (radio_group_add): set inactive by default.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_toolbar_item_set_pixmap):
	inhibit event emission. (bonobo_ui_handler_toolbar_new): ditto.
	(bonobo_ui_handler_menu_new): remove debug.

2000-10-03  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (popup_item_toggled_cb): Removed
	debugging message.
	(create_popup_window): Likewise.

2000-10-03  Zach Frey <zfrey@lanich.com>

	* bonobo.spec: comment out gshell

2000-10-03  Zach Frey <zfrey@lanich.com>

	* doc/api/Makefile.am: Update for new headers.

	* doc/api/*: update.

2000-10-03  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (update_status): don't pack controls wierdly
	and don't hide such a small container.

2000-10-02  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_new): update
	radio code to work.

2000-10-02  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c: s/sloppy_check*/SLOPPY_CHECK*/
	(bonobo_ui_handler_menu_set_sensitivity): remove embarassing error
	inhibiting all menu events doh.

2000-10-02  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar-button-item.c (create_pixmap_widget_from_pixbuf): 
	don't set the alpha threshold to a daft value.

2000-10-30  Michael Meeks  <michael@helixcode.com>

	* bonobo/app.c (main): Leak removal.

2000-09-30  Michael Meeks  <michael@helixcode.com>

	* doc/ui-xml.txt: Add description of the XML for the UI descriptions
	
	* bonobo/bonobo-win.c (get_dock_item): impl helper.
	(update_dockitem): use it.
	(remove_fn): remove empty dock items; special case.

	* bonobo/bonobo-ui-toolbar.c (impl_forall): Do the popup item as well;
	fixes nasty redraw bug with popup item and evil sizing problem.
	(bonobo_ui_toolbar_clean): impl. so we can purge the toolbar of all
	but the popup_item.

	* bonobo/bonobo-win.c (update_dockitem): add a queue_resize.

	* bonobo/bonobo-ui-toolbar.c (hide_not_fitting_items): make more
	successful for large widgets.

2000-09-30  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (bonobo_win_object_set): set the node dirty
	that we put an object into and add an update_widgets.
	(seek_dirty): use bonobo_ui_xml_clean.

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_set_dirty): rename to
	(bonobo_ui_xml_clean): this s/set_node_dirty/bonobo_ui_xml_set_dirty/

2000-09-30  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar-button-item.c (impl_set_tooltip): impl.

	* bonobo/bonobo-ui-toolbar-item.c (bonobo_ui_toolbar_item_set_tooltip): upd.

	* bonobo/bonobo-ui-toolbar-button-item.c (bonobo_ui_toolbar_button_item_construct): 
	setup priv->button_widget. (set_icon): prune redundant lines.

	* bonobo/bonobo-ui-toolbar.c (init): init tooltips.
	(impl_destroy): free them.
	(bonobo_ui_toolbar_get_tooltips): impl proper.

2000-09-29  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar-toggle-button-item.c (impl_set_state): impl.	
	(class_init): upd (proxy_toggle_click): impl.
	(bonobo_ui_toolbar_toggle_button_item_construct): connect

2000-09-28  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (widget_set_state): re-enable state setting.
	(menu_item_create): re-enable toggle events.
	(menu_toggle_emit_ui_event),
	(app_item_emit_ui_event): re-enable.

	* bonobo/bonobo-ui-toolbar-item.c (class_init): add state_changed.
	(bonobo_ui_toolbar_item_set_state): impl.
	(bonobo_ui_toolbar_item_set_tooltip): impl.

2000-09-27  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_rm): remove debug.

	* bonobo/bonobo-ui-container.c (impl_deregister_component): remove
	debug. (impl_node_remove): comment out debug.

	* bonobo/bonobo-ui-compat.c (verb_to_cb),
	(bonobo_ui_handler_menu_set_sensitivity), 
	(bonobo_ui_handler_menu_set_hint),
	(bonobo_ui_handler_menu_get_label),
	(bonobo_ui_handler_menu_set_pixmap): Add inhibition of event
	callbacks on most node read modify writes.

2000-09-27  Martin Baulig  <martin@home-of-linux.org>

	* components/text-plain/bonobo-text-plain.c: Ported to the new UI handler.
	(view_data_t): Store the BonoboUIComponent and the Bonobo_UIContainer here.
	(destroy_view): Call destroy_view_menus().
	(clear_text_cb): Renamed to verb_ClearText_cb().

2000-09-27  Martin Baulig  <baulig@suse.de>

	* bonobo/bonobo-control.c (bonobo_control_finalize): Use
	gtk_object_destroy() to destroy the plug, not gtk_object_unref();
	top-level containers like GtkWindow and GtkWindow subclasses are
	owned by the top level container list. They unref themselves when they
	are destroyed.

2000-09-27  Martin Baulig  <baulig@suse.de>

	* gshell/*: Ported to the new UI handler.
	* gshell/io.[ch]: New files.
	* gshell/io.xml: New file.

2000-09-24  Jody Goldberg <jgoldberg@home.com>

	* bonobo/bonobo-ui-toolbar.c (impl_size_request) : Handle the sizing
	  differently when we are floating.
	(size_allocate_horizontally) : Only add the arrow if we need it.
	(size_allocate_vertically) : Only add the arrow if we need it.
	(get_popup_item_size) : Rename from get_popup_item_width.

2000-09-23  Jody Goldberg <jgoldberg@home.com>

	* bonobo/bonobo-ui-toolbar.c (impl_set_orientation) :
	  When the style changes update the children.
	(impl_get_arg) : new function.
	(impl_set_arg) : new function.
	(class_init) : register get/set arg.
	  add the 'orientation' and 'is_floating' arguments.

2000-09-23  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-ui-handler.c: Don't #include
	"bonobo-uih-private.h".

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_xml_get_pixmap): Removed.
	(bonobo_ui_util_xml_get_icon_pixbuf): New.
	(gnome_pixmap_new_from_pixbuf): Removed.
	(bonobo_ui_util_xml_get_icon_pixmap_widget): New.

	* bonobo/bonobo-win.c (update_dockitem): `#if 0' the handling for
	the "relief" and "homogeneous" properties.
	(build_toolbar_widget): Updated to the new BonoboUIToolbar.
	Removed tooltip stuff, as it is not implemented in
	BonoboUIToolbar.
	(build_toolbar_placeholder): Likewise.
	(widget_set_state): Temporarily `#if 0'ed the state setting.
	(app_item_emit_ui_event): `#if 0'ed out.
	(menu_toggle_emit_ui_event): Likewise.
	(menu_item_create): Don't connect them.
	(build_toolbar_widget): Likewise.
	(update_dockitem): No "relief", "homogeneous" or "tips"
	attributes, at least for now.

	* bonobo-ui-toolbar.c, bonobo-ui-toolbar.h:
	* bonobo-ui-toolbar-item.c, bonobo-ui-toolbar-item.h:
	* bonobo-ui-toolbar-button-item.c, bonobo-ui-toolbar-item.h:
	* bonobo-ui-toolbar-toggle-button-item.c, bonobo-ui-toolbar-button-item.h:
	* bonobo-ui-separator-item.c, bonobo-ui-separator-item.h:
	Beginning of a new `BonoboUIToolbar' implementation.

2000-09-22  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_set_ui): impl helper fn.
	(bonobo_ui_util_set_pixbuf): impl.

	* bonobo/bonobo-win.c (update_dockitem): fixup using parent instead
	of child in node_has_name's (update_status): same mistake.
	(update_menus): remove double 'container_destroy_siblings' mistake.
	(update_status): add back the container_destroy_siblings.

	* bonobo/bonobo-ui-node.c (bonobo_ui_node_to_string): update so we
	free all the children; old bug.

2000-09-22  Havoc Pennington  <hp@redhat.com>

	* bonobo/bonobo-win.[ch], bonobo/bonobo-ui-xml.[ch],
	bonobo/bonobo-ui-util.[ch], bonobo/bonobo-ui-compat.[ch]:
	Abstract all xmlXYZ methods to bonobo_ui_node_XYZ methods to
	give us flexibility in future.

	* bonobo/bonobo-ui-node.[ch]: Generic attributed tree abstraction.

2000-09-22  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am: Remove bonobo-listener.[ch]

	* bonobo/bonobo-property-listener.c (bonobo_property_listener_init),
	(bonobo_property_listener_destroy): remove.
	(bonobo_property_listener_class_init): upd.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_add_listener):
	dup-ref instead of CORBA_Object_ref.
	(bonobo_property_bag_add_listener): remove the listener before
	adding so we can't leak references.
	(bonobo_property_bag_destroy): unref the listeners
	s/change_listeners/listeners/
	(bonobo_property_destroy): unref listeners.
	(notify_listeners): add CORBA_Environment & overhaul.
	(bonobo_property_bag_set_value): ditto.

	* samples/controls/sample-control-container.c (app_destroy_cb): 
	release listener after use.

	* bonobo/bonobo.h: Add bonobo-property-listener.h

2000-09-22  Mike Kestner <mkestner@ameritech.net>

	* samples/controls/sample-control-container.c (prop_changed_cb): 
	impl. (populate_property_list):

	* samples/controls/sample-control-container.c (add_listener):
	impl.

2000-09-21  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/paint-component-simple.oafinfo: switch
	to GNOME/ObjectFactory

	* samples/controls/bonobo-clock-control.oafinfo: ditto.

	* bonobo/bonobo-exception.c (bonobo_exception_get_text): update
	exceptions.

	* Everything: s/BonoboContainer/BonoboItemContainer/
	s/bonobo_container/bonobo_item_container/
	s/Bonobo_Container/Bonobo_ItemContainer/
	
	* bonobo/Makefile.am: update for item-container.

	* idl/Makefile.am: rename to item-container

	* idl/bonobo-item-container.idl: renamed from

	* idl/Bonobo.idl: use item-container.

	* idl/bonobo-container.idl this.

Sat Sep 23 08:45:02 2000  Dietmar Maurer  <dietmar@maurer-it.com>

	* storage-modules/gnome-stream-efs.c (real_read): use the
	result of efs_file_read, instead of (bytes_read < 0).
	(real_seek): use EFS_SEEK_SET, and raise an exception if
	semething failes.

2000-09-22  Havoc Pennington  <hp@pobox.com>

	* bonobo/bonobo-ui-node.h, bonobo/bonobo-ui-node.c: I forgot to
	use -N in the patch to Michael, so here are the new files; unused
	for now. These are BonoboUINode which is an abstraction for nodes
	representing UI elements.

2000-09-21  Michael Meeks  <michael@helixcode.com>

	* monikers/Makefile.am (std_moniker_SOURCES): add new.

	* monikers/std-moniker.c (bonobo_moniker_factory): hook up.

	* monikers/std-moniker.oafinfo: add NewMoniker

	* monikers/bonobo-moniker-new.[ch]: create.

	* bonobo/bonobo-win.c (bonobo_win_xml_node_exists): update for
	wildcard paths.

	* components/text-plain/bonobo-text-plain.c (create_view_menus): upd.

	* bonobo/bonobo-widget.c (bonobo_widget_create_subdoc_object):
	use object_dup_ref.

	* bonobo/bonobo-control-frame.h: upd.

	* bonobo/bonobo-client-site.h: upd.

	* bonobo/bonobo-exception.c (bonobo_exception_get_text): hack
	out bonobo-ui-handler exceptions.

	* idl/Bonobo.idl: remove bonobo-ui-handler.idl

	* bonobo/bonobo-control.c (bonobo_control_get_remote_ui_handler):
	update docs.

	* bonobo/bonobo-control.h: update.

	* bonobo/bonobo-ui-xml.c (xml_get_path): Change
	(bonobo_ui_xml_get_path_wildcard): add.
	(bonobo_ui_xml_get_path): upd
	(bonobo_ui_xml_merge): upd.
	(bonobo_ui_xml_rm): upd.

2000-09-20  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo.h: remove ui-handler.h

	* bonobo/Makefile.am (libbonoboinclude_HEADERS): remove ui-handler

	* idl/Makefile.am (idl_DATA): remove bonobo-ui-handler.idl

	* idl/bonobo-ui-handler.idl: Remove.

	* bonobo/bonobo-ui-xml.c (reinstate_node): change behavior;
	(bonobo_ui_xml_rm): upd.

	* bonobo/bonobo-win.c (bonobo_win_xml_rm): actually propagate
	the path instead of "/"; argh.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_rm):
	don't de-register component here, do a remove instead yuck.

2000-09-19  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (prune_overrides_by_id): precondition on id.

	* bonobo/bonobo.h: add bonobo-exception.h

	* bonobo/bonobo-exception.[ch]: Implement, add capability to
	expand user exception reporting to handle external exceptions.

	* bonobo/bonobo-main.c (bonobo_exception_get_text): remove from
	here.

2000-09-20  Pablo Saratxaga <pablo@mandrakesoft.com>

	* configure.in: LINGUAS: added Catalan language

2000-09-19  Jesse Pavel <jpavel@helixcode.com>

	* storage-modules/gnome-stream-efs.c: fixed a few syntax errors
	that were caused by changes in libefs.

2000-09-18  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (set_cmd_state): prune firing events on
	redundant sets to avoid loop conditions.

	* bonobo/bonobo-ui-xml.c (set_node_dirty): Impl, important that we
	propagate up placeholders to get dirtyness.
	(override_node_with): use set_node_dirty.
	(reinstate_old_node, merge): ditto.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set): dump path
	too.

	* bonobo/bonobo-ui-container.c (impl_node_set): beef up exceptions.

	* bonobo/bonobo-win.c (update_status): set padding on the statusbar.
	(update_status): allow hiding of statusbar.
	(update_menus): re-create the tearoff if we destroyed it.
	(node_get_parent_widget): don't tolerate node->parent == NULL.

	* bonobo/bonobo-ui-compat.c (compat_add_verb): add notify.
	(free_closure): update. (VerbClosure): add destroy_fn.
	(bonobo_ui_handler_menu_remove): implement.
	(add_accel_verb): merge instead of add child.
	(bonobo_ui_handler_menu_new): ditto.
	(bonobo_ui_handler_toolbar_new): ditto.
	(compat_menu_parse_uiinfo_one_with_data): remove add_accel_verb
	(add_accel_verb): re-impl to (add_accel): change semantics
	Change everywhere to use new accel fns.
	(compat_set_tree, compat_set): impl.
	(compat_sync): kill.
	(bonobo_ui_handler_create_toolbar): upd.
	(bonobo_ui_handler_menu_new): ditto.
	(compat_set_siblings): impl.
	(bonobo_ui_handler_menu_add_one): upd.
	(BonoboUIHandlerPrivate): remove BonoboUIXml ui member.
	(priv_destroy): upd.
	(setup_priv): upd.
	(bonobo_ui_handler_menu_new): upd.
	(bonobo_ui_handler_toolbar_new): upd.

	(bonobo_ui_handler_create_menubar): upd.

	* bonobo/bonobo-ui-component.c s/BonoboUIVerb/UIVerb/
	s/Listener/UIListener/
	(listener_destroy, verb_destroy): add destroy notify.
	(bonobo_ui_component_add_verb_full): impl,
	(bonobo_ui_component_add_verb): chain.
	(bonobo_ui_component_add_listener_full): impl.
	(bonobo_ui_component_add_listener): chain.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_set_callback): 
	remove churning debug.

2000-09-16  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (update_dockitem): reduce flicker in re-build
	(update_status): hide status before destroy.
	(update_menus): hide / show around menu build.

2000-09-16  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-component.c (bonobo_ui_container_path_exists),
	(bonobo_ui_container_thaw, bonobo_ui_container_freeze): add
	preconditions.

2000-09-16  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (node_get_id_or_path): g_free not xmlFree.

2000-09-16  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_get_ui_fname): Add a
	component prefix.

2000-09-15  Mike Kestner <mkestner@ameritech.net>

	*bonobo/bonobo-property-bag.c (impl_Bonobo_PropertyBag_add_listener):
	epv interface for change listener additions.
	(impl_Bonobo_PropertyBag_remove_listener): Ditto for remove.
	(notify_change_listener): Called when changes occur to do corba
	notifications to listener objects.
	(bonobo_property_bag_set_value): Add hook for listener notification.
	(bonobo_property_bag_add_listener): Public add primitive.
	(bonobo_property_bag_remove_listener): Public remove primitive.
	(listener_cmp): GCompareFunc for list lookups.

	*idl/bonobo-property.idl : Add change listener methods to Bag interface
	
2000-09-15  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (exec_verb_cb): fix memory corruption.
	(replace_override_fn): steal object reference; kill ref bug.

	* bonobo/bonobo-ui-compat.c (compat_menu_parse_uiinfo_one_with_data),
	(bonobo_ui_handler_menu_new): remove debug.

	* bonobo/bonobo-win.c (replace_override_fn): fix particularly
	cretinous cockup in prototype.

2000-09-15  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (reinstate_node): add 'else' to
	prune_overrides' to cure memory corruption.

	* bonobo/bonobo-win.c (menu_item_create): fix incorrect free.

	* bonobo/bonobo-ui-xml.c (override_node_with): add replace_override
	signal. (bonobo_ui_xml_class_init): add signal.

	* bonobo/bonobo-win.c (replace_override_fn): impl.
	(construct_priv): connect it.

2000-09-15  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_accel_set),
	(bonobo_ui_util_accel_get): implement.
	(bonobo_ui_util_build_accel): re-write.

	* bonobo/bonobo-win.c (menu_item_set_global_accels),
	(update_keybindings): use them.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_new): add
	accelerator set.
	(compat_menu_parse_uiinfo_one_with_data): upd.

	* bonobo/bonobo-main.c (bonobo_exception_get_text): update to
	new exceptions.

	* bonobo/bonobo-ui-component.c (bonobo_ui_container_path_exists):
	implement.

	* bonobo/bonobo-win.c (update_dockitem): add "hidden" property on
	dockitem.

	* bonobo/bonobo-ui-compat.c (do_set_pixmap): split out from
	(bonobo_ui_handler_toolbar_item_set_pixmap): update.
	(bonobo_ui_handler_menu_set_pixmap): impl.

	* bonobo/bonobo-win.c (bonobo_win_get_name): tolerate NULL.
	(bonobo_win_set_name): ditto.

2000-09-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_get_ui_fname): Search the
	users ~/.gnome/ui directory for files first.

2000-09-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_xml_get_pixmap),
	(bonobo_ui_util_xml_set_pixbuf):
	store the pixbuf in a property not the content.

	* configure.in (Warning): update the warning.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_get_child_paths): impl.
	(bonobo_ui_handler_menu_set_hint, bonobo_ui_handler_menu_get_label),
	(bonobo_ui_handler_menu_set_label, bonobo_ui_handler_menu_set_sensitivity),
	(bonobo_ui_handler_menu_get_toggle_state),
	(bonobo_ui_handler_menu_set_toggle_state): Fix old / new style path problems.

2000-09-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-toolbar.c (bonobo_ui_toolbar_set_homogeneous):
	stub.

	* bonobo/bonobo-ui-compat.c: turn off debugging.
	(bonobo_ui_handler_menu_set_sensitivity): impl.

	* bonobo/app.c: add tests.

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_get_parent_path): add.

	* bonobo/bonobo-ui-component.c (bonobo_ui_container_set_prop): use
	it & fix leak.

2000-09-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_new): Handle
	placeholders with an hack uglier than, well something.

	* bonobo/bonobo-win.c (construct_priv, bonobo_win_construct),
	(bonobo_win_init): Advance most construction to _init time.
	(bonobo_win_get_name, bonobo_win_set_name): impl.

	* bonobo/bonobo-ui-xml.c (do_set_id, xml_get_path): fix leaks.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_get_label),
	(bonobo_ui_handler_menu_set_label, bonobo_ui_handler_menu_set_hint),
	(bonobo_ui_handler_menu_get_radio_state),
	(bonobo_ui_handler_menu_set_radio_state),
	(bonobo_ui_handler_menu_set_toggle_state): implement.
	(bonobo_ui_handler_menu_get_toggle_state): re-implement.

	* bonobo/bonobo-ui-component.c (bonobo_ui_container_get_prop),
	(bonobo_ui_container_set_prop): rename.

2000-09-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (update_status): Make the control a custom
	widget so it doesn't get trashed.

	* bonobo/bonobo-ui-xml.c (override_node_with): Add special case
	to allow a merge that doesn't update the associated ID; for
	read / modify / write of attributes.

	* bonobo/bonobo-win.c (win_component_cmp_name): return NULL for
	blank names.

	* bonobo/bonobo-win.c (bonobo_win_register_component),
	(bonobo_win_object_get, bonobo_win_object_set): tolerate
	NULL objects.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_toolbar_item_set_pixmap):
	fix variously.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set_prop),
	(bonobo_ui_component_get_prop): implement.
	(bonobo_ui_component_set): tolerate NULL components.

	* bonobo/app.c (cb_set_state): add to test it (main): update.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_get_label): stub.

2000-09-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_build_path_v),
	(bonobo_ui_handler_build_path): cut and paste for nautilus.
	(path_escape_forward_slashes): cripple; faults on '/'s in paths.

	* bonobo/bonobo-win.c (bonobo_win_freeze, bonobo_win_thaw): impl.
	(update_widgets): do nothing if frozen.

	* bonobo/bonobo-ui-container.c (bonobo_ui_container_get_epv): upd.
	(impl_freeze, impl_thaw): impl.

	* bonobo/bonobo-ui-component.c (bonobo_ui_container_freeze),
	(bonobo_ui_container_thaw): implement.

2000-09-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-component.c (impl_exec_verb): lookup verbs in the
	verb hash, not the listner hash

2000-09-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-win.c (gnome_app_construct): implement.
	(bonobo_win_new): use it.

	* bonobo/bonobo-ui-component.c: Re-engineer to use g_hash_table.

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_construct): add
	helpful assertion.

2000-09-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_create_menubar): simplify
	(bonobo_ui_handler_create_toolbar): fix.
	(setup_priv): add menu by default; despite create_menubar API.
	(bonobo_ui_handler_toolbar_item_set_pixmap): lop parent off the path

	* samples/compound-doc/paint-component-simple.c (view_create_menus):
	kill creation of non-existant menu;

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_set): dump the
	dodgy xml on exception.

2000-09-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_set_app): re-order.
	(make_path): remove fluff.

2000-09-11  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (reinstate_old_node): Don't remove
	nodes with existing children from other components. & re-tag nodes.

	* bonobo/bonobo-win.c (construct_priv): setup the skeleton.

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_make_path): barborously
	remove great chunks of auto-creation code; simplify paths.
	(bonobo_ui_xml_make_path): remove # stuff
	(merge): only merge on name property.
	(find_sibling): exorcise. (find_child): update.

	* bonobo/bonobo-ui-container.c: Exceptionalized.

	* bonobo/bonobo-win.c: ditto.

	* bonobo/bonobo-ui-xml.c: ditto.
	
	* idl/bonobo-app.idl (UIContainer): Add InvalidPath exception.

	* bonobo/bonobo-win.c (get_cmd_state): update.
	(bonobo_win_xml_get): check path valid.

	* bonobo/bonobo-ui-compat.c (setup_priv): setup skeleton.
	(bonobo_ui_handler_menu_new, bonobo_ui_handler_menu_add_one),
	(bonobo_ui_handler_toolbar_add_list, bonobo_ui_handler_toolbar_new): 
	warn on invalid paths.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_build_skeleton),
	(add_node): impl.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_create_toolbar): 
	update.

2000-09-11  Robin * Slomkowski  <rslomkow@eazel.com>

	* bonobo.spec.in: brought this a little bit more up to date

2000-09-11  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (do_set_id): don't tolerate '#' in a path
	either.

	* bonobo/bonobo-win.c (update_menus): remove set of info->widget
	to priv->menu. (remove_fn): only destroy non-root widgets.
	(destroy_priv): destroy popups.
	(bonobo_win_add_popup, popup_destroy, bonobo_win_remove_popup),
	(popup_remove): implement.
	(build_control): implement. (build_menu_widget): split from here.
	(container_destroy_siblings): update for custom items.
	(container_destroy_siblings): fix moronic bug.
	(info_dump_fn): dump the object reference too.
	(build_toolbar_control): implement.
	(update_dockitem): use container_destroy_siblings
	(update_status): ditto.

2000-09-11  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_new): use getpid to make
	the name system unique.

	* bonobo/bonobo-ui-xml.c (do_strip): remove comment nodes before they
	go any further.

	* bonobo/extract.c: remove daft, unused headers.

	* bonobo/bonobo-ui-xml.c (do_set_id): fix silly inefficiency spewing
	warnings.

	* bonobo/Makefile.am: Update s/bonobo-app/bonobo-win/
	s/bonobo-app-item/bonobo-ui-item/
	s/bonobo-app-toolbar/bonobo-ui-toolbar/

	* bonobo/*: Add missing Author / Copyright / description headers.

2000-09-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-app.c (build_menu_widget): make menu controls work
	(update_status): pack end / start correction.

	* bonobo/ui.xml: add a 'BuiltMenuItems' placeholder.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_new_ui): Fiddle params
	(bonobo_ui_util_fixup_help): implement.

	* bonobo/app.c: Update api, add progress control & menu control

2000-09-08  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_build_help_menu):
	change call semantics.

	* configure.in (Warning): Explain to people about HEAD bonobo just now

2000-09-08  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (do_strip): prune nasty inefficiency.

	* bonobo/bonobo-ui-compat.c (compat_menu_parse_uiinfo_one_with_data): 
	add "accel" strings into menu items.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_build_accel): fix leak.

	* bonobo/bonobo-app.c (bonobo_app_class_init): destroy lots of stuff
	at finalize time instead of destroy time.
	(construct_priv): add itself to Priv
	(real_exec_verb): hold ref around CORBA method.
	(real_emit_ui_event): ditto; NB. the local case needs this.

	* bonobo/bonobo-ui-xml.c (reinstate_old_node): special case
	deletion of the root node.

	* bonobo/bonobo-app.[ch]: Re-write to be a GtkWidget and use the
	bonobo-ui-container as a controller.

	* bonobo/bonobo-ui-compat.[ch]: Update for changes.
	
	* bonobo/bonobo-ui-container.[ch]: New file with CORBA interface.
	
	* bonobo/app.c: update.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_get_ui_fname): better location
	strategy.

2000-09-07  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_strip, do_strip): Process all
	siblings too. (set_id, do_set_id): ditto.

	* bonobo/bonobo-app.c (exec_verb_cb): re-order + add debug.

	* bonobo/bonobo-app-item.c (bonobo_app_item_new_item, proxy_click),
	(bonobo_app_item_new_toggle): implement verbs on toolbar items; doh.

	* bonobo/bonobo-ui-component.c (bonobo_ui_container_object_set),
	(bonobo_ui_container_object_get): Implement.

2000-09-07  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-xml.c (merge): fix bug, double free on [ab]_name

	* bonobo/bonobo-ui-util.c (bonobo_help_display_cb): update.

	* bonobo/bonobo-ui-component.c (impl_exec_verb): update invocation.

	* bonobo/bonobo-ui-compat.c (verb_to_cb): re-order.

	* bonobo/bonobo-ui-component.h: Re-order the Verb's arguments to match
	an old gnome-app's.

	* bonobo/bonobo-ui-util.c (bonobo_ui_util_get_ui_fname): make it
	unconditional so we can at least see what the problem is.

	* bonobo/bonobo-app.c (impl_node_get): update to stop libxml dumping
	the peers of the root doc node.

	* bonobo/bonobo-ui-xml.c (bonobo_ui_xml_merge): furkled debug.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_new): make toggle items
	work properly. (bonobo_ui_handler_new_for_app): make the component as well
	as the app look like a UIHandler; yuck.

	* bonobo/Makefile.am: Install bonobo-ui-extract.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_compat_get_component): implement.
	(bonobo_ui_compat_get_app, bonobo_ui_get_container): ditto.

	* bonobo/bonobo-ui-component.c (bonobo_ui_component_add_verb_list_with_data),
	(bonobo_ui_component_add_verb_list): impl helper functions.

	* bonobo/bonobo-app.c (node_get_id): make an empty verb signify
	falling back to the name. (exec_verb_cb): use node_get_id

2000-09-06  Michael Meeks  <michael@helixcode.com>

	* Makefile.am (SUBDIRS): disable gshell for now.

	* configure.in (BONOBOX_LIBS): Add xml.

2000-09-06  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-ui-compat.c (compat_sync): fix bug.
	
	* bonobo/bonobo-ui-util.c (read_byte): fix deadly bad bug.

	* configure.in (BONOBOX_PRINT_LIBS): add 'print'
	(BONOBO_LIBS): remove 'print'.

	* bonobo/bonobo-ui-compat.c (bonobo_ui_handler_menu_add_one): don't
	strip parent path.

2000-09-06  Radek Doulik  <rodo@helixcode.com>

	* doc/Monikers (Note): fixed typo (s/auto_save_state/value,s/x/value)

2000-09-06  Darin Adler  <darin@eazel.com>

	* bonobo/.cvsignore: Ignore some new generated files.
	* bonobo/bonobo-control.c: (bonobo_control_auto_merge),
	(bonobo_control_destroy): Fix a couple of UI handler leaks.

2000-09-05  Maciej Stachowiak  <mjs@eazel.com>

	* components/text-plain/Makefile.am: Install text-plain.oafinfo
	again (someone accidentally made it stop installing).
	
	* components/text-plain/text-plain.oafinfo: Replace
	special/webdav-directory with x-directory/webdav (this mime type
	has been renamed in gnome-vfs). Also, add "text/plain" to
	supported mime types. Even though this is redundant with "text/*",
	it's still useful to have it in to make sure this component is
	preferred as a handler for plain text to ones that merely support
	"text/*".

2000-09-05  Michael Meeks  <michael@helixcode.com>

	* components/text-plain/bonobo-text-plain.c (create_view_menus): fix
	acute brokenness; how did this ever work ?

	* bonobo/bonobo-ui-xml.c (path_split, path_freev): implement to allow
	escaped '/'s in paths; grr. text/plain.

	* samples/compound-doc/paint-component-simple.c (view_color_select_cb):
	error on impossible case. (view_set_color): print the color we set to.

	* bonobo/bonobo-app.c (menu_item_set_global_accels): implement.
	(keybindings_free, update_keybindings, bonobo_app_binding_handle): impl.
	(destroy_priv, construct_priv): hook in.
	(construct_priv): associate the window with the App.

2000-09-04  Michael Meeks  <michael@helixcode.com>

	* bonobo/extract.c: A program for extracting translatable strings from
	xml ui descriptions.

	* bonobo/ui.xml: A simple example ui description.

	* samples/controls/sample-control-container.c (main): strip out old
	USING_OAF crud. (app_destroy_cb): kill debug.

	* gshell/Makefile.am: Disable for new UI handler.

	* tests/test-container.c (application_new): update for new UI code.

	* samples/controls/sample-control-container.c (container_create): 
	fit for new UI handler code.

	* samples/controls/bonobo-calculator-control.c (bonobo_calculator_clear): 
	remove: unused.

2000-09-04  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_wrapper_button_press_cb): 
	ref / unref around signal emission.
	(bonobo_view_frame_key_press_cb): ditto.

2000-09-02  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-view.c (bonobo_view_popup_verbs),
	(bonobo_view_verb_selected_cb): disable; LXR says unused.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_popup_verbs): ditto.

	* samples/controls/bonobo-calculator-control.c (bonobo_calculator_factory):
	remove control menu creation.

	* configure.in: define USE_UI_HANDLER

	* bonobo/bonobo-ui-compat.[ch]: create.

2000-09-01  JP Rosevear  <jpr@helixcode.com>

	* bonobo/bonobo.h: Remove deleted file

2000-09-01  Michael Meeks  <michael@helixcode.com>

	* More initial work on new UI handler code.

2000-08-31  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am: Make the includes work.

2000-08-31  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo.h: Add new headers.

	* idl/bonobo-app.idl: add.

	* idl/bonobo-control.idl: Return Unknown not UIHandler

	* idl/Makefile.am: add app.

	* bonobo/Makefile.am: hook in new UI handler test stuff.

2000-08-31  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-uih-menu.c: (menu_toplevel_set_label_internal):
	Fixed bug where changing the label of a menu item wasn't
	forgetting the old accelerator. There was code to forget the
	old accelerator but it was forgetting the new accelerator
	instead (before adding it).

2000-08-29  JP Rosevear  <jpr@helixcode.com>

	* bonobo/bonobo-uih-toolbar.c 
	(impl_Bonobo_UIHandler_toolbar_activated): take a
	ref around the callback / signal emission.

2000-08-24  Mike Kestner  <mkestner@ameritech.net>

	* bonobo/Makefile.am : Added listener source and idl files.
	* bonobo/bonobo-arg.h : Added libgnome/gnome-defs.h include.
	* bonobo/bonobo-listener.[ch] : New. Generic Listener implementation.
	* idl/Makefile.am : Distribute new listener idl.
	* idl/Bonobo.idl : Added include of new Listener idl.
	* idl/bonobo-listener.idl : New Listener Interface.
	
2000-08-20  Michael Meeks  <michael@helixcode.com>

	* doc/Monikers: Small changes.

2000-08-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-moniker-util.c (bonobo_moniker_util_new_from_name_full):
	Advance the prefix scan if we begin with '#', add an oaf query to allow
	generic '.*:' prefixes.

2000-08-17  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-uih-menu.c:
	(menu_toplevel_get_item_prefer_non_head): New private function,
	returns one of the MenuItemInternal *s for a path, preferring any
	that isn't the head one
	(bonobo_ui_handler_menu_toplevel_remove_item_internal): Used
	new function to fix bug involving removing an item that has more
	than one MenuItemInternal.

2000-08-13  Michael Meeks  <michael@helixcode.com>

	* Version 0.18

2000-08-13  Michael Meeks  <michael@helixcode.com>

	* configure.in (OAF_CFLAGS): allow oaf to be on a different prefix again.

2000-08-13  Michael Meeks  <michael@helixcode.com>

	* Version 0.17
	
2000-08-13  Michael Meeks  <michael@helixcode.com>

	* monikers/Makefile.am (EXTRA_DIST): Add std-moniker.oafinfo.

2000-08-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_dump_interfaces): helper function for
	Ettore's debugging

2000-08-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_set_value_string),
	(bonobo_property_bag_client_get_property): remove spurious ev checks.
	(bonobo_property_bag_client_get_docstring): fix leak, allow NULL ev for slackers.

2000-08-12  Michael Meeks  <michael@helixcode.com>

	* Makefile.am (SUBDIRS): add monikers duh;

	* monikers/std-moniker.c (bonobo_moniker_factory): remove the 'query:'
	moniker.

	* monikers/bonobo-moniker-query.c (query_parse_display_name): fix typo.

	* monikers/Makefile.am: update.

	* configure.in (BONOBO_TEST_LIBS): add gtk, glib.

2000-08-12  Joe Shaw  <joe@helixcode.com>

	* monikers/Makefile.am: Fixed so it will build this directory.
	
	* monikers/bonobo-moniker-query.c: changed call of CORBA_set_exception
	to CORBA_exception_set.

2000-08-12  Michael Meeks  <michael@helixcode.com>

	* Bump version to 0.17
	
	* samples/controls/sample-control-container.c: Update for new property code.

	* all Makefile.am: Unify on a sane CFLAGS / LIBS scheme for in-bonobo
	built test cases.

	* bonobo/bonobo-plug.c (bonobo_plug_destroy): cull debugging code.

	* bonobo/bonobo-control.c (bonobo_control_set_property),
	(bonobo_control_get_property): update.

	* bonobo/bonobo-widget.c (bonobo_widget_get_property, bonobo_widget_set_property): 
	clean re-write.

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_get_control_property_bag):
	return a Bonobo_PropertyBag.

	* bonobo/bonobo-control.c (bonobo_control_get_ambient_properties): ditto.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_construct),
	(bonobo_property_bag_client_new, bonobo_property_bag_client_get_type): remove.
	Rename all API's to take the raw Bonobo_PropertyBag and propagate exceptions
	sensibly.

	* bonobo/Makefile.am: remove cruft.

	* configure.in: Disable bonobrowser build.

	* all Makefile.am: s/OBJECT_DIRECTORY_LIBS/OAF_LIBS/

2000-08-12  Michael Meeks  <michael@helixcode.com>

	* configure.in (vers): remove OAF conditionals, sanitize configure,
	depend on oaf-0.5.0

	* bonobo/bonobo-moniker-util.c (bonobo_get_object): implement.

2000-08-11  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/Makefile.am: Install bonobo-moniker-util.h to avoid
	breaking build of bonobo-using apps.

2000-08-12  Michael Meeks  <michael@helixcode.com>

	* Every instance of #if USING_OAF removed

	* Every broken reference to 'gnome_bonobo_selector' stuff fixed.
	
	* bonobo/bonobo-main.c (bonobo_exception_get_text): update factory.

	* bonobo/bonobo-generic-factory.c (bonobo_generic_factory_get_epv): 
	s/POA_GNOME_GenericFactory/POA_GNOME_ObjectFactory/ fully broken backwards
	compatibility hacking.

	* bonobo/bonobo-control.c (bonobo_control_get_property): ref the propbag,
	before creating a property_bag_client with it that swallows the ref.

	* bonobo/bonobo-selector.c (bonobo_selector_class_init): major pruning
	of old goad / oaf compat code.

	* bonobo/Makefile.am (libbonoboinclude_HEADERS): remove moniker-client.h

2000-08-11  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/bonobo-object-client.c: Removed include of
	bonobo-moniker-client.h; this was breaking the build.

2000-08-11  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/Makefile.am: Removed bonobo-moniker-client.h; this was
	breaking the build.

2000-08-11  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_instance_init): make it
	dump the type of the parent class not just that of the BonoboObject,
	much more helpful.

	* bonobo/bonobo-object-client.c (bonobo_object_restore_from_url):
	Remove, totally broken; use monikers instead.
	(bonobo_object_activate_with_goad_id): remove.
	(bonobo_object_activate_with_oaf_id): remove.
	(bonobo_object_activate_with_either_id): move this to
	(bonobo_object_activate): remove totaly broken moniker support.
	(moniker_info_list_destroy, parse_moniker_string): remove.

	* bonobo/bonobo-main.c (bonobo_exception_get_text): add moniker
	exceptions.

	* monikers/bonobo-moniker-query.c (query_parse_display_name): fire
	an exception instead of doing something daft.

	* bonobo/bonobo-generic-factory.[ch] s/POA_Bonobo_/POA_GNOME_/
	s/Bonobo_stringlist/GNOME_stringlist/

	* bonobo/bonobo-object-client.c (bonobo_object_restore_from_url):
	comment out totaly; needs killing properly.

2000-08-10  Michael Meeks  <michael@helixcode.com>

	* monikers/: Create a load of sample standard moniker implementations
	and a moniker resolution daemon; whether this should stay here long
	term or not is undecided. Perhaps better off as shared components in
	libbonobo.

	* bonobo/bonobo-moniker.[ch]: Complete re-write

	* bonobo/bonobo-moniker-util.[ch]: New module for helper and client
	code.

	* bonobo/bonobo-moniker-client.[ch]: removed.

2000-08-10  Michael Meeks  <michael@helixcode.com>
	
	* configure.in (Configuration): hack out oaf stuff.

	* tests/test-container.c (add_gnumeric_cmd, add_cmd_moniker),
	(launch_server_moniker): sane environment passing + update.
	(add_gnumeric_cmd): update.

2000-08-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-main.c (bonobo_exception_get_text): rename to
	be sane.

2000-08-10  Ettore Perazzoli  <ettore@helixcode.com>

	* idl/bonobo-ui-handler.idl: Changed the {menu,toolbar}_activated,
	{menu,toolbar}_removed, {menu,toolbar}_overridden,
	{menu,toolbar}_reinstated methods to oneway, so that the notifier
	will not block if the callback doesn't return quickly.

2000-08-10  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-plug.c (bonobo_plug_unrealize): Re-order the
	parent_class unrealize; this is due to the fact that the
	socket_window is the parent of the widget's window. We can't
	destroy a foreign windows children, so if we unref the
	socket_window before the child we are stuffed.
	Many thanks to Federico the Mena marvel machine.

2000-08-10  Michael Meeks  <michael@helixcode.com>

	* storage-modules/gnome-stream-efs.c (real_close): implement.

2000-08-09  Michael Meeks  <michael@helixcode.com>

	* storage-modules/gnome-stream-efs.c (real_write): fire IO Error.

	* storage-modules/gnome-storage-efs.c (real_list_contents):
	re-work. (bonobo_storage_efs_class_init): upd.

2000-08-10  Dan Winship  <danw@helixcode.com>

	* bonobo/bonobo-widget.c (bonobo_widget_create_subdoc_object):
	fail if the component turns out to not be an Embeddable, rather
	than returning a BonoboWidget containing no component.

2000-08-09  Robin * Slomkowski  <rslomkow@eazel.com>

	* bonobo.spec.in: changed the includes to include all
	the current files

2000-08-09  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-uih-menu.c: (menu_free_data),
	(menu_local_remove_item): Move destroy-notify code to a place
	where it will actually do some good from the incorrect place
	it was in before.
	* bonobo/bonobo-uih-toolbar.c: (toolbar_free_data),
	(toolbar_local_remove_item): Do the corresponding move in the
	toolbar code, except the "move to" location is unfinished, so
	mark it with a FIXME.

2000-08-08  Robin * Slomkowski  <rslomkow@eazel.com>

	* Makefile.am: some fixes so it passes make distcheck
	* idl/Makefile.am: two forgotten idl filesbonobo-moniker.idl
	bonobo-sizeable.idl

2000-08-07  Federico Mena Quintero  <federico@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_finalize): This function
	has ABSOLUTELY no reason to call o->klass->finalize(o).  That is
	GtkObject's business.  Leave it to that or it will come back and
	bite your head off with extreme prejudice.  The right thing to do
	here is to 1. Nullify o->priv->ao to unlink the sub-object from
	the aggregate object; 2. do gtk_object_unref(o).  This way we make
	sure the object is finalized.  Also, for good measure, assert that
	the ->ao exists on the aggregate objects and that ->ao->destroyed
	is true; the object should already have been destroy()ed in
	bonobo_object_destroy().
	(bonobo_object_finalize_real): Ensure that the ->ao does not
	exist, and do not check ->ao->destroyed.

2000-08-04  Michael Meeks  <michael@helixcode.com>

	* tests/test-properties-server.c: Update for oaf.

	* tests/test-properties-client.c: Update for oaf.

	* bonobo/Makefile.am: remove all tests.

	* tests/Makefile.am: don't install test programs; add autoconf for
	misc tests moved here.

	* samples/controls/sample-control-container.c (app_delete_cb):
	implement. (app_destroy_cb): impl. (container_create): hook them in.
	(populate_property_list): remove pbc get. (container_create): put it here.

2000-08-03  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-widget.c (bonobo_widget_construct_control_from_objref):
	use a dup_ref.

	* bonobo/bonobo-object.c (bonobo_object_trace_refs): always
	compile this so if you built with debugging you don't have to
	re-build if bonobo is built without it.

2000-08-03  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.h: undef BONOBO_OBJECT_DEBUG; doh.

2000-08-02  Michael Meeks  <michael@helixcode.com>

	* storage-modules/gnome-storage-efs.c (bonobo_storage_efs_open):
	kill lurking bonobo_object_destroys

	* bonoboxConf.sh.in: Add.

	* bonobox-printConf.sh.in: Add.

	* Makefile.am (bonoboxConf.sh, bonobox-printConf.sh): create new conf
	scripts.

	* configure.in (BONOBOX_PRINT_LIBS, BONOBOX_LIBS): add.

2000-08-02  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-control.c (bonobo_control_destroy): split out the widget
	unrefs to (bonobo_control_finalize): here & priv free.
	(bonobo_control_class_init): hook it in.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_destroy): split out widget
	unref to here (bonobo_view_frame_finalize): along with priv free.
	(bonobo_view_frame_class_init): set it up here.

	* bonobo/bonobo-object.c (bonobo_object_finalize_real): insurance.

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_bind_to_control):
	update. (bonobo_control_frame_destroy): update.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_bind_to_view): update.
	(bonobo_view_frame_destroy): update.

	* bonobo/bonobo-client-site.c (bonobo_client_site_new_view_full): update.

	* bonobo/bonobo-stream-memory.c (mem_get_size): fix typo.

	* bonobo/bonobo-uih-menu.c (impl_Bonobo_UIHandler_menu_activated): take a
	ref around the callback / signal emission.

	* components/text-plain/text-plain.oafinfo: kill text/html this should be
	handled by text/* anyway.

	* bonobo/bonobo-ui-handler.c (bonobo_ui_handler_unset_container): unref
	the UI handler. (bonobo_ui_handler_set_container): kill redundant
	CORBA_Object_duplicate.

2000-08-01  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-embeddable.idl (EmbeddableFactory): Prune stale /
	unimplemented factory, surely monikers do this.

	* bonobo/bonobo-object.c (bonobo_object_dup_ref, bonobo_object_release_unref):
	implement.

	* bonobo/bonobo-client-site.c (impl_Bonobo_client_site_get_container):
	ref the object before returning see docs/refcounting.txt

	* bonobo/bonobo-view-frame.c (impl_Bonobo_ViewFrame_get_client_site):
	ditto.

	* bonobo/bonobo-ui-handler.c (impl_Bonobo_UIHandler_get_toplevel):
	ditto.

	* bonobo/bonobo-control-frame.c (impl_Bonobo_ControlFrame_get_ambient_properties),
	(impl_Bonobo_ControlFrame_get_ui_handler): ditto.

	* bonobo/bonobo-control.c (impl_Bonobo_Control_get_property_bag): ditto.

	* bonobo/bonobo-embeddable.c (impl_Bonobo_Embeddable_get_client_site):
	prune crud & fix ref. (impl_Bonobo_Embeddable_new_canvas_item): fix ref.
	(impl_Bonobo_Embeddable_new_view): ditto.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_construct): 
	remove ref incrementing kludge.

2000-08-02 Alastair McKinstry <mckinstry@computer.org>

	* configure.in: Added Language ga - Irish
	* po/ga.po: Added Irish language translation.

2000-08-01  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-socket.c (bonobo_socket_focus_in_event): Prevent a
	BadMatch when doing XSetInputFocus on a non-viewable window.

2000-07-30  ERDI Gergo  <cactus@cactus.rulez.org>

	* bonobo/bonobo-object-directory-oaf.c: OAF_Attribute -> OAF_Property
	
2000-07-29  Michael Meeks  <michael@helixcode.com>

	* configure.in: bump version to 0.16

2000-07-28  Michael Meeks  <michael@helixcode.com>

	* doc/refcounting.txt: add Mike's summary of ref-counting
	conventions.

2000-07-26  Michael Meeks  <michael@helixcode.com>

	* Version 0.16

	* storage-modules/gnome-stream-efs.c (real_close): stub.
	(bonobo_stream_efs_class_init): hook it in.

	* configure.in: comment out gnome-vfs check.

2000-07-26  Michael Meeks  <michael@helixcode.com>

	* configure.in: require ORBit-0.5.3.

2000-07-25  Peter Williams  <peterw@helixcode.com>

	* bonobo/bonobo-uih-dock.c (bonobo_ui_handler_dock_remove_data): 
	Don't just free the CORBA_Object: remove the data from the hash 
	table and free the key and value.

2000-07-25  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo.h: add sizeable

	* bonobo/bonobo-sizeable.[ch]: create.

	* bonobo/bonobo-print-client.h: re-order defines to be more standard.

	* bonobo/bonobo-print.c (bonobo_print_construct): actually return
	the constructed object; how did this ever work ?

	* bonobo/Makefile.am (libbonobo_la_SOURCES): add bonobo-sizeable

2000-07-25  Andy Hertzfeld <andy@eazel.com>

	* bonobo/bonobo-uih-menu.c: Fixed problem in 
	menu_toplevel_set_pixmap_internal where it forgot to show a newly
	allocated pixmap widget.  Fixed by calling gtk_widget_show.
	
2000-07-25  Dan Winship  <danw@helixcode.com>

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_construct): Fix
	this to work the way it's documented to again (wrt NULL @buffer).

2000-07-25  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-uih-menu.c (menu_toplevel_create_widgets): another
	evil hack to make placeholders work <sigh>, re-write well overdue.

2000-07-24  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-print-client.c (bonobo_print_data_render): remove
	red debugging border round print bbox.

2000-07-24  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-control.c (bonobo_control_destroy): if the control
	is active, deactivate before destroying ourselvs.

	* bonobo/bonobo-client-site.c (bonobo_client_site_get_container):
	implement.

2000-07-23  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-client-site.c (create_client_site): rename to
	(bonobo_client_site_corba_object_create): this & publicized.

	* bonobo/bonobo-container.h: correct get_object prototype,
	only_if_exists not passed by reference.

2000-07-20  Michael Meeks  <michael@helixcode.com>

	* bonobo-idl/Makefile.am: Try to auto-build the test.

2000-07-19  Michael Meeks  <michael@helixcode.com>

	* bonobo-idl/Makefile.am (man_MANS): install the nice man file.

	* idl/bonobo-app.idl: create.

	* bonobo/bonobo-stream-memory.c (mem_get_size, bonobo_stream_mem_class_init),
	(bonobo_stream_mem_get_size): Implement

	* bonobo/bonobo-arg.h: constrain g_assert type checks in arg assignment
	macros to __GNUC__

	* bonobo/bonobo-stream-fs.h: prune ugly, redundant conditional typedef crud.

	* storage-modules/bonobo-stream-vfs.h: remove ugly redundant typedefs.

	* bonobo/bonobo-socket.c (bonobo_socket_grab_focus): implement.
	(bonobo_socket_class_init): hook up.

2000-07-24  Peter Williams  <peterw@helixcode.com>

	* bonobo/bonobo-socket.c (bonobo_socket_focus_out_event): Fix
	"BadMatch Bug of Death (TM)" -- we were sometimes setting the
	focus to an unmapped parent window, which is a no-no.

2000-07-24  Dan Winship  <danw@helixcode.com>

	* components/text-plain/bonobo-text-plain.c (pstream_load): The
	oafinfo file says it can load any text/ subtype, so allow that.
	It's not really clear what to do about saving... you can't
	load a text/xml, let the user edit it arbitrarily, and then assume
	it's still text/xml. So for now at least, pstream_save still only
	accepts text/plain.

2000-07-22  J Shane Culpepper  <pepper@eazel.com>

	* storage-modules/bonobo-storage-vfs.c: (fs_list_contents),
	(bonobo_storage_vfs_open):
	* storage-modules/bonobo-stream-vfs.c: (fs_length):

	Fixed build breakage that was caused by big changes to gnome-vfs.

2000-07-18  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_create): split code into
	(bonobo_stream_mem_construct): here. (bonobo_stream_mem_get_buffer): update.
	(bonobo_stream_mem_class_init): Make get_buffer a virtual method.
	(mem_get_buffer): implement.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_construct):
	add a ref on the poor property bag we are swallowing, so when we are unreffed
	we are back to where we started.

2000-07-18  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-plug.c (bonobo_plug_key_press_event): Forward unhandled
	events on to socket.

2000-07-17  Miguel de Icaza  <miguel@gnu.org>

	* bonobo-idl/main.c (generate_get_epv): Fix the _get_epv return
	value.  (generate_h_protos): ditto.

2000-07-15  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-persist.idl: add a comment about the save method to save others my
	idiotic mental wandering.

2000-07-15  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_toolbar_remove_widgets_recursive):
	remove the ToolbarToolbarInternal struct from the name_to_toolbar hash and leak it
	for now. (toolbar_toplevel_toolbar_check_override): notify before removing widgets.

2000-07-15  Robert Brady  <rwb197@zepler.org>

	* configure.in (ALL_LINGUAS): Added en_GB translation

2000-07-15  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_construct): don't
	make the gtk_hbox homogeneous; doh, this was making the local case
	optimization break for toolbar merging etc.

2000-07-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_construct),
	inherit from bonobo-object-client; people expect it.
	(bonobo_property_bag_client_init): kill.
	(bonobo_property_bag_client_class_init): kill.
	(bonobo_property_bag_client_get_type): derive from object_client.

	* idl/bonobo-ui-handler.idl: remove toolbar_fetch_item, no longer neccesary.

	* bonobo/bonobo-uih-toolbar.c (impl_Bonobo_UIHandler_toolbar_remove),
	(toolbar_toplevel_toolbar_remove): implement.
	(bonobo_ui_handler_toolbar_item_get_pos): implement.
	(impl_Bonobo_UIHandler_toolbar_item_get_attributes): obey containee rules
	implement fully.

	* bonobo/bonobo-print.c (bonobo_print_class_init): init class render fn.
	(impl_render): fall back to the class method to allow derivation.
	(bonobo_print_construct): split construction here.
	(bonobo_print_corba_object_create): publicise.
	(bonobo_print_construct): publicize.

2000-07-14  Mathieu Lacage <mathieu@eazel.com>

	* bonobo/Makefile.am, 
	components/audio-ulaw/Makefile.am,
	components/application-x-gnomine, 
	components/text-plain/Makefile.am,
	gshell/Makefile.am, 
	samples/bonobo-class/Makefile.am, 
	samples/compound-doc/bonobo-hello/Makefile.am,
	samples/compound-doc/Makefile.am, 
	samples/compound-doc/container/Makefile.a,
	samples/controls/Makefile.am : add OAF_CFLAGS and 
	OBJECT_DIRECTORY_LIBS where needed. One more step in my
	crusade to compile GNOME in strange prefixes...

2000-07-13  Robin * Slomkowski  <rslomkow@eazel.com>

	* bonobo.spec.in: added oaf files

2000-07-13  Michael Meeks  <michael@helixcode.com>

	* TODO: pruned it a tad.

	* HACKING: updated.

	* bonobo/bonobo-main.c (bonobo_exception_get_txt): UI helper routine.
	(bonobo_exception_get_txt): implement.

	* bonobo/bonobo-object.c (bonobo_object_destroy): flag destroyed.
	(bonobo_object_finalize_real): check we have been destroyed via
	bonobo_object_destroy correctly.

2000-07-12  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_init): implement; hook the
	shutdown at exit.
	s/BONOBO_OBJECT_DEBUG/BONOBO_REF_HOOKS/ + allow a quicker, nicer mode
	of ref-count debug without a re-build.

	* bonobo/bonobo-object.h: add init.

	* bonobo/bonobo-main.c (bonobo_init): init objects.

	* bonobo/bonobo-main.h (bonobo_poa_manager): kill shutdown; Darin, kind
	soul told me about g_atexit; couldn't find it earlier.

2000-07-12  Michael Meeks  <michael@helixcode.com>

	* storage-modules/gnome-stream-efs.c (bonobo_stream_efs_destroy),
	(bonobo_stream_efs_open_create): pernicious gtk_object_ ref/unrefs
	killed.

	* bonobo/bonobo-file-moniker.c (gnome_file_moniker_new): ditto.

	* storage-modules/bonobo-storage-vfs.c (do_bonobo_storage_vfs_create): dtto.

	* storage-modules/bonobo-stream-vfs.c (bonobo_stream_create): ditto.

	* storage-modules/gnome-storage-fs.c (do_bonobo_storage_fs_create): ditto.

	* storage-modules/gnome-storage-efs.c (real_create_storage),
	(real_open_storage, bonobo_storage_efs_destroy): ditto.

	* bonobo/bonobo-view.c (bonobo_view_destroy): unref the embeddable.

	* bonobo/bonobo-client-site.c (bonobo_client_site_new_view_full): unref
	the view when we have boind it. (bonobo_client_site_bind_embeddable): kill
	possible ref leak.

	* gshell/gshell.c (container_system_exception_cb, view_system_exception_cb),
	(view_remove, file_menu_exit_cb): ditto.

	* components/text-plain/bonobo-text-plain.c (embeddable_system_exception_cb),
	(view_system_exception_cb): unref not destroy. (main): add shutdown.
	(embeddable_factory): unref fix.

	* components/audio-ulaw/bonobo-audio-ulaw.c (embeddable_system_exception_cb),
	(view_system_exception_cb): ditto.

	* samples/compound-doc/paint-component-simple.c (view_system_exception_cb),
	(embeddable_system_exception_cb): ditto.

	* bonobo/bonobo-object.c (bonobo_object_trace_refs): move the ref-counting
	bloat and ugliness here.

	* bonobo/bonobo-object.h (BONOBO_OBJECT_CHECK): update.

	* bonobo/bonobo-main.c (bonobo_shutdown): implement, since we can't
	unref our UI handler in gtk_main, so a quit fn. approach won't work.
	Optional function.

2000-07-11  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-control.c (bonobo_control_set_property),
	(bonobo_control_get_property): s/gtk_object_unref/bonobo_object_unref/

	* bonobo/bonobo-widget.c (bonobo_widget_set_property),
	(bonobo_widget_get_property): ditto.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_construct): ditto.

	* bonobo/bonobo-view.c (bonobo_view_set_embeddable): ditto.

	* bonobo/bonobo-container.c (bonobo_container_remove): Kill EVIL
	gtk_object_unref that was stuffing everything.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_destroy): add
	destroy chaining.

	* bonobo/bonobo-control.c (bonobo_control_destroy),
	(bonobo_control_set_control_frame): Fix from Darin; remove ref count
	loop on control-frame.

	* bonobo/bonobo-object.c: s/GnomeAggregateObject/BonoboAggregateObject/
	(bonobo_object_add_interface): remove stale aggregate objects.
	(bonobo_object_finalize): pass an aggregate object in.

	* bonobo/test-container.c (add_gnumeric_cmd): Replace instances of
	gtk_object_destroy being performed on half constructed bonobo objects,
	use bonobo_object_unref instead to avoid confusion, and unify the
	reference counting semantics.

	* bonobo/bonobo-view.c (bonobo_view_new): ditto.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_new): ditto.

	* bonobo/bonobo-ui-handler.c (bonobo_ui_handler_new): ditto.

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_create): ditto.

	* bonobo/bonobo-stream-fs.c (bonobo_stream_create): ditto.

	* bonobo/bonobo-simple-source.c (gnome_simple_data_source_new): ditto.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_new): ditto.

	* bonobo/bonobo-progressive.c (bonobo_progressive_data_sink_new): ditto.

	* bonobo/bonobo-persist-stream.c (bonobo_persist_stream_new): ditto.

	* bonobo/bonobo-persist-file.c (bonobo_persist_file_new): ditto.

	* bonobo/bonobo-generic-factory.c (bonobo_generic_factory_new): ditto.
	(bonobo_generic_factory_new_multi): ditto.

	* bonobo/bonobo-file-moniker.c (gnome_file_moniker_new): ditto.

	* bonobo/bonobo-embeddable.c (impl_Bonobo_Embeddable_new_view),
	(bonobo_embeddable_new_canvas_item): ditto.

	* bonobo/bonobo-desktop-window.c (bonobo_desktop_window_new): ditto.

	* bonobo/bonobo-control.c (bonobo_control_new): ditto.

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_new): ditto.

	* bonobo/bonobo-container.c (bonobo_container_new): ditto.

	* bonobo/bonobo-client-site.c (bonobo_client_site_new): ditto.

	* bonobo/bonobo-canvas-component.c (bonobo_canvas_component_new): ditto.

	* bonobo/bonobo-bind-context.c (bonobo_bind_context_new): ditto.

	* bonobo/bonobo-object.c (bonobo_object_ref, bonobo_object_unref): make
	it easier to solve ref-counting bugs. (bonobo_object_instance_init): ditto.,
	(bonobo_object_destroy): kill ref-count set to 0.
	(bonobo_object_finalize): update assertion, kill ref-count set.
	(bonobo_object_debug_foreach, bonobo_object_debug): implement.
	(bonobo_object_get_type): setup the living objects hash.
	(bonobo_object_instance_init): init corba_objref / servant.

	* bonobo/selector_test.c (panel_callback): kill warning.
	kill redundant prototypes; re-order and comply to gnome programming
	guidelines.

2000-07-11  Mike Kestner  <mkestner@ameritech.net>

	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_toolbar_create_widget):
	Changed the gnome_app_set_toolbar call to gnome_app_add_toolbar and 
	added logic to calculate the proper band position to append toolbars
	to the top bands instead of inserting them above existing toolbars.
	
2000-07-10  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-client-site.c (bonobo_client_site_bind_embeddable): remove
	ref count leak.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_bind_to_view): ref the view
	we keep.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_destroy): don't
	destroy ourselfs again [ wierd ].

	* bonobo/bonobo-embeddable.c (ping_container, bonobo_embeddable_destroy): 
	replace bonobo_object_destroy with bonobo_object_unref

	* bonobo/bonobo-control.c (bonobo_control_plug_destroy_event_cb): ditto.

	* bonobo/bonobo-container.c (bonobo_container_destroy): ditto.

	* bonobo/bonobo-client-site.c (bonobo_client_site_destroy): ditto.

	* bonobo/bonobo-control.c (bonobo_control_destroy): use unref on widget and
	uih.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_destroy): unref the widget
	instead of destroying it.

	* bonobo/bonobo-object.h: kill prototype for bonobo_object_destroy.

	* bonobo/bonobo-object.c (bonobo_object_object_destroy): rename to
	(bonobo_object_finalize_real): this. (bonobo_object_class_init): connect it.
	(bonobo_object_destroy): staticate.

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_bind_to_control):
	add FIXME.

	* bonobo/bonobo-control.c (bonobo_control_init): set control_frame to NIL.
	(bonobo_control_destroy): add unref on control_frame.

2000-07-08  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_destroy): hack out structure
	freeing. (bonobo_object_finalize): actually finalize.
	(bonobo_object_unref): finalize after destruction if neccessary.

	* bonobo/Makefile.am (Bonobo.h): more explicit single idl dependencies.

2000-07-07  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo.h: extern "C" it all.

2000-07-06  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am: Add files.

	* bonobo/bonobo-control.c (impl_Bonobo_Control_set_window): use
	bonobo_plug_new

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_construct): use
	bonobo_socket_new

	* bonobo/bonobo-socket.[ch], bonobo/bonobo-plug.[ch]: Private copies
	from gtk so we can fiddle effectively.

	* storage-modules/bonobo-stream-vfs.c (fs_copy_to): implement with
	nautilus code. (fs_seek): update. (fs_write): return IOError
	(fs_read): add eof code. (fs_eos): implement.
	(bonobo_stream_vfs_destroy): implement.
	(bonobo_stream_vfs_class_init): hook in.

	* bonobo/bonobo-selector.c (bonobo_selector_init): kill
	redundant vbox construction.

2000-07-05  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-client-site.h: fix terminal logic bug; using single
	bit field with int.

	* bonobo/bonobo-stream-client.c (bonobo_stream_client_write): change
	semantics, force use of CORBA_Environment, continue writing until
	fatal error, remove sluggish unneccessary malloc/copy/free code.
	(bonobo_stream_client_write_string): simplify and update.
	(bonobo_stream_client_read_string): cut down read size to 1; I clearly
	had a mental block the other day.

	* bonobo/bonobo-storage.c (bonobo_storage_corba_object_create): do a
	POA_Bonobo_Storage__init not a POA_Bonobo_Stream__init; dumbfounded
	that this ever worked!

	* idl/bonobo-persist.idl: add Bonobo::NotSupported exception
	(PersistStorage::load, PersistStorage::save, PersistStream::load),
	(PersistStream::save): add NotSupported exception.

2000-07-03  Michael Meeks  <michael@helixcode.com>

	* components/audio-ulaw/bonobo-audio-ulaw.c (stream_read): kill leak,
	update.

	* components/text-plain/bonobo-text-plain.c (stream_read): update.

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_create): memzero
	the buffer we allocate not the const pointer.

	* bonobo/bonobo-stream-client.c (bonobo_stream_client_read_string):
	simplify.

	* bonobo/bonobo-object-io.c (bonobo_persist_stream_load_goad_id):
	update. s/goad_id/object_iid/

	* storage-modules/gnome-stream-efs.c (real_read): fix.
	(real_truncate): fire except.

	* storage-modules/bonobo-stream-vfs.c (fs_read): upd & fire except.
	(fs_truncate, fs_seek): set exceptions (fs_length): set NotImplemented.

	* bonobo/bonobo-stream-memory.c (mem_truncate): fire except.
	(mem_read): update.

	* bonobo/bonobo-stream-fs.c (fs_truncate): fire the exception.
	(fs_read): kill leak, fire exception

	* idl/bonobo-storage.idl: remove return value, add IOError exception.

	* bonobo/bonobo-stream.c (impl_read): ditto.

	* bonobo/bonobo-stream.h: read fixes.

2000-07-02  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-control-frame.c (bonobo_control_frame_bind_to_control):
	check for NIL control.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_bind_to_view): check
	for NIL view.

2000-06-30  Michael Meeks  <michael@helixcode.com>

	* doc/debugging.txt: oaf debugging advice.

2000-07-02  Miguel de Icaza  <miguel@gnu.org>

	* bonobo-idl/bonobo-idl.1: Added man page.

2000-07-01  Miguel de Icaza  <miguel@gnu.org>

	* bonobo-idl/main.c: Split the code from here into names.c and
	util.c
	(parse_bcd): Now we parse the BCD file, 
	(load_section): Load extension to the header file.
	(compute_output_files): Figure out output files.

	* bonobo-idl/util.c, bonobo-idl/names.c: new files from the
	orinal main.c

2000-06-30  Miguel de Icaza  <miguel@gnu.org>

	* bonobo-idl/main.c: More work.  The only issue left now is how to
	integrate the user provided code in the .c and the .h files.

2000-06-30  Martijn van Beers  <martijn@earthling.net>

	* bonobo/*.h: remove all remaining extern declarations of _epv
	and _vepv structs

	* bonobo/bonobo-stream.[ch]
	  (bonobo_stream_corba_object_create): new function

	* bonobo/bonobo-stream-fs.c
	  (create_bonobo_stream_fs): moved this functionality to bonobo-stream.c
	  (bonobo_stream_create): use bonobo_stream_corba_object_create

	* bonobo/bonobo-stream-memory.c: ditto.

	* bonobo/bonobo-storage.[ch]
	  (bonobo_storage_corba_object_create): new function

	* storage_modules/bonobo-storage-vfs.c
	  (create_bonobo_storage_vfs): move this functionality to
	                               bonobo-storage.c
	  (do_bonobo_storage_vfs_create): use bonobo_storage_corba_object_create

	* storage-modules/gnome-storage-efs.c
	  (create_storage_efs_server): use bonobo_storage_corba_object_create

	* storage-modules/gnome-storage-fs.c
	  (create_bonobo_storage_fs): move this functionality to
	                              bonobo-storage.c
	  (do_bonobo_storage_fs_create): use bonobo_storage_corba_object_create

	* storage_modules/bonobo-stream-vfs.c
	  (create_bonobo_stream_vfs): move this functionality to bonobo-stream.c
	  (bonobo_stream_create): use bonobo_stream_corba_object_create

	* storage-modules/gnome-stream-efs.c
	  (create_stream_efs_server): use bonobo_stream_corba_object_create

2000-06-28  Dan Winship  <danw@helixcode.com>

	* bonobo/bonobo-main.c (bonobo_init): If we can't resolve the ORB,
	warn about that, rather than warning about the POA later.

2000-06-28  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-uih-menu.c (menu_toplevel_create_widgets): hack, utterly,
	brutaly, disgustingly and unmaintainably, this is the price of a placeholder.

	* bonobo/bonobo-container.c (impl_enum_objects): add BONOBO_OBJECT cast.

	* bonobo/bonobo-uih-menu.c (menu_type_to_corba, menu_corba_to_type),
	(bonobo_ui_handler_menu_new_placeholder),
	(menu_toplevel_create_item_widget): Add placeholder type.
	(NO_WIDGET_ITEM): add helper macro.
	(menu_toplevel_get_shell, menu_toplevel_create_widgets),
	(bonobo_ui_handler_menu_toplevel_remove_item_internal): use it.
	(RECURSE_ITEM): add helper macro.
	(menu_parse_uiinfo_tree, menu_parse_uiinfo_tree_with_data): use it.
	(bonobo_ui_handler_menu_path_exists): implement.
	(impl_Bonobo_UIHandler_menu_get_attributes): remove daftness in pos fetch.
	(debug_dump_uih_menu): implement for gdb;
	(impl_Bonobo_UIHandler_menu_get_attributes): don't get toggle state from
	non existant widgets.
	(menu_uiinfo_type_to_uih): add placeholder mapping.

	* bonobo/bonobo-ui-handler.h: add placeholder bits.

2000-06-28  Michael Meeks  <michael@helixcode.com>

	* Makefile.am (SUBDIRS): remove bonobo-idl for now.

2000-06-28  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo-idl/main.c: (search_interface): Fix random compile
	problem (I think I fixed it right, but who knows).

2000-06-27 J SHane Culpepper <pepper@eazel.com>
	
	* Makefile.am: addiing missing \ to subdirs.

2000-06-27  Miguel de Icaza  <miguel@helixcode.com>

	* idl/bonobo-factory.idl: rename goad_id to goadid to avoid the
	warning that ORBit is nicely generating.

	* bonobo-idl/: New directory, contains my bonobo-idl compiler to
	simplify the creation of Bonobo servers.

2000-06-26  Miguel de Icaza  <miguel@helixcode.com>

	* Makefile.am (SUBDIRS): Add Bonobo-idl to the compilation process

2000-06-27  Michael Meeks  <michael@helixcode.com>

	* storage-modules/Makefile.am (INCLUDES): add VFS_CFLAGS.
	(libstorage_vfs_la_INCLUDES): kill.

2000-06-26  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-stream-fs.c (bonobo_stream_fs_open): don't allow
	a directory to be opened.

	* bonobo/bonobo-stream-client.c (bonobo_stream_client_write),
	(bonobo_stream_client_write_string): clean
	(bonobo_stream_client_read_string): total re-write for performance and
	sensible termination.

2000-06-24  Michael Meeks  <michael@helixcode.com>

	* storage-modules/bonobo-storage-vfs.c (bonobo_storage_vfs_open):
	update logic. (bonobo_storage_vfs_open): close file after creation.
	(fs_create_storage): implement. (bonobo_storage_vfs_open): mkdir.
	(bonobo_storage_vfs_class_init): add an open_storage method !
	(fs_open_storage): implement.

2000-06-22  Miguel de Icaza  <miguel@helixcode.com>

	* bonobo/bonobo-object-client.c
	(bonobo_object_activate_with_oaf_id): Fixed documentation string.

2000-06-23  Michael Meeks  <michael@helixcode.com>

	* storage-modules/bonobo-storage-vfs.c (fs_list_contents): implement.
	(bonobo_storage_vfs_open): implement.
	(bonobo_storage_driver_open): init the vfs.

	* storage-modules/gnome-storage-fs.c (bonobo_storage_fs_open): fix leak.

2000-06-23  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am: remove bonobo-stream-fs.[ch] they move to

	* storage-modules/bonobo-stream-fs.[ch]: here.

	* storage-modules/Makefile.am: update.

	* storage-modules/gnome-storage-vfs.c (bonobo_storage_vfs_open): 

	* storage-modules/gnome-storage-fs.c (do_bonobo_storage_fs_create),
	(bonobo_storage_fs_open): fix serious type confusion.

2000-06-23  Michael Meeks  <michael@helixcode.com>
	
	* storage-modules/gnome-storage-vfs.[ch]: Add.

	* configure.in: add checks for gnome vfs.

	* storage-modules/Makefile.am (libstorage_vfs_la): add.

	* bonobo/bonobo-storage.c (bonobo_storage_open): add vfs option.

2000-06-22  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-object-client.c (bonobo_object_client_destroy):
	Don't ::unref if the object reference is nil.

2000-06-21  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-container.c (impl_enum_objects): simplify, removing
	deref and using accessor function.

	* bonobo/bonobo-client-site.c: s/bound_object/bound_embeddable/ to
	highlight which interface is primary.
	(bonobo_client_site_bind_embeddable): re-order to clean & store the
	embeddable interface only. (bonobo_client_site_destroy): destroy the
	embeddable object client. (bonobo_client_site_new_view_full): use the
	bound embeddable straight. (bonobo_client_site_get_verbs): ditto.

	* bonobo/bonobo-object-client.c (bonobo_object_client_ref),
	(bonobo_object_client_unref): implement.

2000-06-21  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-unknown.idl (query_interface): return an Unknown

	* bonobo/bonobo-object.c (bonobo_object_activate_servant): update to
	use Bonobo_Unknown.

	* bonobo/bonobo-object.h: ditto.

2000-06-20  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-client-site.c (bonobo_client_site_new_view_full),
	(bonobo_client_site_get_verbs): get the Embeddable interface from
	the aggregate before using it (bonobo_client_site_bind_embeddable):
	kill confusing 'bonobo_object' copy. Change the unref to a ref on
	the embeddable object. (bonobo_client_site_destroy): unref the bound object
	(bonobo_client_site_init): init bound_object to NULL.
	Many thanks to Erwin Ireland (eire@helixcode.com)

2000-06-18  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-uih-menu.c: (bonobo_ui_handler_menu_get_callback):
	Adjust style of last change to match Bonobo guidelines.

2000-06-16  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-uih-menu.c: (bonobo_ui_handler_menu_get_callback):
	Allow clients to pass NULL for return parameters they're not 
	interested in; remove g_return_if_fails.

2000-06-13 Ville Hautamaki <villeh@cs.joensuu.fi>

	* configure.in: Added fi

2000-06-13  Martin Baulig  <martin@suse.de>

	* gshell/gshell.c (main): If USING_OAF, initialize it.
	(buffer_create): Call bonobo_object_activate_with_oaf_id
	if we're USING_OAF.

	* gshell/inout.c (file_open): When USING_OAF, use
	"default_component_iid" as mime key.

2000-06-13  Maciej Stachowiak  <mjs@eazel.com>

	* components/text-plain/text-plain.oafinfo: Added text/*

2000-06-07  Pavel Cisler  <pavel@eazel.com>

	* bonobo/bonobo-uih-menu.c: (menu_free_temp_item),
	(bonobo_ui_handler_menu_new):
	Fixed a memory leak -- members of a temporary 
	BonoboUIHandlerMenuItem were not being freed properly.
	Added a free call to match make_menu_item that allocates
	the temporary item and called it.

2000-06-07  Darin Adler  <darin@eazel.com>

	Added a destroy-notify feature to callbacks for UI handler
	menu and toolbar items.

	* bonobo/bonobo-ui-handler.h: Added a destroy_notify field
	for the callback data inside both menu and toolbar items.  Added a
	destroy_notify parameter to bonobo_ui_handler_menu_set_callback,
	bonobo_ui_handler_menu_get_callback,
	bonobo_ui_handler_toolbar_item_set_callback, and
	bonobo_ui_handler_toolbar_item_get_callback. Added
	bonobo_ui_handler_menu_remove_callback_no_notify and
	bonobo_ui_handler_toolbar_item_remove_callback_no_notify.
	* bonobo/bonobo-uih-private.h: Added a destroy_notify field
	for the internal data for both menu and toolbar items.
	
	* bonobo/bonobo-uih-menu.c: (menu_copy_item): Don't copy callback
	data so it stays only in the local UI handler.
	(menu_free_data): Free the callback data too now that we have a
	function to do that.
	(bonobo_ui_handler_menu_fetch_one): Copy the destroy notify
	function pointer too.
	(bonobo_ui_handler_menu_set_callback): Set the destroy notify
	function and destroy the old callback data if present.
	(bonobo_ui_handler_menu_get_callback): Get the destroy notify
	function as well.
	(bonobo_ui_handler_menu_remove_callback_no_notify): New function
	that clears out the callback and data without calling the
	destroy-notify function. Needed for code that saves and restores
	the callback; similar to gtk_object_remove_no_notify.
	
	* bonobo/bonobo-uih-toolbar.c: (toolbar_copy_item): Don't copy
	callback data so it stays only in the local UI handler.
	(toolbar_free_data): Free the callback data too now that we have a
	function to do that.
	(toolbar_local_create_item): Set the destroy notify function.
	(bonobo_ui_handler_toolbar_item_set_callback): Added parameter
	to this unimplemented function stub.
	(bonobo_ui_handler_toolbar_item_get_callback):  Added parameter
	to this unimplemented function stub.
	(bonobo_ui_handler_toolbar_item_remove_callback_no_notify):
	Added an unimplemented function stub.

	* bonobo/bonobo-ui-handler.h:
	* bonobo/bonobo-uih-menu.c:
	* bonobo/bonobo-uih-private.h:
	* bonobo/bonobo-uih-toolbar.c:
	Changed BonoboUIHandlerCallbackFunc to BonoboUIHandlerCallback.
	Got rid of lots of extraneous NULL checks just before doing
	BONOBO_IS_XXX checks.
	
	(Editorial comment: It's lame that the toolbar and menu files
	contain	two nearly-identical cut-and-pasted piles of code. But
	I did nothing to improve the situation.)

2000-06-03  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_create): constipate.

2000-05-31  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-widget.c (bonobo_widget_get_property): fix leaking
	property bag.

	* bonobo/bonobo-control.c (bonobo_control_get_property),
	(bonobo_control_set_property): ditto.

2000-05-31  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-uih-menu.c (menu_toplevel_create_widgets):
	Initialize the status of the item to zero.
	(menu_toplevel_store_data): Don't initialize `active'.
	(menu_toplevel_set_toggle_state_internal): Don't set `active'.
	(menu_toplevel_get_toggle_state): Reimplemented by getting the
	widget and reading the state from it.

	* bonobo/bonobo-uih-private.h: Removed member `active' from
	`MenuItemInternal'.

	* bonobo/bonobo-widget.c
	(bonobo_widget_set_property): Leak plug: release the property bag
	after getting it from the control frame.

	* bonobo/bonobo-uih-menu.c
	(impl_Bonobo_UIHandler_menu_create): Leak plug: free the
	`BonoboUIHandlerMenuItem' with `menu_free()' and don't free
	`item->pixmap_type' and `item->pixmap_data' manually.

2000-05-29  Matt Bissiri  <bissiri@eecs.umich.edu>
 
	* bonobo/bonobo-object-directory-oaf.c (od_get_server_list):
 	Fix bug where only the last element of the required_ids argument
 	was included in the oaf query.
 	Also changed `and' to `AND' in the query, to avoid an oaf parse error.
 	
2000-05-30  Michael Meeks  <michael@helixcode.com>

	* doc/api/bonobo.types: update gnome-bonobo.h, rename.

	* configure.in (have_oaf): add gtkdoc check.

	* doc/api/Makefile.am (dist-hook): add rule.

2000-05-29  Michael Meeks  <michael@helixcode.com>

	* Makefile.am: add doc & macros.

	* components/audio-ulaw/Makefile.am: uncomment doc.

	* bonobo.spec: kill image-x-png references.

	* configure.in (have_oaf): give a helpful error message if you don't have oaf.

2000-05-27  Michael Meeks  <michael@helixcode.com>

	* configure.in: bump version, set oaf as the default.

2000-05-26  Mike Kestner  <mkestner@ameritech.net>

	* bonobo/bonobo-ui-handler.h,
	* bonobo/bonobo-uih-toolbar.c 
	(bonobo_ui_handler_toolbar_new_toggleitem):
	(bonobo_ui_handler_toolbar_new_radioitem): 
	Added pixmap type and pixmap data parameters.
	
2000-05-26  Dan Winship  <danw@helixcode.com>

	* idl/bonobo-persist.idl: rename StreamType and StreamTypeList to
	ContentType and ContentTypeList. Remove unused get_types,
	get_type, and set_type methods. Add Persist::get_content_types.
	Add a ContentType parameter to PersistStream::load and ::save

	* bonobo/bonobo-persist.[ch] (bonobo_persist_from_servant): New
	function.
	(impl_get_content_types): Default implementation for
	Bonobo::Persist::get_content_types.
	(bonobo_persist_generate_content_type): CORBA ickiness wrapper
	helper function.

	* bonobo/bonobo-persist-stream.[ch] (impl_load, impl_save,
	impl_get_size_max, bonobo_persist_stream_nop): Update for
	interface changes.
	(bonobo_persist_stream_size_unknown): Replacement for
	bonobo_persist_stream_zero that was supposed to have been
	committed long ago.
	(get_content_types): default implementation.
	(bonobo_persist_stream_class_init,
	bonobo_persist_stream_construct, bonobo_persist_stream_new):
	Update to use additional function pointers for better overriding
	action.

	* gshell/inout.c (buffer_save_ps, buffer_load_ps): 
	* bonobo/test-container.c (add_image_cmd, add_pdf_cmd,
	add_text_cmd): 
	* bonobo/bonobo-property-bag-client.c
	(bonobo_property_bag_client_persist,
	bonobo_property_bag_client_depersist): 
	* bonobo/bonobo-object-io.c (bonobo_persiststream_save_to_stream): 
	* bonobo/bonobo-object-client.c (bonobo_object_restore_from_url):
	Update for Bonobo_PersistStream_{load,save} change.

	* components/text-plain/bonobo-text-plain.c (stream_read,
	pstream_load, pstream_save, pstream_get_max_size,
	pstream_get_content_types):
	* components/audio-ulaw/bonobo-audio-ulaw.c (pstream_load,
	pstream_save, pstream_get_max_size, pstream_get_content_types):
	Update for PersistStream changes.

	* bonobo/test-container-autoload.c (hydrate_object_from_file_cb): 
	(add_object_to_container): Fix a bug in the GOAD->OAF conversion

	* bonobo/bonobo-ui-handler.c (path_escape_forward_slashes): const
	poisoning

2000-05-25  Iain Holmes  <ih@csd.abdn.ac.uk>

	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_item_set_pixmap_internal):
	fix to allow labelless toolbar items.

2000-05-23  Mike Kestner  <mkestner@ameritech.net>

	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_item_create_widgets): 
	  Merged the ITEM and TOGGLEITEM cases to allow pixmaps for 
	  toggle items.

2000-05-23  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-factory.idl: update manufactures' param name to 'goad_id'
	to please my friend Ettore.

2000-05-20  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am (libbonobo_la_SOURCES): move CORBA_SOURCE back
	to top where it belongs.

2000-05-19  Dan Winship  <danw@helixcode.com>

	* configure.in: Check for ORBit 0.5.1

2000-05-18  Iain Holmes  <ih@csd.abdn.ac.uk>

	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_item_set_pixmap_internal): 
	Fixup brokenness in paths.

2000-05-15  Darin Adler  <darin@eazel.com>

	* configure.in: Added gdk_pixbuf to the list for CFLAGS and LIBS.
	Bonobo has required this for some time, but we missed this detail
	when adding the dependency.

2000-05-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object.c (bonobo_object_query_local_interface): fix
	repo_id for ancient ORBits

2000-05-13  Iain Holmes  <ih@csd.abdn.ac.uk>

	* samples/compound-doc/container/container.c: (sample_app_exit):
	Iterate through the list of components destroying them before we
	quit.

2000-05-12  Miguel de Icaza  <miguel@helixcode.com>

	* bonobo/Makefile.am (EXTRA_DIST): Add a few sources to the
	distribution.  Whoever did this hack did it wrong.

2000-05-11  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-uih-menu.c: (impl_Bonobo_UIHandler_menu_fetch):
	Finished implementation by filling in pixmap_type and
	pixmap_data parameters instead of leaving them uninitialized
	for the caller to choke on.

2000-05-10  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/Makefile.am: Make sure both object directory
	implementations are always distributed.

2000-05-10  John Sullivan  <sullivan@eazel.com>

	Fixed and improved path-building routines, one of which wasn't
	implemented and the other of which was bug-ridden, obviously
	never executed, and conceptually incomplete.

	* bonobo/bonobo-ui-handler.h,
	* bonobo/bonobo-ui-handler.c: 
	(bonobo_ui_handler_build_path): Fixed bugs where g_strconcat was always
	called with an illegal non-trailing NULL, and never with the required
	trailing NULL. (This caused the function to previously always return
	NULL and spew out some error messages) Also changed API so that the 
	first piece is taken intact, so that it can be a partial path. This is
	necesssary for components to merge with submenu items without using
	inside knowledge of the mergee's path or the separator character.
	(bonobo_ui_handler_build_path_v): Implemented this previously-missing
	function by stealing the guts of build_path and making build_path
	call this one.

2000-05-10  Joe Shaw <joe@helixcode.com>

	* bonobo/bonobo-property-bag-client.c (SEND/RECIEVE): Added a new
	parameter, ansip, that holds the ANSI promoted type that needs to
	be passed to va_arg for ANSI compliance. Also, fixed typo of
	RECIEVE to RECEIVE.

	* bonobo/bonobo-propert-bag-client.c (bonobo_property_bag_client_setv,
	bonobo_property_bag_client_getv): Changed calls to SEND and RECEIVE to
	reflect the above changes.

2000-05-08  Michael Meeks  <michael@helixcode.com>

	* gshell/Makefile.am (gshell_SOURCES): add properties.h

	* components/audio-ulaw/Makefile.am (EXTRA_DIST): correct case.

	* samples/compound-doc/Makefile.am (EXTRA_DIST): ditto.

	* components/text-plain/Makefile.am: correct case of EXTRA_DIST.

2000-05-05  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-persist.idl: comment out accidentaly committed methods.

2000-05-03  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/item.gnorba: move here.

	* samples/compound-doc/item.oafinfo: move here

	* samples/compound-doc/Makefile.am: setup sample-canvas-item.

	* bonobo/Makefile.am: update.

	* bonobo/sample.idl: kill

	* bonobo/sample.oafinfo: kill

	* bonobo/sample.gnorba: kill.
	
	* bonobo/sample-item.c: move.
	
	* bonobo/sample-server.c: kill.

	* bonobo/item.*: move.

	* bonobo/test-bw.c: kill

	* HACKING: update.

	* TODO: ditto.

2000-05-02  Michael Meeks  <michael@helixcode.com>

	* components/text-plain/bonobo-text-plain.c (init_server_factory):
	use the right orb.

	* bonobo/bonobo-selector.c (get_filtered_objects): fix serious bug
	in sorting.

	* bonobo/bonobo-object-directory-oaf.c (od_get_server_list): clean.

	* idl/bonobo-storage.idl: fix docs.

2000-05-01  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-uih-menu.c (menu_toplevel_remove_radio_menu_item),
	(menu_toplevel_remove_widgets): Added code to properly handle the case
	where a radio menu item is going away. We have to keep our list head up
	to date, since the item might be the first one in the list.
	(menu_toplevel_remove_data): Removed a related FIXME.
	
	* bonobo/bonobo-uih-private.h: Fixed a comment and removed the unused
	radio_items field from the toolbar struct.
	
	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_item_remove_data):
	Removed copied code inherited from the menu code that made no sense
	for the toolbar case.
	
	* gshell/gshell.c (edit_menu_preferences_cb): Fixed a warning.
	* tools/bonobrowser/register-new-object.c (register_object),
	(delete_clist_item): Fixed warnings.
	* tools/bonobrowser/utils.c (contains_whitespace): Fixed warnings.

2000-05-01  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-object-client.h: re-order.

2000-05-01  Michael Meeks  <michael@helixcode.com>

	* components/Makefile.am: kill x-png.

	* components/image-x-png: Kill.

	* components/bonobo.keys: update; this is doomed to die soon anyway.

	* configure.in: kill image-x-png.

2000-05-01  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/Makefile.am: hack out sample container.

	* samples/compound-doc/container: Add Gergo's bonobo-hello, renamed
	and fiddled a little.

	* samples/compound-doc/bonobo-hello: Add Gergo's nice sample bonobo
	component.

	* configure.in: Kill print and add temporary oaf message.

2000-04-27  Michael Meeks  <michael@helixcode.com>

	* MAINTAINERS (Email): Nat steps down as maintainer.

2000-05-01  Anders Carlsson  <andersca@gnu.org>

	* bonobo/bonobo-object-directory-oaf.c (od_get_server_list): Try to get
	name and description from oaf.

	* bonobo/selector_test.c (panel_callback): Fix a segfault that
	occured when using oaf. (Trying to free a non-allocated char pointer);

	* bonobo/bonobo-selector.c (select_row): Set label to description field.
	(bonobo_selector_init): New design of the BonoboSelector widget.
	(add_gnorba_objects): Get the name.
	(server_list_compare): Function for g_list_sort which sorts the
	name list ascending.

	* bonobo/bonobo-object-directory.h: Add extra name field

	* bonobo/bonobo-object-directory.c (od_server_info_get_name): New function.
	(od_server_info_unref): Free the new field.
	(od_server_info_new): Take three parameters.

	* bonobo/bonobo-object-directory-goad.c (od_get_server_list): Set new
	description field to NULL since goad hasn't got a description.

	* bonobo/bonobo-object-directory.c: Add extra name field.

	* bonobo/Makefile.am (EXTRA_DIST): Add xpm file to EXTRA_DIST.

	* bonobo/bonobo-insert-component.xpm: New file.


2000-04-30  Miguel de Icaza  <miguel@helixcode.com>

	* bonobo/bonobo-widget.c (bonobo_widget_destroy): Chain to parent
	widget destroy method, release our resources. 
	unref and release reference to the corba object here.
	(bonobo_widget_new_subdoc): Destroy object if we fail to launch
	the Bonobo component.  Maybe we need to return a better error than NULL?
	(bonobo_widget_create_subdoc_object): Ref and corba-duplicate the ui handler here.
	(bonobo_widget_construct_control_from_objref): Ref the ui handler
	and corba-duplicate here.

2000-04-30  Mathieu Lacage <mathieu@gnu.org>

	* bonobo/bonobo-wrapper.c: fixes a size negociation 
	patch which tried to allocate 65xxx width and height
	to the widget underlying the wrapper. this happened
	because width and height are guint16 in GtkAllocation.
	Also, code cleanups. Removed the old gc used to paint
	on children and not around. This widget is nearing 
	perfection ;)

2000-04-29  Mathieu Lacage <mathieu@gnu.org>

	* samples/compound-doc/sample-container.c: I am being
	very tired. forgot to g_free the Component struct.
	Who uses this code anyway ? 

	* bonobo/bonobo-object.c: remove the debugging output.
	I am fucking tired and stupid.

2000-04-29  Ettore Perazzoli  <ettore@helixcode.com>

	* gnorba2oafinfo.pl (printserver): Indent things a bit more nicely
	in the output file.

2000-04-29  Mathieu Lacage <mathieu@gnu.org>

	* samples/compound-doc/sample-container.c: the Container
	structure was not correctly reinitialized when a component
	was destroyed which meant that the Container was trying to 
	reaccess some random cruft in memory which had been freed...
	bad bad stuff. It is nearing something almost stable now.
	But this piece of code SHOULD disapear. definitely.

	* bonobo/bonobo-object.c: add some g_warning output in case 
	of CORBA exception in bonobo_object_check_env. 
	
2000-04-29  Kjartan Maraas  <kmaraas@online.no>

	* bonobo/bonobo-uih-menu.c: Added #include <config.h>
	* bonobo/bonobo-uih-toolbar.c: Same here. This makes the menus
	and toolbars i18n'able.
	* gshell/gshell.c: Same here too.
	* gshell/inout.c: Likewise.
	* gshell/menu.c: Likewise.
	* tools/bonobrowser/*.c: Marked strings for translation.
				
2000-04-29  Mathieu Lacage <mathieu@gnu.org>

	* bonobo/bonobo-wrapper.c: bonobo_wrapper_realize.
	set the event mask to receive expose events. Thanks to
	George Lebl <jirka@eazel.com> who gave me the fix.

2000-04-28  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-uih-menu.c (menu_toplevel_create_widgets):
	Fixed a bug that caused all the radio items to be linked into
	one huge radio group. There's still a problem if you remove one
	of the radio items and then try to add more to the same group,
	since the GtkRadioMenuItem class doesn't know to update the
	radio_items list pointer inside the UI handler.

	* bonobo/bonobo-control.c (bonobo_control_construct):
	Sink the widget when we ref it, since the container is going to
	sink it later anyway. This makes things work better in the case
	where we fail before the widget gets added to a container.
	
	* bonobo/bonobo-arg.c (bonobo_arg_from_gtk), (bonobo_arg_to_gtk):
	* bonobo/bonobo-canvas-component.c (gcc_realize), (gcc_draw):
	* bonobo/bonobo-canvas-item.c (gbi_update), (gbi_realize),
	(gbi_unrealize), (gbi_draw), (gbi_point), (gbi_bounds),
	(gbi_render), (gbi_event):
	* bonobo/bonobo-control-frame.c
	(bonobo_control_frame_state_to_corba):
	* bonobo/bonobo-control.c (bonobo_control_gtk_state_from_corba):
	* bonobo/bonobo-embeddable.c (impl_Bonobo_Embeddable_new_view),
	(bonobo_embeddable_remove_verb):
	* bonobo/bonobo-main.c (bonobo_x_error_handler):
	* bonobo/bonobo-object-directory-goad.c (od_assert_using_goad):
	* bonobo/bonobo-object-directory-oaf.c (od_server_unregister):
	* bonobo/bonobo-object.c (bonobo_object_class_init):
	* bonobo/bonobo-persist-stream.c (impl_load), (impl_save):
	* bonobo/bonobo-progressive.c (impl_start), (impl_end),
	(impl_add_data), (impl_set_size):
	* bonobo/bonobo-property-bag-client.c
	(bonobo_property_bag_client_persist),
	(bonobo_property_bag_client_depersist):
	* bonobo/bonobo-property-bag-xml.c
	(bonobo_property_bag_xml_stream_buffer),
	(bonobo_property_bag_xml_unstream_buffer),
	(bonobo_property_bag_xml_load_property),
	(bonobo_property_bag_xml_depersist):
	* bonobo/bonobo-property-bag.c
	(impl_Bonobo_PropertyBag_get_properties),
	(bonobo_property_bag_destroy):
	* bonobo/bonobo-simple-source.c (impl_pop_data):
	* bonobo/bonobo-stream-client.c
	(bonobo_stream_client_write_string),
	(bonobo_stream_client_read_string):
	* bonobo/bonobo-stream-memory.c (mem_copy_to):
	* bonobo/bonobo-ui-handler.c
	(bonobo_ui_handler_toplevel_check_toplevel),
	(bonobo_ui_handler_local_do_path),
	(bonobo_ui_handler_toplevel_create_pixmap),
	(bonobo_ui_handler_pixmap_free_data),
	(bonobo_ui_handler_pixmap_copy_data),
	(bonobo_ui_handler_pixmap_type_to_corba),
	(bonobo_ui_handler_pixmap_corba_to_type),
	(bonobo_ui_handler_pixmap_data_to_corba),
	(bonobo_ui_handler_pixmap_corba_to_data),
	(bonobo_ui_handler_uiinfo_pixmap_type_to_):
	* bonobo/bonobo-uih-dock.c
	(bonobo_ui_handler_dock_placement_to_corb),
	(bonobo_ui_handler_dock_placement_from_co):
	* bonobo/bonobo-uih-menu.c (menu_type_to_corba),
	(menu_corba_to_type), (menu_local_remove_parent_entry),
	(menu_local_remove_item_recursive),
	(menu_toplevel_create_item_widget),
	(impl_Bonobo_UIHandler_menu_activated),
	(menu_toplevel_remove_parent_entry),
	(menu_toplevel_add_parent_entry),
	(impl_Bonobo_UIHandler_menu_overridden),
	(impl_Bonobo_UIHandler_menu_removed),
	(impl_Bonobo_UIHandler_menu_reinstated), (BonoboUIHandlerMenuItem):
	* bonobo/bonobo-uih-toolbar.c (toolbar_type_to_corba),
	(toolbar_corba_to_type), (toolbar_local_remove_parent_entry),
	(impl_Bonobo_UIHandler_toolbar_overridden),
	(impl_Bonobo_UIHandler_toolbar_activated),
	(toolbar_type_to_gtk_type), (toolbar_toplevel_item_create_widgets),
	(toolbar_toplevel_item_remove_parent_entr),
	(impl_Bonobo_UIHandler_toolbar_reinstated),
	(impl_Bonobo_UIHandler_toolbar_removed),
	(toolbar_uiinfo_type_to_uih):
	* bonobo/gnome-property-bag.c
	(impl_GNOME_PropertyBag_get_properties),
	(gnome_property_bag_destroy), (gnome_property_bag_set_prop_type):
	* bonobo/sample-item.c (main):
	* bonobo/sample-server.c (main):
	* bonobo/test-container-autoload.c (launch_server), (main):
	* bonobo/test-container.c (launch_server), (launch_server_moniker),
	(view_activated_cb), (main):
	* bonobo/test-storage.c (main):
	* bonobo/test-ui-handler.c (main):
	* gshell/gshell.c (main):
	* samples/compound-doc/sample-container.c
	(component_view_activated_cb), (main):
	* samples/controls/bonobo-clock-control.c (get_prop), (set_prop):
	* samples/controls/sample-control-container.c (main):
	* tests/test-properties-client.c (create_bag_client), (main):
	* tests/test-properties-server.c (simple_prop_to_string):
	Took out lots of excess \n characters in log messages. So sue me!

2000-04-27  Mathieu Lacage <mathieu@gnu.org>

	* bonobo/bonobo-wrapper.c: fixes the good old bug which left
	a GdkWindow lying in your containers whenever you used the 
	Wrapper. See mail 
	http://mail.gnome.org/pipermail/gnome-components-list/2000-April/000048.html
	* bonobo/bonobo-canvas-component.c: fixes some function 
	documention.
	* bonobo/bonobo-client-site.c: idem.
	* bonobo/bonobo-container.c: idem.
	* bonobo/bonobo-control.c: idem
	* bonobo/bonobo-control-frame.c: idem
	* bonobo/bonobo-desktop-window.c: idem	
	* bonobo/bonobo-embeddable.c: idem
	* bonobo/bonobo-generic-factory.c: idem	
	* bonobo/bonobo-object.c: idem
	* bonobo/bonobo-object-client.c: idem

2000-04-27  Maciej Stachowiak  <mjs@eazel.com>

	* doc/standard-attributes.txt: Added a pointer to the attributes
	document in the oaf module.
	
	* bonobo/item.oafinfo, bonobo/sample.oafinfo,
	components/audio-ulaw/audio-ulaw.oafinfo
	components/application-x-gnomine/application-x-mines.oafinfo,
	components/image-x-png/image-x-png.oafinfo,
	components/text-plain/text-plain.oafinfo,
	samples/bonobo-class/echo.oafinfo,
	samples/compound-doc/paint-component-simple.oafinfo,
	samples/controls/bonobo-calculator-control.oafinfo,
	samples/controls/bonobo-clock-control.oafinfo: Added all standard
	attributes that make sense.

2000-04-26  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-control-frame.c
	(bonobo_control_frame_get_control_property_bag): Added
	preconditions.

2000-04-25  Maciej Stachowiak  <mjs@eazel.com>

	* samples/controls/sample-control-container.c,
	samples/controls/bonobo-clock-control.c,
	samples/controls/bonobo-calculator-control.c: Add forgotten
	USING_OAF conditionals which made this not work with
	gnorba. Thanks to Michael Meeks <michael@helixcode.com> for
	catching this problem.

2000-04-24  Arjan Scherpenisse  <acscherp@wins.uva.nl>

	* configure.in (ALL_LINGUAS): Added dutch translation

2000-04-24  Gene Z. Ragan  <gzr@eazel.com>

	* bononbo/bonobo-ui-handler.c
	(bonobo_ui_handler_toplevel_create_pixmap):
	Added a check for a NULL bitmap when calling gdk_bitmap_unref().  It is 
	legal for this to be NULL, as gdk_pixbuf_render_pixmap_and_mask() does not
	require the mask bitmap to be valid. However, gdk_bitmap_unref() will assert if
	the bitmap is not valid.
	
2000-04-21  Martin Baulig  <martin@home-of-linux.org>

	* gshell/properties.[ch]: New files. Basically copied from
	samples/controls/bonobo-clock-control.c.
	(show_properties_dialog): New function to show a dialog box
	in which the user can edit the control's properties.

	* gshell/gshell.c (edit_menu_preferences_cb): Call
	show_properties_dialog ().

2000-04-21  Ettore Perazzoli  <ettore@helixcode.com>

	* configure.in: Prepend `BONOBO_INCLUDEDIR' with `-I{$includedir}'
	so that if Bonobo is installed under a prefix that is different
	from the default GNOME one, things still work.

2000-04-21  Ettore Perazzoli  <ettore@helixcode.com>

	* samples/compound-doc/Makefile.am
	(paint_component_simple_LDADD): You don't want to use
	`BONOBO_LIBS' here as bonobo is not yet installed when you get
	here.  Use `GNOME_PRINT_LIBS' instead.
	(sample_container_LDADD): Likewise.  Use `GNOME_PRINT_LIBS'
	instead.

	* configure.in: Avoid defining `BONOBO_LIBS' and
	`BONOBO_INCLUDEDIR' more than once.  Instead, define
	`GNOME_PRINT_LIBS'.

2000-04-20  Dan Winship  <danw@helixcode.com>

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_create): Always
	copy the provided buffer, rather than adopting it in the read_only
	case. Allow the caller to pass NULL for buffer, meaning "allocate
	it yourself". Add a new arg saying whether or not to expand the
	buffer on writes/seeks off the end.
	(mem_write, mem_seek): expand buffer when needed.
	(bonobo_stream_mem_get_buffer): new accessor.

2000-04-18  Matt Loper  <matt@helixcode.com>

	* bonobo/bonobo-control.c (bonobo_control_construct): Set
	control->priv->propbag to NULL.

2000-04-16  Maciej Stachowiak  <mjs@eazel.com>

	Made --enable-oaf=yes work properly:

	* configure.in, accondig.h: define USING_OAF when using OAF so
	test programs can compile either way.
	
	* bonobo/Makefile.am: install bonobo-object-directory.h
	
	* bonobo/bonobo-selector.h, bonobo/bonobo-selector.c
	(bonobo_selector_get_selected_id, bonobo_selector_select_id): New
	functions to let you select an object ID without caring if you are
	using GOAD or OAF.

	* bonobo/bonobo-object-directory.h,
	bonobo/bonobo-object-directory-oaf.c,
	bonobo/bonobo-object-directory-goad.c
	(od_name_service_get): New function to abstract getting the name
	service.
	
	* bonobo/bonobo-moniker-client.c: Don't include gnorba headers;
	include bonobo-object-directory.h with <> instead of "".
	(bonobo_moniker_find_in_naming_service, bonobo_moniker_unregister,
	bonobo_moniker_register): Use the OD interface to get the name
	service

	* bonobo/Makefile.am, components/Makefile.am
	components/application-x-gnomine/Makefile.am,
	components/audio-ulaw/Makefile.am,
	components/image-x-png/Makefile.am,
	components/text-plain/Makefile.am, gshell/Makefile.am
	samples/bonobo-class/Makefile.am,
	samples/compound-doc/Makefile.am, samples/controls/Makefile.am,
	tests/Makefile.am: Properly conditionally link against OAF or
	GNORBA libs; distribute both .gnorba and .oaf files, and install
	the appropriate ones.

	* bonobo/sample-item.c, bonobo/sample-server.c,
	bonobo/selector_test.c, bonobo/test-bw.c,
	bonobo/test-container-autoload.c, bonobo/test-container.c,
	bonobo/test-storage.c,
	components/application-x-gnomine/bonobo-application-x-mines.c,
	components/audio-ulaw/bonobo-audio-ulaw.c,
	components/audio-ulaw/bonobo-audio-ulaw.h,
	components/image-x-png/bonobo-image-x-png.c,
	components/text-plain/bonobo-text-plain.c, doc/goad2oaf.txt,
	samples/bonobo-class/echo-client.c, samples/bonobo-class/echo.c,
	samples/bonobo-class/main.c,
	samples/compound-doc/paint-component-simple.c,
	samples/compound-doc/sample-container.c,
	samples/controls/bonobo-calculator-control.c,
	samples/controls/bonobo-clock-control.c,
	samples/controls/sample-control-container.c,
	samples/controls/sample-control-factory.c: Converted to work with
	either GOAD or OAF.

	* gnorba2oafinfo.pl: Script to convert .gnorba/.goad files to
	.oafinfo.

	* item.oafinfo, sample.oafinfo, application-x-mines.oafinfo,
	audio-ulaw.oafinfo, image-x-png.oafinfo, text-plain.oafinfo,
	echo.oafinfo, paint-component-simple.oafinfo,
	bonobo-calculator-control.oafinfo, bonobo-clock-control.oafinfo:
	New OAF activation records translated from corresponding .gnorba
	files.

2000-04-14  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-print.c (impl_render): kill thinko NULLing user_data pointer.

	* bonobo/bonobo-print-client.c (bonobo_print_data_new, bonobo_print_data_new_full),
	(bonobo_print_data_get_meta): implement.
	(do_render): move into (bonobo_print_client_render): here and re-organise.

	* bonobo/bonobo-print-client.h: Split out BonoboPrintData construction, to
	allow its use elsewhere.

	* samples/compound-doc/sample-container.c (container_print_preview_cmd): tiny
	touch for new API.

2000-04-13   Nat Friedman, Dan Winship <nat,danw@helixcode.com>

	* bonobo/bonobo-persist-stream.c
	(bonobo_persist_stream_minus_one): The correct value for not
	supported was documented as minus one.  

2000-04-13  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-print-client.c: Total API re-write.

	* bonobo/bonobo-print.c (impl_render): update & kill leak, add copy.

	* samples/compound-doc/paint-component-simple.c (render_fn): update.

	* samples/compound-doc/sample-container.c (container_print_preview_cmd): ditto.

2000-04-11  Gene Z. Ragan  <gzr@eazel.com>

	Added support for rgb pixbufs to ui handlers.  This entailed linking
	against gdk-pixbuf, which is the approved internal format for
	RGB pixbuf data.

	* bonobo/bonobo/bonobo-ui-handler.c
	Added support for RGB bitmaps.  Removed references to
	BONOBO_UI_HANDLER_PIXMAP_RGB_DATA and BONOBO_UI_HANDLER_PIXMAP_RGBA_DATA.
	Replaced these contants with BONOBO_UI_HANDLER_PIXMAP_PIXBUF_DATA which
	is more applicable to the type of data we are using.

	* bonobo/bonobo/bonobo-ui-handler.h
	Removed BONOBO_UI_HANDLER_PIXMAP_RGB_DATA and BONOBO_UI_HANDLER_PIXMAP_RGBA_DATA
	and replaced with BONOBO_UI_HANDLER_PIXMAP_PIXBUF_DATA.

	* bonobo/idl/bonobo-ui-handler.idl
	Removed PixmapTypeRGBData and PixmapTypeRGBAData and replaced
	with PixmapTypePixbufData.

2000-04-11  Michael Meeks  <michael@helixcode.com>

	* idl/Makefile.am (idl_DATA): add bonobo-print.idl.

2000-04-10  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-property.idl: add comments describing values.

	* doc/properties.txt: write.

2000-04-10  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/sample-container.c (container_create): init components.
	(Container): Add list of  (container_activate_component): manage list.
	(component_shutdown): ditto. (container_print_preview_cmd): use the list.

	* bonobo/bonobo-print.c (impl_render): kill erroneous showpage.

	* samples/compound-doc/sample-container.c (container_print_preview_cmd): 
	add showpage + fix preview placement.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_get_flags): 
	pass all flags not just readonly.

	* idl/bonobo-property.idl: use get_flags not is_read_only.

	* bonobo/bonobo-property.c (bonobo_property_get_epv): change names
	(impl_Bonobo_Property_is_read_only): renamed to
	(impl_Bonobo_Property_get_flags): pass flags on.

	* bonobo/bonobo-arg.h (BONOBO_ARG_SET_STRING): add check for NULL.

2000-04-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am: kill gprint conditional.

	* samples/compound-doc/Makefile.am: ditto.

	* acconfig.h: ditto.

	* samples/compound-doc/paint-component-simple.c: ditto.

	* samples/compound-doc/sample-container.c: ditto.

	* configure.in: Update to require gnome-print.

	* bonobo/bonobo-print.c (bonobo_print_context_new): flip orientation so
	always valid.

	* bonobo/bonobo-print*: turn off debug by default.
	
2000-04-09  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-print.idl: fix.

	* bonobo/bonobo-print.c (impl_render): new print api. (impl_init): Kill.
	(bonobo_print_context_new, bonobo_print_context_new_from, bonobo_print_context_free):
	implement.

	* bonobo/bonobo-print-client.c (bonobo_print_client_print_to): new print api.

2000-04-08  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-print-client.c (bonobo_print_client_print_to): clean
	debug.

	* bonobo/bonobo-print.c (impl_render): clean, conditionalize debug.
	(impl_init): ditto + add red bbox render.

2000-04-08  Jody Goldber <jgoldberg@home.com>

	* idl/bonobo-print.idl: Create a dummy version until Michael can
	  commit the real one.

2000-04-08  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-print-client.[ch]: Created.

	* bonobo/bonbo-print.[ch]: ditto.

2000-04-07  Michael Meeks  <michael@helixcode.com>

	* samples/compound-doc/paint-component-simple.c (render_fn),
	(init_fn): implement demo remote printing.

	* bonobo/bonobo-object.c (bonobo_object_add_interface): add a possibly
	helpful warning.

	* samples/compound-doc/Makefile.am: Add printing.

	* configure.in: complicate to handle printing.

	* acconfig.h: ditto.

	* samples/compound-doc/paint-component-simple.c: Add printing support.

	* configure.in: Add checks for printing.

	* bonobo/*.c: Update head comments s/gnome/bonobo/

	* idl/bonobo-print.idl: create.

	* bonobo/Makefile.am: Add bonobo-print

	* samples/controls/bonobo-clock-control.c: use enum instead of define.

2000-04-06  Dan Winship  <danw@helixcode.com>

	* bonobo/bonobo-control.c (bonobo_control_get_widget): New
	accessor to get the GtkWidget out of a BonoboControl.

2000-04-04  Darin Adler  <darin@eazel.com>

	Changes to get things building again.

	* bonobo/bonobo-property-bag-xml.c (bonobo_property_bag_xml_persist):
	* tests/test-properties-client.c (simple_print_read_only):
	* tests/test-properties-server.c (print_props)
	Fixed places where it was still using BONOBO_PROPERTY_READ_ONLY and
	BONOBO_PROPERTY_WRITE_ONLY.

	* bonobo/bonobo-control-frame.c:
	* bonobo/bonobo-control.c: 
	* bonobo/bonobo-moniker-client.c: 
	* bonobo/bonobo-moniker.c: 
	* bonobo/bonobo-object-client.c:
	Remove some redundant checks for NULL just before object type checks
	which also check for NULL.

2000-04-04  Michael Meeks  <michael@helixcode.com>

	* samples/controls/bonobo-clock-control.c (bonobo_entry_factory): implement.
	(bonobo_clock_factory_init): update.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_get_value): use the
	right user_data (bonobo_property_bag_set_value): ditto + right set fn.

2000-04-03  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-arg.c (bonobo_arg_new_default): Killed in favour of
	(bonobo_arg_init_default): create.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_get_default):
	update to use new default init fn.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_get_flags): 
	update to new names; we really need to pass all the flags; it's folly not
	to.

	* bonobo/bonobo-arg.c (bonobo_arg_type_from_gtk, bonobo_arg_to_gtk),
	(bonobo_arg_from_gtk): implement.

	* bonobo/bonobo-property-bag.h: rename the property flags to make
	more sense; kill read_only / write_only make more gtk-like. kill
	redundant macros.

	* bonobo/bonobo-property-bag.c (bonobo_property_bag_add_full): update
	to suite & improve developer debugging support.

2000-04-02  Jon K Hellan  <hellan@acm.org>

	* bonobo/bonobo-uih-menu.c (menu_parse_uiinfo_one): Tolerate NULL
	pixmap in GnomeUIInfo.

2000-04-01  Michael Meeks  <michael@helixcode.com>

	* configure.in: bump version to 0.10

2000-04-01  Michael Meeks  <michael@helixcode.com>

	* bonobo/Makefile.am (libbonoboinclude_HEADERS): install bonobo-arg.h and not
	bonobo-property-types.h

2000-04-01  Michael Meeks  <michael@helixcode.com>

	* tests/test-properties-client.c: Small API updates.

	* tests/test-properties-server.c: Re-write; totaly different really.

	* bonobo/bonobo-property-bag.c: Total re-design. Use callbacks to track changes
	instead of the signal. Kill the signal ( perhaps we need a CORBA one ? ) Remove
	all the xml hooks, they were unused. Some API fat was removed & the following functions
	(bonobo_property_bag_new, bonobo_property_bag_add_full, bonobo_property_bag_add),
	(bonobo_property_bag_set_value, bonobo_property_bag_get_value),
	(bonobo_property_bag_get_type, bonobo_property_bag_get_default): were hacked.
	

	* bonobo/bonobo-property.c: Pruned down the the bare esentials.

	* bonobo/bonobo-arg.[ch]: Created.

	* bonobo/bonobo-property-bag-client.c (MAKE_BONOBO_PROPERTY_BAG_CLIENT_SET_VALUE),
	New macro to generate the umpteen accessor functions; kill all the old copy &
	paste code. (MAKE_BONOBO_PROPERTY_BAG_CLIENT_PAIR): ditto.
	(MAKE_BONOBO_PROPERTY_BAG_CLIENT_GET_FIELD): used by client_pair; code size
	optimization.

	* samples/controls/sample-control-container.c (populate_property_list): 
	prune handled types.

	* bonobo/bonobo-property-types.[ch]: Kill, replaced by some macros.

	* samples/controls/bonobo-calculator-control.c (set_prop, get_prop),
	(bonobo_calculator_factory): update to new property code.

	* samples/controls/bonobo-clock-control.c (set_prop, get_prop),
	(bonobo_clock_factory): update to new property code.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_setv):
	Expand to pass any's, contract to new typeset.
	(bonobo_property_bag_client_getv): ditto + fix leak with strings.

2000-03-30  Matt Loper  <matt@helixcode.com>

	* tools/bonobrowser/name-browser.c (ProcessBinding): Before
	listing an object in the nameserver, check to see if it's live
	with a call to CosNaming_NamingContext_resolve().

2000-03-30  Dan Winship  <danw@helixcode.com>

	* bonobo/bonobo-uih-dock.c (bonobo_ui_handler_dock_remove): Fix a
	really obvious bug. (Was calling BONOBO_IS_UI_HANDLER on a
	char *.)

2000-03-29  Darin Adler  <darin@eazel.com>

	* bonobo/bonobo-object.c (bonobo_object_unref):
	Made unref call destroy instead of using a copy of the code.

	* bonobo/bonobo-object.c (bonobo_object_destroy):
	Made destroy set the ref count to 0 to make things a *tiny*
	bit more robust. Also added a comment to make clear that
	use of bonobo_object_destroy is deprecated.

2000-03-27  Nat Friedman  <nat@helixcode.com>

	* bonobo/bonobo-canvas-item.c: Replaced all printfs with
 	g_messages.

2000-03-24  Martin Baulig  <martin@home-of-linux.org>

	Let the user specify a list of files as command line arguments.

	* gshell/gshell.c (open_files): New function to open all
	files the user gave as command line arguments.

	* gshell/inout.c (file_open): New function to open a file.
	(file_open_cb): Moved the real file opening functionality
	into file_open ().

2000-03-22  John Sullivan  <sullivan@eazel.com>

	Another toolbar bug fix.

	* bonobo/bonobo-uih-toolbar.c: (bonobo_ui_handler_set_toolbar):
	Store new toolbar widget in the hash table in this case also.

2000-03-17  John Sullivan  <sullivan@eazel.com>

	More toolbar bug fixes.

	* bonobo/bonobo-uih-toolbar.c:
	(toolbar_toplevel_item_remove_widgets): Don't free key
	found in hash table lookup if it returned FALSE.
	(toolbar_toplevel_item_create_widgets): item position 
	was only respected if > 0, but needs to be >= 0. Fixed
	three occurrences of this bug in this function.

2000-03-17  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-uih-toolbar.c:
	(toolbar_toplevel_item_create_widgets): Check for NULL
	toolbar_item before reffing and adding to hash table.
	The separator case does not create a widget. Added comments
	explaining this and why it is bad (can't remove later).
	(toolbar_toplevel_item_set_sensitivity_internal): Handle
	the NULL toolbar_widget case, since it's legitimate when
	the item is a separator. Added explanatory comment.
	(bonobo_toplevel_set_sensitivity): Changed name to
	bonobo_toplevel_item_set_sensitivity; made it call
	toolbar_toplevel_get_item instead of toolbar_toplevel_get_toolbar
	and bonobo_toplevel_item_set_sensitivity_internal instead of
	bonobo_toplevel_set_sensitivity_internal. Maybe both functions
	are needed for a complete implementation, but there was only
	one caller to this function and it expected the item version.
	Obviously this code path had never been followed.

	* bonobo/bonobo-ui-handler.h:
	(bonobo_ui_handler_toolbar_get_orientation),
	(bonobo_ui_handler_toolbar_set_orientation): Eliminated
	duplicate prototypes.

2000-03-10  Michael Meeks  <michael@helixcode.com>

	* samples/controls/bonobo-clock-control.gnorba:
	use IDL:Bonobo/Control

	* samples/controls/bonobo-calculator-control.gnorba: ditto.

2000-03-10  Michael Meeks  <michael@helixcode.com>

	* idl/bonobo-property.idl: conditional non use of CORBA::TypeCode
	since ORBit can't cope with it.

2000-03-09  Maciej Stachowiak  <mjs@eazel.com>

	* components/text-plain/bonobo-text-plain.c: Don't merge that
	ugly toolbar thing (some kind of test component should be
	the testbed for that); assorted cleanup.
	
2000-03-09  Michael Meeks  <michael@helixcode.com>

	* idl/Bonobo.idl: remove gnome-factory.idl.

2000-03-08  Jon K Hellan  <hellan@acm.org>

	Fixed problems when compiling Bonobo IDL with the omniORB IDL
	compiler: 

	* idl/bonobo-factory.idl: Changed supports to
	manufactures. 'supports' is a keyword in IDL.

	* bonobo/bonobo-generic-factory.c
	(impl_Bonobo_GenericFactory_manufactures): Renamed from
	.._supports. 
	(bonobo_generic_factory_get_epv): s/supports/manufactures

	The following are cases where a name at an inner scope differs
	only in case from a name at an outer scope. This breaks the rule
	that identifiers cannot differ only in case, because an identifier
	from a surrounding scope is introduced into a scope if it is used
	in that scope. The solution is to scope the outer identifiers
	explicitly:

	* idl/bonobo-ui-handler.idl (UIHandler::toolbar_create_item,
	UIHandler::dock_add): Changed Control to Bonobo::Control.

	* idl/bonobo-persist.idl (PersistStorage::load,
	PersistStorage::save, PersistStorage::init_new): Changed Storage
	to Bonobo::Storage.
	(PersistStream::load, PersistStream::save): Changed Stream to
	Bonobo::Stream.

	* idl/bonobo-control.idl (Control::set_state): Changed State to
	Control::State.

	* idl/bonobo-canvas.idl (Gdk::MotionEvent, Gdk::ButtonEvent,
	Gdk::KeyEvent, Gdk::CrossingEvent): Changed Time to Gdk::Time.
	(Gdk::Event): Changed FOCUS to Gdk::FOCUS, KEY to Gdk::KEY, MOTION
	to Gdk::MOTION, BUTTON to Gdk::BUTTON, CROSSING to Gdk::CROSSING .
	(Canvas::SVPSegment): Changed Points to Canvas::Points.
	(Canvas::Component::update, Canvas::Component::draw,
	Canvas::Component::bounds, Canvas::Component::event): Changed
	State to Canvas::State.
	
2000-03-07  John Sullivan  <sullivan@eazel.com>

	Fixed some widget ownership problems that were manifesting
	themselves as GTK-CRITICALs on quit in Nautilus.

	* bonobo/bonobo-uih-menu.c:
	(menu_toplevel_create_widgets): ref menu_widget and menu
	before storing them in hash tables to avoid double-deletion
	on quit.
	* bonobo/bonobo-uih-toolbar.c:
	(toolbar_toplevel_item_create_widgets): ref widgets before
	storing them in hash table to avoid double-deletion on quit.
	* bonobo/bonobo-view-frame.c: (bonobo_view_frame_construct):
	ref view_frame->priv->wrapper here, since it's destroyed by
	bonobo_view_frame_destroy.

2000-03-07  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/bonobo-wrapper.c (bonobo_wrapper_size_request): Correct
	the logic for when to add space for the border: only when the
	cover is off and the squiggle is visible.
	(bonobo_wrapper_size_allocate): Likewise.

2000-03-06  John Sullivan  <sullivan@eazel.com>

	Fixed two bugs in menu merging.

	* bonobo/bonobo-uih-menu.c:
	(menu_shell_has_tearoff_item): New helper function, checks whether
	a GtkMenuShell starts with a GtkTearoffMenuItem.
	(menu_toplevel_create_widgets): Increment position before inserting
	new widget if menu_shell_has_tearoff_item is true, since the position
	stored in the Bonobo item doesn't account for the tearoff item.

	(menu_toplevel_renumber_children): New function, resets the pos fields
	of all items in a menu to match the sequence in the parent's list of
	paths.
	(menu_toplevel_add_parent_entry): Call menu_toplevel_renumber_children
	after inserting a new item anywhere other than at the end. The items
	were having their pos field updated when an item was removed, but not
	when an item was inserted.

2000-03-05  Dan Winship  <danw@helixcode.com>

	* doc/Bonobo.sgml: beautify a bit more. In particular, make
	all of the <programlisting>s consistent.

2000-03-05  Matt Loper  <matt.loper@splashtech.com>

	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_create): If
	read_only param is FALSE, copy the incoming buffer into our newly
	allocated memory.

2000-03-04  Dan Winship  <danw@helixcode.com>

	* doc/Bonobo.sgml: many grammar, style, and clarification fixes,
	a few more GNOME->Bonobo fixes, and a handful of other changes.

2000-03-02  John Sullivan  <sullivan@eazel.com>

	* bonobo/bonobo-ui-handler.h:
	  Corrected spelling of previously-unused signal function
	  pointer from "menu_item_overriden" to "menu_item_overridden"
	* bonobo/bonobo-ui-handler.c:
	  (bonobo_ui_handler_class_init): Fixed problem where
	  "menu_item_reinstated" function pointer was wired to
	  MENU_ITEM_OVERRIDDEN signal, and MENU_ITEM_REINSTATED
	  signal wasn't wired to anything.

2000-03-02  Dan Winship  <danw@helixcode.com>

	* doc/Bonobo.sgml: update for the GNOME->Bonobo renaming

2000-02-28  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-uih-toolbar.c (toolbar_toplevel_item_store_data):
	Do not initialize the `active' member anymore.
	(toolbar_toplevel_item_set_toggle_state_internal): Likewise.
	(toolbar_toplevel_item_get_toggle_state_internal): Likewise.
	(toolbar_toplevel_create_item): Always initialize the item to be
	inactive.
	(toolbar_toplevel_item_get_toggle_state): Retrieve the widget and
	get the toggle state from it.

	* bonobo/bonobo-uih-private.h: Removed member `active' in
	`ToolbarItemInternal'.

2000-02-28  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_getv),
	(bonobo_property_bag_client_setv): Implement.

	* bonobo/bonobo-control.c (bonobo_control_set_property),
	(bonobo_control_get_property): implement thin wrappers on the above.

	* bonobo/bonobo-widget.c (bonobo_widget_set_property),
	(bonobo_widget_get_property): ditto.

	* samples/controls/bonobo-calculator-control.c (bonobo_calculator_factory):
	add Calculation result property. (bonobo_calc_control_prop_value_changed_cb): 
	dummy function to print the value out.

	* samples/controls/sample-control-container.c (incr_calc): add new
	property demo. (container_create): add incr button

	* bonobo/bonobo-object-directory-goad.c (od_get_server_list): fixup an
	error case I saw once.

2000-02-28  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-uih-toolbar.c
	(impl_Bonobo_UIHandler_toolbar_item_get_attributes): Set some fake
	values, just to prevent uninitialized memory access.

2000-02-28  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-uih-toolbar.c (toolbar_remote_set_state): implement.
	(toolbar_toplevel_item_set_toggle_state_internal): implement.
	(toolbar_toplevel_item_get_toggle_state_internal): implement.
	(toolbar_item_remote_get_state): 
	(toolbar_toplevel_item_get_state): 
	(bonobo_ui_handler_toolbar_item_toggle_get_state): implement.
	(bonobo_ui_handler_toolbar_item_toggle_set_state): implement.
	(toolbar_toplevel_item_get_toggle_state): implement.
	(toolbar_toplevel_item_get_sensitivity): rename.
	(impl_Bonobo_UIHandler_toolbar_item_get_attributes): actually use it.

2000-02-19  Mathieu Lacage <mathieu@advogato.org>

	* configure.in: make the libIDL/libuuid check be more friendly
	when not succeding.

2000-02-19  Matt Loper  <matt@helixcode.com>

	* tools/bonobrowser/object-browser.c (object_browser_new): Use an
	option menu to represent the sorting options, rather than radio
	buttons.

	* tools/bonobrowser/utils.c
	(gtk_button_new_with_label_and_pixmap): New function; takes a
	string and the name of a stock pixmap, and returns a button.

	* tools/bonobrowser/idl-browser.c (setup_idl_window): Put an icon
	into the button, with the above.

	* tools/bonobrowser/name-browser.c (nameservice_browser_new):
	Same.
	
2000-02-18  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/Bonobo.idl: Revert patch from Elliot that was not registered
	in the ChangeLog and broke compilation of Evolution.

	* bonobo/bonobo-canvas-item.c: Include stdio.h

2000-02-16  Nat Friedman  <nat@helixcode.com>

	* components/text-plain/bonobo-text-plain.c (embeddable_factory):
 	gtk_signal_connect changed to gtk_signal_connect_after for the
 	destroy signal on the embeddable.

	* samples/compound-doc/sample-container.c (component_add_view):
 	Pass the UIHandler objref to bonobo_client_site_new_view.
	(component_load_pf_ok_cb): Repo ID domain changed from GNOME to
 	Bonobo.
	(component_load_ps_ok_cb): Likewise.
	(container_create_component_frame): Likewise.
	(container_add_embeddable_cmd): Likewise.

	* samples/compound-doc/paint-component-simple.gnorba (repo_id):
 	The repo ID domain is now Bonobo instead of GNOME.
	* components/text-plain/text-plain.gnorba: Likewise.
	* components/application-x-gnomine/application-x-mines.gnorba: Likewise.
	* components/audio-ulaw/audio-ulaw.gnorba: Likewise.
	* components/image-x-png/image-x-png.gnorba: Likewise.
	* components/text-plain/text-plain.gnorba: Likewise.

	* samples/compound-doc/paint-component-simple.c (view_factory):
 	Don't manually create/set the UIHandler.

	* gshell/menu.c (update_buffer_menu): Commented out direct access
 	to uihandler menu hash table.  This code needs to be fixed to use
 	the bonobo_ui_handler_menu_fetch functions.

	* gshell/inout.c (buffer_save_pf): Repo ID in QI call changed from
 	module GNOME to module Bonobo.
	(buffer_load_pf): Likewise.
	(buffer_save_ps): Likewise.
	(buffer_load_ps): Likewise.
	(file_save_as_cb): Likewise.
	(file_open_cb): Likewise.
	(file_menu_save_cb): Likewise.
	(file_save_as_cb): Direct access to UIHandler data fixed.
	(file_open_cb): Likewise.
	(file_menu_save_cb): Likewise.
	(file_menu_save_as_cb): Likewise.

	* gshell/gshell.c (buffer_add_view): Pass the UIHandler objref to
 	bonobo_client_site_new_view_full.  Don't set the UIHandler
 	manually.
	(set_buffer_cb): Direct access to UIHandler structure replaced
 	with a call to bonobo_ui_handler_get_app.
	(view_menu_delete_window_cb): Likewise.
	(view_menu_new_window_cb): Likewise.
	(view_menu_split_window_cb): Likewise.
	(view_menu_one_window_cb): Likewise.
	(file_menu_kill_cb): Likewise.

	* components/text-plain/bonobo-text-plain.c (view_factory): Don't
 	create/set the UIHandler, as this happens automatically now.

	* bonobo/bonobo-view.c (bonobo_view_get_ui_handler): Return a
 	BonobUIHandler, not an object reference.

	* bonobo/bonobo-ui-handler.c (bonobo_ui_handler_get_app): New function.

	* bonobo/bonobo-selector.c: Name changed from GnomeBonoboSelector
 	to BonoboSelector everywhere.  Why the hell do I need to do this
 	again?  I could swear I did it last time.  In fact, this file
 	seems totally fucked now.
	(DEFAULT_INTERFACE): Changed to "IDL:Bonobo/Embeddable:1.0" from
 	"IDL:GNOME/Embeddable:1.0".

	* bonobo/bonobo-object.c
 	(bonobo_object_get_local_interface_from_objref): New function.
	(bonobo_object_query_local_interface): New function, largely
 	copied from the old QI corba method implementation.
	(impl_Bonobo_Unknown_query_interface): Use
 	bonobo_object_query_local_interface.

	* bonobo/bonobo-object-client.c (bonobo_object_client_get_type):
 	Updated the type name to be a bit more true.

	* bonobo/bonobo-file-moniker.c (gnome_file_moniker_bind):
 	IDL:GNOME -> IDL:Bonobo
	(gnome_file_moniker_get_type): Don't use the repo ID for the type
 	name.

	* bonobo/bonobo-client-site.c (bonobo_client_site_get_type):
 	Don't use the repo ID for the type name.
	* bonobo/bonobo-embeddable.c (bonobo_embeddable_get_type): Likewise.
	* bonobo/bonobo-embeddable-factory.c (bonobo_embeddable_factory_get_type): Likewise.
	* bonobo/bonobo-desktop-window.c (bonobo_desktop_window_get_type): Likewise.
	* bonobo/bonobo-control.c (bonobo_control_get_type): Likewise.
	* bonobo/bonobo-container.c (bonobo_container_get_type): Likewise.
	* bonobo/bonobo-persist-stream.c (bonobo_persist_stream_get_type): Likewise.
	* bonobo/bonobo-persist-file.c (bonobo_persist_file_get_type): Likewise.
	* bonobo/bonobo-persist.c (bonobo_persist_get_type): Likewise.
	* bonobo/bonobo-progressive.c (bonobo_progressive_data_sink_get_type): Likewise.
	* bonobo/bonobo-ui-handler.c (bonobo_ui_handler_get_type): Likewise.
	* bonobo/bonobo-stream.c (bonobo_stream_get_type): Likewise.
	* bonobo/bonobo-stream-memory.c (bonobo_stream_mem_get_type): Likewise.
	* bonobo/bonobo-stream-fs.c (bonobo_stream_fs_get_type): Likewise.
	* bonobo/bonobo-simple-source.c (gnome_simple_data_source_get_type): Likewise.

	* bonobo/bonobo-client-site.c
 	(bonobo_client_site_bind_embeddable): Query for the interface in
 	the Bonobo module, not the GNOME module.  This is leftover from
 	the name change; I just missed it before.
	* bonobo/bonobo-component-io.c (bonobo_embeddable_save_to_stream):
 	Likewise.
	(bonobo_embeddable_save): Likewise.
	* bonobo/bonobo-object-client.c (bonobo_object_restore_from_url): Likewise.
	(bonobo_object_activate): Likewise.
	* bonobo/bonobo-object-io.c (bonobo_object_save_to_stream): Likewise.
	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_depersist): Likewise.

	* bonobo/bonobo-canvas-item.c (gbi_update): Replaced that printf
 	with a g_message.

	* bonobo/bonobo-bind-context.c: Changed the name to
 	BonoboBindContext from GnomeBindContext.

	* bonobo/bonobo-generic-factory.c
 	(impl_Bonobo_GenericFactory_supports): Implemented.

2000-02-16  Jacob Berkman  <jacob@helixcode.com>

	* configure.in: fix uuid and libIDL tests to allow conditional
	bonobrowser compilation

	* tools/Makefile.am (SUBDIRS): contitionally build bonobrowser

2000-02-15  Nat Friedman  <nat@helixcode.com>

	* samples/compound-doc/sample-container.c (component_add_view):
 	Pass the UIHandler to the bonobo_client_site_new_view method.
	(component_add_view): Removed the set_ui_handler.

	* samples/controls/sample-control-container.c: Removed all the
 	table bullshit.

	* samples/controls/bonobo-calculator-control.c: Made it use
 	automerging for the menu.

	* idl/bonobo-ui-handler.idl (Bonobo::UIHandler): Added the dock
 	functions.

	* idl/bonobo-storage.idl (Bonobo::Stream): Added the NoPermission
 	exception and the NotSupported exception.  Made copy_to, truncate,
 	read and write raise NoPermission.

	* idl/bonobo-control.idl (Bonobo::Control): Added the State type
 	and the set_state method.

	* bonobo/bonobo-widget.c (bonobo_widget_launch_component): Made
 	the object_desc arg const.
	(bonobo_widget_construct_control_from_objref): Added the uih arg.
  	Turn on autoactivation.
	(bonobo_widget_construct_control): Added the uih arg.
	(bonobo_widget_new_control_from_objref): Likewise.
	(bonobo_widget_new_control): Likewise.
	(bonobo_widget_create_subdoc_object): Likewise.
	(bonobo_widget_new_subdoc): Likewise.

	* bonobo/bonobo-view.c (bonobo_view_set_ui_handler): Removed,
 	since we now create the BonoboUIHandler when the view is created.

	* bonobo/bonobo-view-frame.c (bonobo_view_frame_construct): Added
 	the uih argument.
	(bonobo_view_frame_new): Likewise.
	(bonobo_view_frame_set_ui_handler): Removed.
	
	* bonobo/bonobo-ui-handler.c (uih_toplevel_unregister_containee):
 	Remove all the containee's dock items as well.

	* bonobo/bonobo-uih-dock.c: New file.  Implements a Bonobo
 	GnomeDock proxy so that controls can embed/remove dock items.

	* bonobo/bonobo-uih-toolbar.c: New file.  Moved all
 	bonobo-ui-handler toolbar code here.

	* bonobo/bonobo-uih-menu.c: New file.  Moved all bonobo-ui-handler
 	menu code here.

	* bonobo/bonobo-uih-private.h: New file to contain all of the
 	shared private data structures and prototypes for all the separate
 	BonoboUIHandler files.

	* bonobo/bonobo-control.h: Reformatted.

	* bonobo/bonobo-control.c (BonoboControlPrivate): Removed
 	plug_destroy_id.  Added xid_received, automerge, active, menus,
 	toolbars, and uih.  xid_received is TRUE if this control has
 	already received an XID.  automerge is TRUE if we're supposed to
 	automatically merge/unmerge menu/toolbar items when we are
 	activated/deactivated.  active is TRUE if we are activated, FALSE
 	otherwise.  menus and toolbars are the menu/toolbar trees we
 	should merge when we are activated.  uih is a BonoboUIHandler
 	which we create when we are activated.
	(bonobo_control_plug_destroy_event_cb): Renamed from
 	bonobo_control_plug_destroy_cb.
	(bonobo_control_plug_destroy_cb): New function to catch "destroy".
	(bonobo_control_auto_merge): New function to automatically merge
 	menus when we get an activation notification from our container.
	(bonobo_control_auto_unmerge): New function.
	(impl_Bonobo_Control_activate): If automerge is on, call
 	bonobo_control_auto_merge or bonobo_control_auto_unmerge.
	(impl_Bonobo_Control_set_window): Moved the non-local case to the
 	beginning of the function, to make it easier to read for me.
  	Connect to the "destroy" signal on the plug.  If we're receiving
 	an XID and have already received one in the past, call
 	gtk_widget_reparent.
	(bonobo_control_gtk_state_from_corba): New function.
	(impl_Bonobo_Control_set_state): Likewise.
	(bonobo_control_set_automerge): Likewise.
	(bonobo_control_get_automerge): Likewise.
	(bonobo_control_set_menus_with_data): Likewise.
	(bonobo_control_set_menus): Likewise.
	(bonobo_control_get_menus): Likewise.
	(bonobo_control_set_toolbars_with_data): Likewise.
	(bonobo_control_set_toolbars): Likewise.
	(bonobo_control_get_toolbars): Likewise.
	(bonobo_control_destroy): Don't disconnect the plug signal.
	(bonobo_control_get_epv): Setup the set_state method.
	(bonobo_control_set_ui_handler): Removed, as the control now
 	automatically creates its BonoboUIHandler when it is created.

	* bonobo/bonobo-control-frame.h: Reformatted.

	* bonobo/bonobo-control-frame.c (BonoboControlFramePrivate): Added
 	the autoactivate and autostate fields.  Changed the uih field to
 	an object reference.
	(impl_Bonobo_ControlFrame_get_ui_handler): Just duplicate the uih
 	object reference.
	(bonobo_control_frame_autoactivate_focus_in): New function to
 	automatically activate a control when it gets focus iff
 	autoactivation is turned on.
	(bonobo_control_frame_autoactivate_focus_out): New function to
 	automatically deactivate a control when it loses focus iff
 	autoactivation is turned off.
	(bonobo_control_frame_socket_state_changed): New signal handler.
  	When the widget state of the GtkSocket changes, it proxies the
 	state change to the control via CORBA.  It does this only if
 	autostate proxying is turned on.
	(bonobo_control_frame_set_remote_window): Call gdk_flush before
 	passing the window ID to the control.
	(bonobo_control_frame_construct): Added the uih argument.  Connect
 	to focus_in_event, focus_out_event and state_changed on the
 	socket.
	(bonobo_control_frame_new): Added the uih argument.
	(bonobo_control_frame_init): Set autostate to TRUE by default.
	(bonobo_control_frame_set_autoactivate): New function.
	(bonobo_control_frame_get_autoactivate): Likewise.
	(bonobo_control_frame_state_to_corba): Likewise.
	(bonobo_control_frame_control_set_state): Likewise.
	(bonobo_control_frame_set_autostate): Likewise.
	(bonobo_control_frame_get_autostate): Likewise.
	(bonobo_control_frame_set_ui_handler): Removed.

	* bonobo/bonobo-client-site.h: Reformatted.

	* bonobo/bonobo-client-site.c (bonobo_client_site_new_view_full):
 	Added the uih argument.
	(bonobo_client_site_new_view): Likewise.

	* bonobo/Makefile.am (libbonobo_la_SOURCES): Added
 	bonobo-uih-menu.c, bonobo-uih-toolbar.c, bonobo-uih-dock.c

2000-02-15  Matt Loper  <matt@helixcode.com>

	* tools/: New directory; will hold bonobo-related tools.

	* tools/bonobrowser/: New directory, with a corba object browser
	in it.

	* configure.in: Added tools/Makefile and
	tools/bonobrowser/Makefile.

	* Makefile.am: Added tools.	

2000-02-14  Elliot Lee  <sopwith@redhat.com>
	* bonobo/bonobo-wrapper.c (bonobo_wrapper_unrealize): Don't
	destroy widget->window - gtk+ already does this for us.

2000-02-12  Matt Loper  <matt@helixcode.com>

	* bonobo/bonobo-generic-factory.c
	(bonobo_generic_factory_construct): Since od_server_register() can
	return two types of success (OD_REG_SUCCESS or
	OD_REG_ALREADY_ACTIVE), we now return NULL only if OD_REG_ERROR is
	returned.
	
2000-02-10  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo-ui-handler.c: Replace strdup() with g_strdup(), thanks to
	Darin for pointing this out.

2000-02-10  Elliot Lee  <sopwith@redhat.com>

	* bonobo/bonobo-ui-handler.c: Fix allocation of one-two-few bytes.

2000-02-10  Elliot Lee <sopwith@redhat.com>

	* bonobo/bonobo-ui-handler.c: Handle a NULL 'hint' and 'label' for
	menu items.

2000-02-09  Michael Meeks  <michael@helixcode.com>

	* bonobo/bonobo-main.h (bonobo_poa_manager): ansi clean.

	* bonobo/bonobo-object-io.h: ditto on enum.

2000-02-07  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/bonobo-property-bag.c, bonobo/bonobo-property-bag.h,
	bonobo/bonobo-property-types.c, bonobo/bonobo-property-types.h,
	bonobo/bonobo-property.c, bonobo/bonobo-ui-handler.c,
	bonobo/bonobo-ui-handler.h, bonobo/bonobo-view.c,
	components/text-plain/bonobo-text-plain.c, libefs/src/efstool.c,
	libefs/src/simple.c, samples/controls/bonobo-calculator-control.h,
	samples/controls/sample-control-factory.c: Fix a bunch of
	warnings. These fall into the following categories: failing to
	declare a function `static'; inappropriate implicit casts that
	remove `const'; use of `const gpointer' instead of `gconstpointer'
	(not all of these led to warnings but I fixed all I found);
	failure to include needed headers; passing functions with a return
	value where void functions are expected; and unused functions
	(which I #if 0'd out).
	
2000-02-07  Elliot Lee <sopwith@redhat.com>

	* idl/Bonobo.idl: #include <gnome-factory.idl> to avoid
	duplication of symbols in the libraries.

2000-02-04  Chris Blizzard  <blizzard@redhat.com>

	* bonobo/bonobo-selector.c (get_filtered_objects): Make sure to
 	return the list of valid servers instead of always returning NULL.
  	This should get the selector working again.
	
2000-02-03  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/bonobo/bonobo-control-frame.c, bonobo-control.c: Instead
	of using a GtkFrame to hold the socket and removing the socket in
	the local workaround case, use a GtkBox, and merely hide the
	socket in the local case. This is really gross but it's the only
	way to avoid destroying or removing the socket in the middle of
	realization.

2000-02-02  Michael Meeks  <mmeeks@gnu.org>
	
	* components/text-plain/bonobo-text-plain.c (view_factory): fix
	view_activate.

2000-01-30  Martijn van Beers  <martijn@earthling.net>

	Re-commit my 2000-01-25 patch:
	* bonobo/idl/bonobo-ui-handler.idl: replace MenuItemNotFound and
	ToolbarItemNotFound exceptions by a more generic PathNotFound
	exception. Also added a NotToplevelHandler exception, and made
	all the applicable (almost all of them) use these exceptions.

	* bonobo/bonobo/bonobo-ui-handler.c: Make all the CORBA method
	implementations emit the exceptions they can throw when needed

2000-01-30  Ettore Perazzoli  <ettore@helixcode.com>

	* bonobo/bonobo-control.c (bonobo_control_class_init): Use
	`gtk_marshal_NONE__NONE', not `gtk_marshal_NONE__BOOL', for
	signal "set_frame".

2000-01-30  Nat Friedman  <nat@helixcode.com>

	* bonobo/bonobo-control.c: Added SET_FRAME to the signal
 	enum.
	(bonobo_control_class_init): Setup the set_frame signal.
	(bonobo_control_set_control_frame): Emit the set_frame signal.

	* bonobo/bonobo-control.h: Reformatted the prototypes.
	(BonoboControlClass): Added the set_frame signal.

	* bonobo/bonobo-control.c (bonobo_control_get_remote_ui_handler):
 	Added a precondition to test if we have an objref to the control
 	frame.

2000-01-26  Miguel de Icaza  <miguel@gnu.org>

	* samples/controls/bonobo-clock-control.c (bonobo_clock_factory):
	release memory when the control dies;  Use CORBA_boolean instead
	of gboolean

	* bonobo/bonobo-property-bag.c
	(bonobo_property_bag_foreach_remove_prop): Only release if a
	relaser has been defined for the type.
	(bonobo_property_bag_set_value): ditto.
	(bonobo_property_bag_init): Set the releaser as NULL for our
	built-in data types.

2000-01-28  Michael Meeks  <michael@mejm2.dow.cam.ac.uk>

	* gshell/gshell.c: include libgnorba; kill warnings.

	* samples/compound-doc/sample-container.c: ditto.

	* samples/controls/bonobo-clock-control.c (bonobo_clock_factory): use CORBA_boolean
	instead of gboolean.

	* bonobo/bonobo-property-bag-client.c (bonobo_property_bag_client_set_value_string):
	constify string.

2000-01-28 aElliot Lee <sopwith@redhat.com>

	* bonobo/bonobo.h: Add multiple include guard.

2000-01-26  Martijn van Beers  <martijn@earthling.net>

	* bonobo/bonobo-control-frame.c: s/control/container/ in the
	_BonoboControlFramePrivate struct so it actually compiles

2000-01-26  Maciej Stachowiak  <mjs@eazel.com>

	* bonobo/bonobo-control.c, bonobo/bonobo-control-frame.c: Detect
	when the control is in the same process as the frame; in that
	case, reduce to a simple containement relationship instead of
	using GtkPlug/GtkSocket, to avoid bugs in GtkPlug/GtkSocket in the
	same-application case.

2000-01-26  Havoc Pennington  <hp@pobox.com>

	* samples/compound-doc/paint-component-simple.c: include gnorba header

	* bonobo/bonobo-generic-factory.c (impl_Bonobo_GenericFactory_create_object): GNOME_stringlist/Bonobo_stringlist

2000-01-25  Havoc Pennington  <hp@pobox.com>

	* bonobo/bonobo-object-directory.h: The object directory
	abstraction
	
	* gshell/Makefile.am (bin_PROGRAMS): no gshell with OAF

	* samples/compound-doc/Makefile.am (bin_PROGRAMS): no documents
	with OAF

	* samples/controls/Makefile.am (bin_PROGRAMS): don't build the 
	controls with OAF

	* components/Makefile.am (SUBDIRS): don't build components with OAF

	* bonobo/test-bw.c: include gnorba.h explicitly, since it isn't
	in gnome-bonobo.h

	* bonobo/bonobo-main.c (bonobo_init): Get ORB from OD abstraction

	* bonobo/bonobo-generic-factory.c (bonobo_generic_factory_finalize):
	Use new OD abstraction
	(bonobo_generic_factory_construct): new OD abstraction

	* bonobo/gnome-bonobo-widget.c
	(bonobo_widget_launch_component): change a cast to remove
	GOAD dependency

	* bonobo/bonobo-selector.c (add_gnorba_objects): modify this
	to use the new object directory abstraction
	(bonobo_selector_get_selected_goad_id): assert using GOAD
	(bonobo_selector_get_selected_oaf_id): new, parallel to the
	GOAD one
	(gnome_bonobo_select_oaf_id): parallel to the OAF version

	* bonobo/bonobo-object-client.c (bonobo_object_activate): Take "gint
	flags" instead of "GoadActivationFlags flags" so that we don't
	need to expose the GOAD headers
	(bonobo_object_activate_with_goad_id): ditto, and assert that we
	are using goad
	(bonobo_object_activate_with_repo_id): Nuke
	(bonobo_object_activate_with_goad_id): Fix bug unrelated to this
	whole OAF/GOAD thing, activation flags were not being passed
	through
	(bonobo_object_activate_with_oaf_id): new function for use with OAF
	(bonobo_object_activate_with_goad_id): change first arg from
	GoadServerList to gpointer; this arg was ignored anyway, and 
	of course the whole function is deprecated eventually.

	* bonobo/bonobo-embeddable-factory.c: replace gnorba.h with 
	bonobo-object-directory.h
	
	* bonobo/bonobo-object.c: ditto

	* bonobo/bonobo-moniker-client.c: ditto

	* bonobo/bonobo-main.c: ditto

	* bonobo/bonobo-generic-factory.c: ditto
	
	* bonobo/bonobo-selector.h: don't include gnorba.h

	* bonobo/bonobo-object-client.h: don't include gnorba.h

	* bonobo/Makefile.am: handle AM_CONDITIONAL to use OAF or GOAD

	* configure.in: Add the --enable-oaf option

2000-01-26  Martijn van Beers  <martijn@earthling.net>

	* bonobo/bonobo/.cvsignore: s/bonobo/Bonobo/;
	* bonobo/components/*/Makefile.am: added -I$(top_srcdir)/bonobo to
	$INCLUDES, so it will compile without the lib headers installed
	* bonobo/gshell/Makefile.am: ditto
	* bonobo/samples/*/Makefile.am: ditto
	* bonobo/tests/Makefile.am: ditto

2000-01-26  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/bonobo-storage.c: include bonobo-object.h

	* bonobo/bonobo-widget.c: Fix include file.

	* bonobo/Makefile.am (libbonobo_la_LDFLAGS): Define version-info

	* configure.in: Bump up number.

2000-01-25  Nat Friedman  <nat@helixcode.com>

	* All files: Renames

	* bonobo/nat-rename.txt: New file.
	* bonobo/nat-rename.sh: New file.
	* bonobo/nat-namechange.pl: New file.
	* bonobo/idl/bonobo-unknown.idl: New file.
	* bonobo/idl/bonobo-factory.idl: New file.
	* bonobo/idl/bonobo.idl moved to                           bonobo/idl/Bonobo.idl
	* bonobo/idl/gnome-advise.idl moved to                     bonobo/idl/bonobo-advise.idl
	* bonobo/idl/gnome-canvas.idl moved to                     bonobo/idl/bonobo-canvas.idl
	* bonobo/idl/gnome-client-site.idl moved to                bonobo/idl/bonobo-client-site.idl
	* bonobo/idl/gnome-container.idl moved to                  bonobo/idl/bonobo-container.idl
	* bonobo/idl/gnome-control.idl moved to                    bonobo/idl/bonobo-control.idl
	* bonobo/idl/gnome-desktop.idl moved to                    bonobo/idl/bonobo-desktop.idl
	* bonobo/idl/gnome-embeddable.idl moved to                 bonobo/idl/bonobo-embeddable.idl
	* bonobo/idl/gnome-moniker.idl moved to                    bonobo/idl/bonobo-moniker.idl
	* bonobo/idl/gnome-persist.idl moved to                    bonobo/idl/bonobo-persist.idl
	* bonobo/idl/gnome-progressive.idl moved to                bonobo/idl/bonobo-progressive.idl
	* bonobo/idl/gnome-property.idl moved to                   bonobo/idl/bonobo-property.idl
	* bonobo/idl/gnome-storage.idl moved to                    bonobo/idl/bonobo-storage.idl
	* bonobo/idl/gnome-ui-handler.idl moved to                 bonobo/idl/bonobo-ui-handler.idl
	* bonobo/bonobo/gnome-bind-context.c moved to              bonobo/bonobo/bonobo-bind-context.c
	* bonobo/bonobo/gnome-bonobo-item.c moved to               bonobo/bonobo/bonobo-canvas-item.c
	* bonobo/bonobo/gnome-bonobo-selector.c moved to           bonobo/bonobo/bonobo-selector.c
	* bonobo/bonobo/gnome-bonobo-widget.c moved to             bonobo/bonobo/bonobo-widget.c
	* bonobo/bonobo/gnome-canvas-component.c moved to          bonobo/bonobo/bonobo-canvas-component.c
	* bonobo/bonobo/gnome-client-site.c moved to               bonobo/bonobo/bonobo-client-site.c
	* bonobo/bonobo/gnome-component-directory.c moved to       bonobo/bonobo/bonobo-component-directory.c
	* bonobo/bonobo/gnome-component-io.c moved to              bonobo/bonobo/bonobo-component-io.c
	* bonobo/bonobo/gnome-container.c moved to                 bonobo/bonobo/bonobo-container.c
	* bonobo/bonobo/gnome-control-frame.c moved to	           bonobo/bonobo/bonobo-control-frame.c
	* bonobo/bonobo/gnome-control.c moved to                   bonobo/bonobo/bonobo-control.c
	* bonobo/bonobo/gnome-desktop-window.c moved to            bonobo/bonobo/bonobo-desktop-window.c
	* bonobo/bonobo/gnome-embeddable-factory.c moved to        bonobo/bonobo/bonobo-embeddable-factory.c
	* bonobo/bonobo/gnome-embeddable.c moved to                bonobo/bonobo/bonobo-embeddable.c
	* bonobo/bonobo/gnome-file-moniker.c moved to              bonobo/bonobo/bonobo-file-moniker.c
	* bonobo/bonobo/gnome-generic-factory.c moved to           bonobo/bonobo/bonobo-generic-factory.c
	* bonobo/bonobo/gnome-main.c moved to                      bonobo/bonobo/bonobo-main.c
	* bonobo/bonobo/gnome-moniker-client.c moved to            bonobo/bonobo/bonobo-moniker-client.c
	* bonobo/bonobo/gnome-moniker.c moved to                   bonobo/bonobo/bonobo-moniker.c
	* bonobo/bonobo/gnome-object-client.c moved to             bonobo/bonobo/bonobo-object-client.c
	* bonobo/bonobo/gnome-object-io.c moved to                 bonobo/bonobo/bonobo-object-io.c
	* bonobo/bonobo/gnome-object.c moved to                    bonobo/bonobo/bonobo-object.c
	* bonobo/bonobo/gnome-persist-file.c moved to              bonobo/bonobo/bonobo-persist-file.c
	* bonobo/bonobo/gnome-persist-stream.c moved to            bonobo/bonobo/bonobo-persist-stream.c
	* bonobo/bonobo/gnome-persist.c moved to                   bonobo/bonobo/bonobo-persist.c
	* bonobo/bonobo/gnome-progressive.c moved to               bonobo/bonobo/bonobo-progressive.c
	* bonobo/bonobo/gnome-property-bag-client.c moved to       bonobo/bonobo/bonobo-property-bag-client.c
	* bonobo/bonobo/gnome-property-bag-xml.c moved to          bonobo/bonobo/bonobo-property-bag-xml.c
	* bonobo/bonobo/gnome-property-bag.c moved to              bonobo/bonobo/bonobo-property-bag.c
	* bonobo/bonobo/gnome-property-types.c moved to            bonobo/bonobo/bonobo-property-types.c
	* bonobo/bonobo/gnome-property.c moved to                  bonobo/bonobo/bonobo-property.c
	* bonobo/bonobo/gnome-simple-source.c moved to             bonobo/bonobo/bonobo-simple-source.c
	* bonobo/bonobo/gnome-storage.c moved to                   bonobo/bonobo/bonobo-storage.c
	* bonobo/bonobo/gnome-stream-client.c moved to             bonobo/bonobo/bonobo-stream-client.c
	* bonobo/bonobo/gnome-stream-fs.c moved to                 bonobo/bonobo/bonobo-stream-fs.c
	* bonobo/bonobo/gnome-stream-memory.c moved to             bonobo/bonobo/bonobo-stream-memory.c
	* bonobo/bonobo/gnome-stream.c moved to                    bonobo/bonobo/bonobo-stream.c
	* bonobo/bonobo/gnome-ui-handler.c moved to                bonobo/bonobo/bonobo-ui-handler.c
	* bonobo/bonobo/gnome-view-frame.c moved to                bonobo/bonobo/bonobo-view-frame.c
	* bonobo/bonobo/gnome-view.c moved to                      bonobo/bonobo/bonobo-view.c
	* bonobo/bonobo/gnome-wrapper.c moved to                   bonobo/bonobo/bonobo-wrapper.c
	* bonobo/bonobo/gnome-composite-moniker.c moved to         bonobo/bonobo/bonobo-composite-moniker.c
	* bonobo/bonobo/gnome-item-moniker.c moved to              bonobo/bonobo/bonobo-item-moniker.c
	* bonobo/bonobo/gnome-storage-driver.c moved to            bonobo/bonobo/bonobo-storage-driver.c
	* bonobo/bonobo/gnome-storage-private.c moved to           bonobo/bonobo/bonobo-storage-private.c
	* bonobo/bonobo/gnome-bind-context.h moved to              bonobo/bonobo/bonobo-bind-context.h
	* bonobo/bonobo/gnome-bonobo-item.h moved to               bonobo/bonobo/bonobo-canvas-item.h
	* bonobo/bonobo/gnome-bonobo-selector.h moved to           bonobo/bonobo/bonobo-selector.h
	* bonobo/bonobo/gnome-bonobo-widget.h moved to             bonobo/bonobo/bonobo-widget.h
	* bonobo/bonobo/gnome-canvas-component.h moved to          bonobo/bonobo/bonobo-canvas-component.h
	* bonobo/bonobo/gnome-client-site.h moved to               bonobo/bonobo/bonobo-client-site.h
	* bonobo/bonobo/gnome-component-directory.h moved to       bonobo/bonobo/bonobo-component-directory.h
	* bonobo/bonobo/gnome-component-io.h moved to              bonobo/bonobo/bonobo-component-io.h
	* bonobo/bonobo/gnome-container.h moved to                 bonobo/bonobo/bonobo-container.h
	* bonobo/bonobo/gnome-control-frame.h moved to             bonobo/bonobo/bonobo-control-frame.h
	* bonobo/bonobo/gnome-control.h moved to                   bonobo/bonobo/bonobo-control.h
	* bonobo/bonobo/gnome-desktop-window.h moved to            bonobo/bonobo/bonobo-desktop-window.h
	* bonobo/bonobo/gnome-embeddable-factory.h moved to        bonobo/bonobo/bonobo-embeddable-factory.h
	* bonobo/bonobo/gnome-embeddable.h moved to                bonobo/bonobo/bonobo-embeddable.h
	* bonobo/bonobo/gnome-file-moniker.h moved to              bonobo/bonobo/bonobo-file-moniker.h
	* bonobo/bonobo/gnome-generic-factory.h moved to           bonobo/bonobo/bonobo-generic-factory.h
	* bonobo/bonobo/gnome-main.h moved to                      bonobo/bonobo/bonobo-main.h
	* bonobo/bonobo/gnome-moniker-client.h moved to            bonobo/bonobo/bonobo-moniker-client.h
	* bonobo/bonobo/gnome-moniker.h moved to                   bonobo/bonobo/bonobo-moniker.h
	* bonobo/bonobo/gnome-object-client.h moved to             bonobo/bonobo/bonobo-object-client.h
	* bonobo/bonobo/gnome-object-io.h moved to                 bonobo/bonobo/bonobo-object-io.h
	* bonobo/bonobo/gnome-object.h moved to                    bonobo/bonobo/bonobo-object.h
	* bonobo/bonobo/gnome-persist-file.h moved to              bonobo/bonobo/bonobo-persist-file.h
	* bonobo/bonobo/gnome-persist-stream.h moved to            bonobo/bonobo/bonobo-persist-stream.h
	* bonobo/bonobo/gnome-persist.h moved to                   bonobo/bonobo/bonobo-persist.h
	* bonobo/bonobo/gnome-progressive.h moved to               bonobo/bonobo/bonobo-progressive.h
	* bonobo/bonobo/gnome-property-bag-client.h moved to       bonobo/bonobo/bonobo-property-bag-client.h
	* bonobo/bonobo/gnome-property-bag-xml.h moved to          bonobo/bonobo/bonobo-property-bag-xml.h
	* bonobo/bonobo/gnome-property-bag.h moved to              bonobo/bonobo/bonobo-property-bag.h
	* bonobo/bonobo/gnome-property-types.h moved to            bonobo/bonobo/bonobo-property-types.h
	* bonobo/bonobo/gnome-property.h moved to                  bonobo/bonobo/bonobo-property.h
	* bonobo/bonobo/gnome-simple-source.h moved to             bonobo/bonobo/bonobo-simple-source.h
	* bonobo/bonobo/gnome-storage.h moved to                   bonobo/bonobo/bonobo-storage.h
	* bonobo/bonobo/gnome-stream-client.h moved to             bonobo/bonobo/bonobo-stream-client.h
	* bonobo/bonobo/gnome-stream-fs.h moved to                 bonobo/bonobo/bonobo-stream-fs.h
	* bonobo/bonobo/gnome-stream-memory.h moved to             bonobo/bonobo/bonobo-stream-memory.h
	* bonobo/bonobo/gnome-stream.h moved to                    bonobo/bonobo/bonobo-stream.h
	* bonobo/bonobo/gnome-ui-handler.h moved to                bonobo/bonobo/bonobo-ui-handler.h
	* bonobo/bonobo/gnome-view-frame.h moved to                bonobo/bonobo/bonobo-view-frame.h
	* bonobo/bonobo/gnome-view.h moved to                      bonobo/bonobo/bonobo-view.h
	* bonobo/bonobo/gnome-wrapper.h moved to                   bonobo/bonobo/bonobo-wrapper.h
	* bonobo/bonobo/gnome-composite-moniker.h moved to         bonobo/bonobo/bonobo-composite-moniker.h
	* bonobo/bonobo/gnome-item-moniker.h moved to              bonobo/bonobo/bonobo-item-moniker.h
	* bonobo/bonobo/gnome-storage-driver.h moved to            bonobo/bonobo/bonobo-storage-driver.h
	* bonobo/bonobo/gnome-storage-private.h moved to           bonobo/bonobo/bonobo-storage-private.h
	* bonobo/bonobo/gnome-bonobo.h moved to                    bonobo/bonobo/bonobo.h

2000-01-25  Martijn van Beers  <martijn@earthling.net>

	* bonobo/idl/gnome-ui-handler.idl: replace MenuItemNotFound and
	ToolbarItemNotFound exceptions by a more generic PathNotFound
	exception. Also added a NotToplevelHandler exception, and made
	all the applicable (almost all of them) use these exceptions.

	* bonobo/bonobo/gnome-ui-handler.c: Make all the CORBA method
	implementations emit the exceptions they can throw when needed

2000-01-25  Nat Friedman  <nat@helixcode.com>


	* bonobo/bonobo/gnome-view.c (gnome_view_destroy): Don't destroy
 	the UIHandler here.
	
	* bonobo/bonobo/gnome-control.c (gnome_control_destroy): Destroy
 	the UIH here if we have one.
	
	* bonobo/components/text-plain/bonobo-text-plain.c
 	(view_activate_cb): Use gnome_view_activate_notify instead of
 	using the CORBA method directly.

	* bonobo/gnome-view.h (GnomeView): Removed the uih field.

	* bonobo/gnome-control.c (GnomeControlPrivate): Added a uih field.
	(gnome_control_set_ui_handler): New function.
	(gnome_control_get_ui_handler): New function.
	(gnome_control_set_property_bag): Documented.

	* bonobo/gnome-view.c (gnome_view_set_ui_handler): Defer to the
 	GnomeControl method.
	(gnome_view_get_ui_handler): Likewise

2000-01-24  Nat Friedman  <nat@helixcode.com>

	* samples/compound-doc/sample-container.c (component_add_view):
 	Changed "view_activated" to "activated"
 
	* samples/compound-doc/paint-component-simple.c (view_factory):
 	Connect to the "activate" signal, not the "view_activate" signal.

	* idl/gnome-embeddable.idl (GNOME:View): Removed view_activate and
 	reactivate_and_undo.
	(GNOME:ViewFrame): Removed view_activated and deactivate_and_undo.

	* idl/gnome-control.idl (GNOME:ControlFrame): Added activated and
 	deactivate_and_undo.

	(GNOME:Control) Added activate and reactivate_and_undo.  Fixed
 	some comments.

	* bonobo/gnome-view.h: Removed the view_activate and
 	view_undo_last_operation signals.

	* bonobo/gnome-view.c (impl_GNOME_View_view_activate): Removed.
	(impl_GNOME_View_reactivate_and_undo): Removed.
	(gnome_view_get_epv): Don't set view_activate or
 	reactivate_and_undo.
	(gnome_view_class_init): Don't setup the view_activate or
 	reactivate_and_undo signals.
	(gnome_view_get_type): Call the type "GNOMEView", not
 	"IDL:/GNOME:View:1.0" or whatever.
	(gnome_view_activate_notify): Defer to the GnomeControl function.

	* bonobo/gnome-view-frame.h: Removed view_activated and
 	undo_last_operation signals.  Added prototypes for
 	gnome_view_frame_set_ui_handler and
 	gnome_view_frame_get_ui_handler.

	* bonobo/gnome-view-frame.c: Updated copyright.  Removed
 	VIEW_ACTIVATED and UNDO_LAST_OPERATION from the signal enum.
	(impl_GNOME_ViewFrame_view_activated): Removed.
	(impl_GNOME_ViewFrame_view_deactivate_and_undo): Removed.
	(gnome_view_frame_get_epv): Don't set activate or
 	deactivate_and_undo.
	(gnome_view_frame_activated): Removed.
	(gnome_view_frame_class_init): Don't init "view_activated" or
 	"undo_last_operation".
	(gnome_view_frame_view_activate): Changed to defer to the
 	ControlFrame function.
	(gnome_view_frame_view_deactivate): Changed to defer to the
 	ControlFrame function.

	* bonobo/gnome-control.h: Added prototype for
 	gnome_control_activate_notify.

	* bonobo/gnome-control.c: Updated copyright.  Created a signals
 	enum; put ACTIVATE and UNDO_LAST_OPERATION in it.  Added the
 	control_signals static array.
	(impl_GNOME_Control_activate): New function, moved here from
 	gnome-view.c
	(impl_GNOME_Control_reactivate_and_undo): Likewise.
	(gnome_control_get_epv): Set reactivate_and_undo and activate.
	(gnome_control_activate_notify): New function, moved here from
 	GnomeView.
	(gnome_control_class_init): Setup the activate and
 	undo_last_operation signals here.

	* bonobo/gnome-control-frame.h: Added the activated and
 	undo_last_operation signals, moved here from GnomeViewFrame.
  	Added prototypes for gnome_control_frame_control_activate and
 	gnome_control_frame_control_deactivate.

	* bonobo/gnome-control-frame.c: Updated Copyright.  Added
 	ACTIVATED and UNDO_LAST_OPERATION to the signal enum.

	(gnome_control_frame_control_activate): New function.  Moved here
 	from gnome-view-frame.c.
	(gnome_control_frame_control_deactivate): Likewise.
	(gnome_control_frame_class_init): Setup the "activated" and
 	"undo_last_operation" signals.
 	(impl_GNOME_ControlFrame_activated): New function which implements
 	the new GNOME::ControlFrame::activated() method.
 	(impl_GNOME_ControlFrame_deactivate_and_undo): New function which
 	implements GNOME::ControlFrame:deactivate_and_undo().
	(gnome_control_frame_get_epv): Added activated and
 	deactivate_and_undo to the epv-setter.

2000-01-12  Dave Camp  <campd@oit.edu>

	* bonobo/gnome-property-bag.c (gnome_property_bag_create_poa): Create
	a unique POA for each PropertyBag object rather than trying to share
	a single POA between all objects.

2000-01-07  Federico Mena Quintero  <federico@helixcode.com>

	* bonobo/gnome-control.c (gnome_control_destroy): Call the destroy
	method of the parent class.

	* bonobo/gnome-object.c (gnome_object_ref): Made the refcount
	assertion more stringent.
	(impl_GNOME_Unknown_ref): Call gnome_object_ref() instead of
	increasing the refcount directly.
	(impl_GNOME_Unknown_query_interface): Likewise.

	As a side comment, gnome_object_destroy() should not exist.  It
	does not make sense to unconditionally destroy an aggregate object
	while people still have references to it --- the next time someone
	calls gnome_object_unref(), the object will already have been
	freed.

2000-01-05  Sergey Panov <sipan@mit.edu>
	*  bonobo/gnome-ui-handler.c (menu_toplevel_create_label):
	Remove translation -- the container should not translate
	(menu_uiinfo_type_to_uih,toolbar_uiinfo_type_to_uih):
	Translate hint and label using L_(), defined in libgnomeui
	* components/application-x-gnomine/bonobo-application-x-mines.c
	Changes needed to check if new transl scheem works.
	(view_create_menus) N_ changed to _ and L_
	(init_server_factory) Call bindtextdomain and textdomain for
	translations to work in gnomine.  
	
2000-01-05  Yuri Syrota <rasta@renome.rovno.ua>

	* configure.in: Add "uk" into ALL_LINGUAS

1999-12-29  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c (impl_toolbar_item_set_data): implement.
	(impl_toolbar_item_get_data): stub.
	(toolbar_item_toplevel_set_pixmap_internal): implement.
	(toolbar_item_toplevel_set_pixmap): implement.
	(gnome_ui_handler_toolbar_item_set_pixmap): implement.
	(impl_toolbar_item_set_attributes): use toolbar_item_set_sens.
	(toolbar_item_toplevel_set_sensitivity_internal): create.
	(toolbar_toplevel_get_widget): inline.
	(impl_toolbar_set_attributes): implement.
	(impl_toolbar_get_attributes): stub.
	(toolbar_toplevel_set_sensitivity): fix.
	Some sed's to fix some of my naming idiocies.

	* bonobo/gnome-ui-handler.h: Update misc. prototypes.

1999-12-27  Nat Friedman  <nat@helixcode.com>

	* bonobo/gnome-object.h: Removed old externs for gnome_object_epv
 	and gnome_object_base_epv.

	* bonobo/gnome-embeddable.h: Removed extern for
 	gnome_embeddable_epv.

1999-12-20  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c (toolbar_orientation_to_corba): implement.
	(toolbar_corba_to_orientation): implement.
	(toolbar_style_to_corba, toolbar_corba_to_style): implement.
	(relief_style_to_corba, relief_corba_to_style): implement.
	(toolbar_remote_attribute_data_get, toolbar_remote_attribute_data_set):
	add sensitive. (toolbar_toplevel_create_item): rename stuff to _item_

	* samples/compound-doc/sample-container.c (component_view_frame_system_exception_cb): 
	kill warning.

1999-12-19  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c (toolbar_remote_attribute_data_get),
	(toolbar_remote_attribute_data_free, toolbar_remote_attribute_data_set): 
	implement. Further massive cleans.
	(impl_toolbar_item_set_attributes),
	(impl_toolbar_item_get_attributes): implement. 
	(impl_toolbar_set_sensitivity): kill.
	(impl_toolbar_get_sensitivity): kill.

	* bonobo/gnome-ui-handler.h: itemize the API.

	* idl/gnome-ui-handler.idl: kill old toolbar_item_ bits.
	kill group_ stuff.

1999-12-20  Martijn van Beers  <martijn@earthling.net>
	
	* samples/controls/sample-control-container.c: Changed
	to work with the new gnome_property_bag_client_(get|set)_value_*
	functions.

1999-12-20  Nat Friedman  <nat@helixcode.com>

	* idl/gnome-ui-handler.idl (GNOME::UIHandler): Added forward
 	declaration of interface Control.

	* idl/gnome-embeddable.idl (GNOME::ViewFrame): Removed get_ui_handler.

	* idl/gnome-control.idl (GNOME::Control): Moved get_ui_handler
 	here.

	* idl/bonobo.idl: Rearranged to reflect the New World Order --
 	controls now do the UIHandler stuff.

	* bonobo/gnome-view.c (gnome_view_get_remote_ui_handler): Use the
 	Control method.

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_ui_handler):
 	Removed.
	(gnome_view_frame_get_epv): Don't set the get_ui_handler method. 
	(gnome_view_frame_set_ui_handler): Use the ControlFrame method.
	(gnome_view_frame_get_ui_handler): Likewise.

	* bonobo/gnome-control.c (gnome_control_get_remote_ui_handler):
 	New function.

	* bonobo/gnome-control-frame.c (GnomeControlFramePrivate): Added
 	uih and propbag elements.
	(impl_GNOME_ControlFrame_get_ui_handler): New function.
	(impl_GNOME_ControlFrame_get_ambient_properties): Likewise.
	(gnome_control_frame_get_epv): Set get_ui_handler and get_ambient_properties.
	(gnome_control_frame_set_propbag): New function.
	(gnome_control_frame_get_propbag): Likewise.
	(gnome_control_frame_set_ui_handler): Likewise.
	(gnome_control_frame_get_ui_handler): Likewise.

	* bonobo/gnome-bonobo-widget.c
 	(gnome_bonobo_widget_new_control_from_objref): Check if bw is NULL
 	before casting it to a GtkWidget.
	(gnome_bonobo_widget_new_control): Likewise.
	(gnome_bonobo_widget_new_subdoc): Likewise.

1999-12-17  Michael Meeks  <mmeeks@gnu.org>

	* components/bonobo.keys: update to image-generic.

1999-12-16  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-view.c (gnome_view_construct): kill 

1999-12-13  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c (impl_menu_set_attributes): Implement.
	(impl_menu_set_data): implement. (impl_menu_get_attributes): implement.
	(menu_remote_attribute_data_set, menu_remote_attribute_data_get),
	(menu_remote_attribute_data_free):  implement convenience helpers.
	(menu_remote_set_label, menu_remote_set_hint, menu_remote_set_accel),
	(menu_remote_set_toggle_state, menu_remote_set_accel),
	(menu_remote_set_sensitivity): mangle utterly.
	(menu_remote_get_pos, menu_remote_get_sensitivity, menu_remote_get_label),
	(menu_remote_get_hint, menu_remote_get_accel, menu_remote_get_toggle_state): 
	more mangling. (menu_remote_set_pixmap): use menu_set_data.
	(impl_menu_get_pos, impl_menu_set_sensitivity, impl_menu_get_sensitivity),
	(impl_menu_set_label, impl_menu_get_label, impl_menu_set_hint),
	(impl_menu_get_hint, impl_menu_set_pixmap, impl_menu_get_pixmap),
	(impl_menu_set_accel, impl_menu_get_accel, impl_menu_set_toggle_state),
	(impl_menu_get_toggle_state): kill.
	(gnome_ui_handler_get_epv): Shrink epv lots.

	* gshell/gshell.c (set_buffer_cb): const.

	* bonobo/gnome-property.c (impl_GNOME_Property_set_value): const.

	* bonobo/gnome-view.c (gnome_view_verb_selected_cb): const.

	* bonobo/gnome-view-frame.c (gnome_view_frame_verb_selected_cb),
	(gnome_view_frame_view_do_verb): const.

	* bonobo/gnome-view.c (impl_GNOME_View_do_verb): const.

	* bonobo/gnome-ui-handler.c (toolbar_local_toolbar_create): fix mem
	error. (toolbar_toplevel_toolbar_store_data): ditto.

1999-12-12  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c: Almost every routine constified.
	(pixmap_corba_to_data): kill forward prototype.
	(menu_local_remove_item): fix mem error on path_to_menu_callback insert.

	* bonobo/gnome-ui-handler.h: (GnomeUIHandlerCallbackFunc) const path.
	(GnomeUIHandlerMenuItem): marvel at the conflicting temporary / permanant
	usage of this struct.

	* bonobo/gnome-container.c (impl_get_object): const.

	* bonobo/gnome-storage.c (impl_create_stream, impl_open_stream),
	(impl_create_storage, impl_open_storage, impl_rename): contify.

	* bonobo/gnome-progressive.c (impl_add_data): const.

	* bonobo/gnome-persist-file.c (impl_save, impl_load): const.

	* bonobo/gnome-generic-factory.c (impl_GNOME_GenericFactory_supports),
	(impl_GNOME_GenericFactory_create_object): const.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_set_host_name),
	(impl_GNOME_Embeddable_set_uri): const.

	* bonobo/gnome-desktop-window.c (impl_desktop_window_set_title),
	(impl_desktop_window_set_geometry): const.

	* bonobo/gnome-control-frame.c (impl_GNOME_ControlFrame_activate_uri): const.

	* bonobo/gnome-canvas-component.c (gcc_update, gcc_draw, gcc_bounds),
	(gcc_event, gcc_set_bounds, restore_state, GNOME_Gdk_Event_to_GdkEvent): constify.
	(gcc_update): Add nasty cast to GnomeCanvasItemClass->update 'affine' arg.

	* bonobo/gnome-bonobo-item.c (impl_GNOME_Canvas_ItemProxy_request_update):
	constify.

	* bonobo/gnome-bonobo-selector.c (gnome_dialog_clicked): kill warning.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_get_epv): Added FIXME's
	for missing items + re-orderd to match idl.

	* components/audio-ulaw/bonobo-audio-ulaw.c (view_activate_cb): kill
	deferring to new builtin default.

	* bonobo/gnome-view.c (gnome_view_activate): implement default handler.
	(gnome_view_construct): connect it.

	* Allfiles: rename XXX_class_init (XXX *class) to (XXX *klass)

1999-12-14  Darin Adler  <darin@eazel.com>

	* bonobo/.cvsignore: Ignore more generated files.
	* bonobo/samples/compund-doc/.cvsignore: Ignore more generated files.
	* bonobo/samples/controls/.cvsignore: Ignore more generated files.
	* bonobo/tests/.cvsignore: Ignore more generated files.

1999-12-12 Elliot Lee <sopwith@redhat.com>
	* bonobo/gnome-generic-factory.[ch]: Add gnome_generic_factory_new_multi - just
	  uses a different callback signature which passes the goad ID.

1999-12-13  Nat Friedman  <nat@helixcode.com>

	* components/image-x-png/bonobo-image-x-png.c
 	(bonobo_object_factory): Don't pass the goad id to
 	persist_stream_new.

	* components/text-plain/bonobo-text-plain.c (embeddable_factory): Likewise.

	* tests: Rough draft of a test suite.  Ignore this for now.

	* configure.in (AC_OUTPUT): Create tests/Makefile.

	* Makefile.am (SUBDIRS): Added tests.

	* samples/controls/sample-control-container.c (edit_property):
 	Free the new any when we're done.  This needs to be rewritten to
 	use the new PropertyBagClient API.

	* samples/controls/bonobo-clock-control.c
 	(bonobo_clock_control_prop_value_changed_cb): Use gboolean for b,
 	not CORBA_boolean.
	(bonobo_clock_factory): Likewise for running.

	* idl/gnome-property.idl (GNOME::Property:get_default): Removed
 	comment about persistence since we no longer persist properties
 	from the client.
	(GNOME::Property:use_default_optimization): Removed for the above
 	reason.
	(GNOME::Property:is_stored): Likewise.
	

	* idl/gnome-persist.idl (GNOME::Persist): Removed get_goad_id
 	method.

	* bonobo/gnome-wrapper.c (gnome_wrapper_destroy): New function to
 	clean up some memory leaks :-).
	(gnome_wrapper_class_init): Override the destroy method.
	(gnome_wrapper_unrealize): Set the GCs to NULL after destroying
 	them.  Likewise with the cover.
	(gnome_wrapper_set_covered): Removed unnecessary calls to
 	gnome_wrapper_paint, since this gets triggered by
 	gtk_widget_queue_resize.
	(gnome_wrapper_set_visibility): Queue a resize if the visibility
 	changes.
	(gnome_wrapper_get_visibility): Removed incorrect FIXME.

	* bonobo/gnome-view.h: Reformatted.

	* bonobo/gnome-view-frame.c (gnome_view_frame_construct): Put the
 	control frame widget -- the GtkSocket -- into the wrapper.

	* bonobo/gnome-stream-client.c (gnome_stream_client_write): Allow
 	the user to specify a NULL CORBA_environment.
	(gnome_stream_client_write_string): New function.
	(gnome_stream_client_printf): Likewise.
	(gnome_stream_client_read_string): Likewise.

	* bonobo/gnome-property.c (impl_GNOME_Property_get_type):
 	Duplicate the typecode and free the any.  Remove the warning, as
 	this function should now be working properly, without mem leaks.
	(impl_GNOME_Property_set_value): const CORBA_any
	(impl_GNOME_Property_use_default_optimization): Removed.  The
 	client no longer needs to know about these things since it does
 	not handle property persistence.
	(impl_GNOME_Property_is_stored): Likewise.
	(gnome_property_get_epv): Removed _is_stored and
 	_use_default_optimization from the epv.

	* bonobo/gnome-property-bag.c (_GnomePropertyBagPrivate): Added
 	the persister/depersister data.
	(GnomePropertyTypeDefinition): Renamed to GnomePropertyType.
	(GnomePropertyType): Added comparer function and closure.
	(gnome_property_bag_get_prop_list): New convenience function to
 	return a list of GnomeProperty functions.  Not really intended to
 	be used externally, except by streaming implementations.
	(gnome_property_bag_foreach_create_list): Helper function for
 	above.
	(gnome_property_bag_foreach_create_objrefs): Removed.
	(impl_GNOME_PropertyBag_get_properties): Modified to use
 	gnome_property_bag_foreach_create_list.
	(gnome_property_bag_foreach_create_names): Removed.
	(impl_GNOME_PropertyBag_get_property_names): Modified to use
 	gnome_property_bag_foreach_create_list.
	(gnome_property_bag_set_persister): New API function.
	(gnome_property_bag_persist_save): New function to dispatch to the
 	persistence function.
	(gnome_property_bag_persist_load): New function to dispatch to the
 	depersistence function.
	(gnome_property_bag_construct): Add a PersistStream interface for
 	persisting/depersisting the PropertyBag's properties.
	(gnome_property_bag_foreach_remove_prop): Pass the type closure to
 	the releasers.
	(gnome_property_bag_set_prop_type): The type parameter is now
 	const.
	(gnome_property_bag_set_value): Pass the type closure to the
 	releaser.
	(gnome_property_bag_set_default): The name parameter is now const.
	(gnome_property_bag_set_docstring): Likewise.
	(gnome_property_bag_set_flags): Likewise.
	(gnome_property_bag_create_type): Added the comparer, releaser,
 	and closure parameters.
	(gnome_property_bag_value_to_any): Pass the type closure to the
 	property type marshaler.
	(gnome_property_bag_any_to_value): Pass the type closure to the
 	property type demarshaler.
	(gnome_property_bag_marshal_*): Removed, moved to
 	gnome-property-types.c
	(gnome_property_bag_demarshal_*): Likewise.
	(gnome_property_bag_compare_values): New function to dispatch to
 	the type comparator.
	(gnome_property_bag_init): Specify the comparers and closures when
 	we create the default types.

	* bonobo/gnome-property-bag-client.c
 	(gnome_property_bag_client_free_properties): New function to free
 	a list of properties and release the CORBA objrefs stored in it.
	(gnome_property_bag_client_write_to_stream): Removed.
  	Persisting/depersisting is now done on the server side.
	(gnome_property_bag_client_read_from_stream): Likewise.
	(gnome_property_bag_client_persist): New function to persist a
 	remote property bag into the specified stream.
	(gnome_property_bag_client_depersist): New function to depersist a
 	remote property bag from the specified stream.
	(gnome_property_bag_client_get_property_type): New convenience
 	function which returns the CORBA_TypeCode for the specified
 	property.
	(gnome_property_bag_client_get_field_any): New convenience
 	function which returns a CORBA_any containing the value of the
 	specified property.
	(gnome_property_bag_client_get_field_boolean): Likewise.
	(gnome_property_bag_client_get_field_short): Likewise.
	(gnome_property_bag_client_get_field_ushort): Likewise.
	(gnome_property_bag_client_get_field_long): Likewise.
	(gnome_property_bag_client_get_field_ulong): Likewise.
	(gnome_property_bag_client_get_field_float): Likewise.
	(gnome_property_bag_client_get_field_double): Likewise.
	(gnome_property_bag_client_get_field_string): Likewise.
	(gnome_property_bag_client_get_value_boolean): Likewise.
	(gnome_property_bag_client_get_value_short): Likewise.
	(gnome_property_bag_client_get_value_ushort): Likewise.
	(gnome_property_bag_client_get_value_long): Likewise.
	(gnome_property_bag_client_get_value_ulong): Likewise.
	(gnome_property_bag_client_get_value_float): Likewise.
	(gnome_property_bag_client_get_value_double): Likewise.
	(gnome_property_bag_client_get_value_string): Likewise.
	(gnome_property_bag_client_get_value_any): Likewise.
	(gnome_property_bag_client_get_default_boolean): Likewise.
	(gnome_property_bag_client_get_default_short): Likewise.
	(gnome_property_bag_client_get_default_ushort): Likewise.
	(gnome_property_bag_client_get_default_long): Likewise.
	(gnome_property_bag_client_get_default_ulong): Likewise.
	(gnome_property_bag_client_get_default_float): Likewise.
	(gnome_property_bag_client_get_default_double): Likewise.
	(gnome_property_bag_client_get_default_string): Likewise.
	(gnome_property_bag_client_get_default_any): Likewise.
	(gnome_property_bag_client_set_value_any): New convenience
 	function to set the value of a property.
	(gnome_property_bag_client_set_value_boolean): Likewise.
	(gnome_property_bag_client_set_value_short): Likewise.
	(gnome_property_bag_client_set_value_ushort): Likewise.
	(gnome_property_bag_client_set_value_long): Likewise.
	(gnome_property_bag_client_set_value_ulong): Likewise.
	(gnome_property_bag_client_set_value_float): Likewise.
	(gnome_property_bag_client_set_value_double): Likewise.
	(gnome_property_bag_client_set_value_string): Likewise.
	(gnome_property_bag_client_get_docstring): New convenience
 	function.
	(gnome_property_bag_client_get_flags): Likewise.

	* bonobo/gnome-persist.h (GnomePersist): Removed the goad id field.

	* bonobo/gnome-persist-file.c (gnome_persist_file_construct):
 	Removed the goad id from the construct function, since we do not
 	necessarily know our own goad id.
	(gnome_persist_file_new): Likewise.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_construct):
 	Removed the goad id param.
	(gnome_persist_stream_new): Likewise.
	
	* bonobo/gnome-persist.c (impl_get_goad_id): Removed.
	(gnome_persist_get_epv): The epv is now empty.  Perhaps
 	GnomePersist needs to be rethought.
	(gnome_persist_construct): Removed the goad id parameter.

	* bonobo/gnome-object-io.c (gnome_object_save_to_stream): Added a
 	goad_id parameter.  This stuff *all* needs to be rethought.  We
 	cannot count on being able to ask a component what its goad id is.
	(gnome_persiststream_save_to_stream): Pass the goad id to
 	gnome_persist_stream_save_goad_id.

	* bonobo/gnome-client-site.c: Don't include gtksocket.h.
	(set_remove_window): Removed as the control now handles all of
 	this.
	(gnome_client_site_new_view_full): Do not create the socket.
	(destroy_view_frame): Renamed to gnomef_client_site_view_frame_destroy.

	* bonobo/Makefile.am: Added libbonobo-xml for the XML-based
 	property streaming.
	(libbonobo_la_SOURCES): Added gnome-property-types.c
	(libbonoboinclude_HEADERS): Added gnome-property-types.h

1999-12-11  Michael Meeks  <mmeeks@gnu.org>

	* components/audio-ulaw/bonobo-audio-ulaw.c (destroy_view),
	(update_all_views): rename (update_view_foreach): implement.
	(update_all_views_callbackm pstream_load, progressive_start): update.
	(view_factory): setup object_data 'view_data' (stream_read): add
	exception handling. set widget_usize on canvas. add view_activate
	(embeddable_factory): add "destroy" + "system_exception" handlers.
	update id to 'embeddable' to match gnorba (embeddable_destroy_cb):
	implement. (init_bonobo_audio_ulaw_factory): Update to
	embeddable-factory so it actually works.
	Misc. stylistic fixes + localise CORBA_Environment & orb.
	(view_activate_cb): implement.

	* components/audio-ulaw/item-audio.c (item_audio_class_init): use
	'ItemAudio::EmbeddableData'.

	* components/audio-ulaw/bonobo-audio-ulaw.h: kill views list.

	* samples/controls/bonobo-calculator-control.[ch]: create.

	* samples/controls/Makefile.am: Add calculator sample.

	* samples/controls/sample-control-factory.c (main): Add calculator
	factory.

1999-12-10  Nat Friedman  <nat@helixcode.com>

	* storage-modules/gnome-storage-efs.c (real_list_contents):
 	Parenthesis around assignment used as comparison to eliminate
 	warning.
	(gnome_storage_efs_open): Cast sefs to GNOME_OBJECT instead of
 	GTK_OBJECT when calling gnome_object_destroy.

	* bonobo/gnome-property-bag.c
 	(impl_GNOME_PropertyBag_get_property): The exception structure is
 	empty, so there's no need to allocate it.

	* bonobo/gnome-persist-file.c (impl_get_current_file): Do not use
 	g_new to allocate the exception.  Dup the string that we stuff in
 	the exception.

	* bonobo/gnome-object.c (impl_GNOME_Unknown_query_interface):
 	Fixed the formatting here.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): Use
 	CORBA_Object_is_nil to check if the returned server is NIL instead
 	of comparing the pointer to NULL.
	
	* bonobo/gnome-object-client.c (gnome_object_restore_from_url):
 	Likewise.

	* HACKING: Added a note saying that all patches must be approved.

	* Reverted Elliot's previous patch.

1999-12-09  Elliot Lee  <sopwith@redhat.com>

	* bonobo/gnome-generic-factory.[ch],
	samples/controls/bonobo-clock-control.c: Pass the goad_id to the
	GnomeGenericFacoryFn etc.

	* All files: Use GNOME2 (e.g. OAF) if BONOBO_USE_GNOME2 is defined.
	* bonobo/*.[ch]: Have the get_epv() functions take a 'duplicate flag
	that indicates whether a copy of the epv or a pointer to the default should be used.
	* bonobo/{gnome-persist-file,gnome-property-bag}.c: Don't allocate memory for exception data with g_new.
	* bonobo/*.[ch]: Some misc warning fixes.
	* bonobo/gnome-object.c: Remove over-strict checking of refcounts in add_interface().

1999-12-09  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-object-client.c (gnome_object_client_query_interface): 
	add documentation ( doh ).
	
1999-12-09  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c (toolbar_toplevel_toolbar_remove_widgets_recursive):
	kill our parent; sad but true.

	* samples/compound-doc/sample-container.c (component_load_ps_ok_cb),
	(component_load_pf_ok_cb): use _client_query_interface.
	(container_create_component_frame): use client_has_interface.
	(gnome_object_has_interface): kill.

	* components/text-plain/bonobo-text-plain.c: Localise CORBA_Exception +
	CORBA_Orb. (create_view_menus): fix type bug. (bonobo_object_destroy_cb):
	Kill return type + count running instances.
	(init_bonobo_text_plain_factory): make factory global.
	(embeddable_factory, view_factory): Add system_exception handler.
	(embeddable_system_exception_cb): 

	* bonobo/test-container-autoload.c (add_object_to_container): update.
	(gnome_object_has_interface): kill.

	* bonobo/test-container.c (add_*_cmd): Update to _client_query_interface.
	(send_text_cmd): ditto.

	* bonobo/gnome-client-site.c (gnome_client_site_bind_embeddable): ditto.

	* bonobo/gnome-object-client.c (gnome_object_client_has_interface),
	(gnome_object_client_query_interface): implement.

1999-12-07  Michael Meeks  <mmeeks@gnu.org>

	* components/image-x-png/bonobo-image-x-png.c (view_factory): kill
	size_query connect. (view_size_query_cb): kill.

	* bonobo/gnome-control.c (gnome_control_windowid_from_x11),
	(window_id_demangle, impl_GNOME_Control_set_window): update to string
	id passing.

	* bonobo/gnome-control-frame.c (gnome_control_frame_set_remote_window): 
	use windowid_from_x11.

	* bonobo/gnome-client-site.c (set_remote_window): ditto.

	* idl/gnome-control.idl: string up the windowid

	* idl/gnome-ui-handler.idl: fix typo 'toiolbar_get_accel'

1999-12-04  Nat Friedman  <nat@helixcode.com>

	* samples/Makefile.am: Fixed for the new directory layout.

	* samples/compound-doc/Makefile.am: New file.  Moved the
	appropriate stuff from samples/Makefile.am.


1999-12-03  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-ui-handler.c (menu_toplevel_create_hint): check
	old_hint before freeing it.

	* bonobo/gnome-view-frame.c: Privatize GnomeViewFrame->uih.

1999-12-03  Nat Friedman  <nat@helixcode.com>

	* samples/controls/sample-control-container.c
 	(populate_property_list): Check the exception when we read the
 	name and when we get the value.

	* idl/gnome-control.idl (ControlFrame): Updated the comment on
 	activate_uri to make sense.

	* bonobo/gnome-property-bag.c
 	(gtk_marshal_NONE__POINTER_POINTER_POINTER_POINTER): New function
 	to marshal value_changed signals.
	(gnome_property_bag_class_init): Fixed to use the new marshaler
 	and the correct number of arguments.

Fri Dec  3 19:23:07 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-ui-handler.c (impl_get_toplevel):
	CORBA_Object_duplicate the objref we return. 

1999-12-02  Nat Friedman  <nat@helixcode.com>

	* idl/gnome-property.idl: Added the use_default_optimization
 	method to the Property interface.  Read the comments; this is an
 	important one.

	* bonobo/gnome-property.c: Reformatted the file.
	(gnome_property_get_epv): Added use_default_optimization to the
 	epv.
	(impl_GNOME_Property_use_default_optimization): New function.

	* bonobo/gnome-view.c (gnome_view_destroy): Cast the uih before
 	destroying it.

	* bonobo/gnome-property-bag.h: Reformatted.
	(GnomePropertyFlags): Added
 	GNOME_PROPERTY_USE_DEFAULT_OPTIMIZATION.
	
Thu Dec  2 14:37:03 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/gshell.c (buffer_add_view): use the new
	gnome_client_site_new_view_full function.

Wed Dec  1 15:45:55 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-bonobo-selector.c (select_row): bug fix: emit a clicked
	signal to simulate an OK button press.
	(gnome_dialog_clicked): temporary function - remove it as soon it
	is included into gnome-dialog

1999-12-01  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-wrapper.c: Make 'cover' a private member.

1999-12-01  Nat Friedman  <nat@helixcode.com>

	* samples/controls/sample-control-container.c (edit_property): New
 	function to allow you to change property values, largely courtesy
 	of Martijn van Beers.

	* idl/gnome-property.idl: Corrected the spelling of my name.

	* bonobo/gnome-client-site.c (gnome_client_site_new_view_full):
 	New function to please Dietmar :-).
	
1999-11-30  Nat Friedman  <nat@helixcode.com>

	* bonobo/gnome-view.c (gnome_view_destroy): Destroy the
 	GnomeUIHandler when we die.

	* samples/controls/sample-control-container.c
 	(populate_property_list): Hacked to display all of the CORBA types
 	we'll be marshaling in properties.

	* bonobo/gnome-property-bag.c (CORBA_string__alloc): Fixed so it
 	deep-frees the string.  Thanks, Elliot.
	
	* bonobo/gnome-property-bag.c: Added a bunch of macros to fake
 	CORBA type allocation.  Fixed the CORBA value memory allocation in
 	the marshalers to use those.

	* bonobo/gnome-property-bag.c
 	(gnome_property_bag_marshal_boolean): New function.
	(gnome_property_bag_demarshal_boolean): Likewise.
	(gnome_property_bag_init): Create the boolean type.
	(gnome_property_bag_create_type): Reverse the parity on the type
 	existence assertion.  Durh.

	* bonobo/gnome-property.c: New file.  Implement the GnomeProperty
 	server.  Read gnome-property-bag.c first.

	* bonobo/gnome-property.h: New file.

	* bonobo/gnome-property-bag-client.c: New file.  A convenient
 	GtkObject to allow you to manipulate a remote PropertyBag.

	* bonobo/gnome-property-bag-client.h: New file.

	* bonobo/gnome-property-bag.c: New file.  Implements the
 	PropertyBag server which dishes out properties on demand.

	* bonobo/gnome-property-bag.h: New file.

	* samples/controls/sample-control-container.c: New file.  Use this
 	to learn how to use controls.  Marvel at how easy it is.

	* samples/controls/sample-control-factory.c: New file.  A factory
 	to start controls.

	* samples/controls/bonobo-clock-control.c: New file.  A sample
 	control.  Use this to learn how to write controls.

	* samples/controls/bonobo-clock-control.h: New file.  Prototypes
 	for the above.

	* samples/controls/bonobo-clock-control.gnorba: New file.  GNORBA
 	file for the clock control.

	* bonobo/gnome-wrapper.c: Ok, lots of changes.  First, I took
 	Mathieu's patch, modified it very heavily, and applied it.
  	Mathieu, please test your patches a bit more before sending them
 	in.  So GnomeWrapper now puts a little border around the embedded
 	component if the 'covered' flag is FALSE and the 'visible' flag is
 	TRUE.  Visibile is a new new flag for which I added
 	manipulation/inspection functions.  Also, GnomeWrapper now uses a
 	private data structure.  I moved the covered flag there, and some
 	other stuff, I think.

	* bonobo/gnome-view.c: Use the new epv system.  Seem to have
 	renamed some functions accidentally; oh well.  Removed all size
 	negotiation.

	* bonobo/gnome-view-frame.c: Use the new epv system.  Fixed some
 	bugs.  Activate the view if the user hits ENTER on it.  Destroy
 	things in the right order.  Removed all size negotiation.  Moved
 	all X window embedding to controls.

	* bonobo/gnome-ui-handler.c: Use the new epv system.  Now destroys
 	toolbar items when a containee unregisters itself.  Commented out
 	some g_slist_frees that were causing the glib slist allocator to
 	become corrupt for some strange reason.  Added support for
 	inserting Controls into toolbars.

	* bonobo/gnome-stream.c: Use the new epv system.

	* bonobo/gnome-storage.c: Use the new epv system.

	* bonobo/gnome-progressive.c: Use the new epv system.

	* bonobo/gnome-persist.c: Use the new epv system.

	* bonobo/gnome-persist-stream.c: Use the new epv system.

	* bonobo/gnome-persist-file.c: Use the new epv system.

	* bonobo/gnome-object.c: Removed the __destroy method
 	implementation.  Uses the new epv system.

	* bonobo/gnome-generic-factory.c: Use the new epv system.

	* bonobo/gnome-embeddable.c: Use the new epv system.

	* bonobo/gnome-embeddable-factory.c: Use the new epv system.
  	Actually inits the corba class now -- This was apparently never
 	tested before :-).  

	* bonobo/gnome-desktop-window.c: Use the new epv system.

	* bonobo/gnome-control.c: Use the new epv system.  Support
 	PropertyBags.  Gutted all size negotiation.  Fixed plug
 	destruction.  Added set_frame.  Fixed the set_window logic.  Fixed
 	destruction.  Added functionality to support ControlFrame ambient
 	property bags.  Fixed many bugs.

	* bonobo/gnome-control-frame.c: Use the new epv system.  Gutted
 	all the size negotiation.  Moved remote-window setting here from
 	the view.  Moved the GtkSocket here.  Now properly binds itself to
 	remote controls without race conditions.  Added several functions
 	to allow you to inspect the object.  Added the ambient properties
 	property bag.

	* bonobo/gnome-container.c: Use the new epv system.

	* bonobo/gnome-client-site.c: Use the new epv system.  Removed
 	some old functions that weren't useful.  Fixed the SHOW_WINDOW
 	signal so it actually works.  Removed all the size negotiation
 	logic.

	* bonobo/gnome-canvas-component.c: Use the new epv system.

	* bonobo/gnome-bonobo-widget.c: It now works.  It embed
 	subdocuments as well as controls.  It rocks your world.  You want
 	to be me.
  
	* bonobo/Makefile.am: Added all the property files.

	* samples/controls/bonobo-clock-control.c (bonobo_clock_factory): 

	* samples/controls/bonobo-clock-control.h: New file.

	* samples/paint-component-simple.c: Renamed update_view to
 	update_view_foreach.  Removed all size-negotiation code.

	* samples/sample-container.c: Removed all size negotiation code.

	* idl/gnome-ui-handler.idl: Added ToolbarTypeControl to the
 	ToolbarType enum.  Added a control argument to the
 	toolbar_create_item() method.

	* idl/gnome-control.idl: Removed all property stuff from here.
  	Added a get_ambient_properties() method to ControlFrame.  Added
 	queue_resize to ControlFrame.  Added get_property_bag() to
 	Control.  Added size_request and size_allocate() to control.
  	Removed size_query().  We are fully Gtk+-adherent in our
 	size-negotiation semantics now.
 
	* idl/gnome-container.idl: Moved the SyntaxError exception into
 	the Container interface.

	* idl/bonobo.idl: Added gnome-property.idl.  Rearranged things
 	slightly.

	* idl/Makefile.am: Added gnome-property.idl
	

Sun Nov 28 17:15:13 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/menu.[ch]: new files for menu related things 

Sun Nov 28 17:55:00 1999  Yukihiro Nakai <nakai@gnome.gr.jp>

	* configure.in: Add ja into ALL_LINGUAS

Sat Nov 27 09:20:51 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/gshell.c: new menus

Fri Nov 26 08:15:53 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/inout.c (file_open_cb): use g_file_test instead of stat.

	* gshell/gshell.c (update_buffer_menu): only display the
	g_basename() of a file in the buffer menu.

	* gshell/inout.c (buffer_save_pf): new save routine.
	(buffer_save_ps): new save routine.

	* components/bonobo.keys: use embeddable:text-plain as default
	viewer for text/* 

Thu Nov 25 12:51:09 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/gshell.c (frame_create_toolbar): add toolbar support

	* gshell/inout.c (file_open_cmd_cb): add mime type support
	(buffer_load_ps): add PersistStream support
	(buffer_load_pf): add PersistFile support

	* gshell/gshell.c (update_buffer_menu): implemented the Buffer
	menu.  

Wed Nov 24 15:49:45 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-client-site.c (gnome_client_site_new_view): don't
	call gtk_widget_show for the wrapper.

	* bonobo/gnome-view.h: set GnomeViewClass parent class to
	GnomeControlClass.

	* bonobo/gnome-view-frame.h: set GnomeViewFrameClass parent class
	type to GnomeControlFrameClass.

	* gshell/gshell.c (buffer_create_cb): check if buffer is NULL

Sun Nov 21 11:51:37 1999  Dietmar Maurer  <dm@darkstar>

	* storage-modules/gnome-storage-efs.c (gnome_storage_efs_open):
	use gnome_object_destroy instead of gtk_object_destroy.

	* bonobo/gnome-control.h: added prototype for
	gnome_control_corba_object_create()

	* bonobo/gnome-bonobo-selector.c (gnome_bonobo_select_goad_id):
	fixed compile warning.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view):
	fixed compile warning.

Fri Nov 19 12:55:35 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-view-frame.c (gnome_view_frame_destroy): destroy
	the wrapper after destroying the remote view (so that
	plug_destroy_cb is not called).

Thu Nov 18 08:40:55 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-control.c (impl_GNOME_Control_set_window): replaced
	destroy_event with delete_event.

	* bonobo/gnome-view-frame.c (gnome_view_frame_destroy): call
	GNOME_Unknown_unref to delete the remote view.

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): move
	gnome_container_remove to the end, since it unref (destroys) the
	object. Don't call gnome_object_unref, since it is called by
	gnome_container_remove.

Wed Nov 17 10:52:15 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* gshell/*: added a new subdir for gshell (see gshell/README)

	* bonobo/gnome-wrapper.c (gnome_wrapper_init): unset the
	GTK_NO_WINDOW flag, since we have a window.

1999-11-09  Alexander Werner Skwar <askwar@digitalprojects.com>

	* bonobo.spec.in: More fixes.

1999-11-11  Jesus Bravo Alvarez  <jba@pobox.com>

	* configure.in: Added Galician (gl) to ALL_LINGUAS

1999-11-09  Alexander Werner Skwar <askwar@digitalprojects.com>

	* bonobo.spec.in: Add sysconfdir.

1999-11-09  Michael Meeks  <mmeeks@gnu.org>

	* configure.in: kill image-generic.

	* components/Makefile.am (SUBDIRS): ditto.

1999-10-30  Michael Meeks  <mmeeks@gnu.org>

	* components/bonobo.keys: Add text/html.

1999-10-24  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view): Add
	warning if an object returned does not have a valid corba object.

1999-10-22  Michael Meeks  <mmeeks@gnu.org>

	* components/image-generic/bonobo-image-generic.c:
	s/GdkPixBuf/GdkPixbuf/
	(release_pixbuf_cb): create. (release_pixbuf): use foreach_view.
	(load_image_from_stream, redraw_all_cb): ditto
	(load_image_from_stream): Update to new gdk-pixbuf API.

1999-09-23  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/test-container.c (add_gnumeric_cmd): Change this to goadid

1999-10-12  Michael Meeks  <mmeeks@gnu.org>

	* bonobo/gnome-bonobo-widget.c (gnome_bonobo_widget_size_allocate):
	comment out gdk_window_move_resize, it caused a loop shrinking the
	widget.

	* bonobo/test-bw.c (button_clicked_cb): update (main): Allow component
	specification on the cmdline.

1999-10-10  Michael Meeks  <mmeeks@gnu.org>

	* samples/paint-component-simple.c (main): Make factory global, add
	running_object count. (embeddable_factory): increment count.
	(embeddable_destroy_cb): Add quit on 0 objects.

1999-10-06  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-generic-factory.c: New file.  Now we use a generic
	factory rather than an embeddable factory.

	* bonobo/gnome-client-site.c (gnome_client_site_new_item): Updated
	to the new setup.

	* bonobo/gnome-bonobo-item.c (gnome_bonobo_item_new): Take a
	gnome-embddable rathern than a ViewFrame. 

	* bonobo/gnome-client-site.c: Updated and initialize corba class
	in a routine rather than using a structure.

	* bonobo/gnome-embeddable.c (gnome_embeddable_destroy): Destroy
	the items as well.

	* bonobo/gnome-embeddable.c (GnomeEmbeddablePrivate): move the
	list of views here;  Add support for creating canvas items;  Add
	the canvas creation functions here;  add the callback pointers
	here. 

1999-10-05  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-canvas.idl (set_bounds): New method.

	* bonobo/gnome-view.c (gnome_view_class_init): Removed the code
	that has been moved to the gnome-control.

	* bonobo/gnome-control.c: New file, implements the control side.
	This is a very simple interface for creating controls 

	* idl/gnome-control.idl (Control, ControlFrame): new interfaces,
	they are now the basis for View and ViewFrame.

	* idl/gnome-embeddable.idl (View): we no longer return the canvas
	item here.
	(Embeddable): new method for returning a canvas item from this
	embeddable. 

1999-10-04  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/gnome-desktop-window.c (gnome_desktop_window_construct):
	Rename from gnome_view_construct.

1999-10-04  Gregory McLean <gregm@gnu.org>

	* bonobo.spec.in: Updated. Commited at the request of the miggypoo.

1999-09-29  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-desktop.idl, bonobo/gnome-desktop-window.c: New files,
	used to control a toplevel GtkWindow and export its properties
	through corba.

1999-09-29  Rodrigo Stulzer Lopes <rodrigo@conectiva.com.br>

	* configure.in: add pt_BR to ALL_LINGUAS

1999-09-28  Nat Friedman  <nat@gnome-support.com>

	* storage-modules/Makefile.am (libstorage_efs_la_LDFLAGS): Link
 	with -Llibefs/src/.libs, not -Llibefs/src/.

	* idl/gnome-client-site.idl (GNOME::ClientSite): Remove the
 	queue_resize method from this ineterface.

1999-09-28  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "ro" to ALL_LINGUAS.
	
1999-09-26  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-bonobo-item.c (gbi_set_arg): Add support for
	delayed realization of the remote item for the startup case (ie,
	the parent item is shown, tries to be realized, but the
	GnomeBonoboItem is not yet finished setting itself up).

	* bonobo/gnome-bonobo-selector.c (gnome_bonobo_select_goad_id):
	Use GnomeDialogRun here.

	* bonobo/gnome-bonobo-item.c (gbi_finalize): Unref the remote item
	here. 
	(gbi_set_arg): Also unref the remote item if we are changing it here.

	* bonobo/gnome-client-site.c (gnome_client_site_new_item,
	gnome_client_site_new): CORBA_Object_release the view refereces we
	get. 

	* bonobo/gnome-view-frame.c (gnome_view_frame_destroy): Unref the
	remote view when we are destroyed.

	* bonobo/gnome-client-site.c (gnome_client_site_new_item): Catch
	view destruction to clean up the list of view-frames.

1999-09-25  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-client-site.c (gnome_client_site_new_item): API
	change to improve consistency.

	* bonobo/gnome-view-frame.c (gnome_view_frame_init): Allocate
	private structure.
	(gnome_view_frame_get_canvas_item,
	gnome_view_frame_set_canvas_item): New accessor methods.
	(gnome_view_frame_destroy): Free private.

1999-09-23  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-embeddable.idl: Embeddables no longer throw a
	MultiViewNotSupported exception.  These kind of things will be
	handled by a separate interface.

1999-09-21  Miguel de Icaza  <miguel@gnu.org>

	* idl/gnome-control.idl: New interface, based on Chuck's
	suggestions. 

1999-09-22  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/Makefile.am: add gnomine.

	* configure.in: add gnomine

1999-09-22  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/image-generic/bonobo-image-generic.c (view_size_allocate_cb):
	Remove redundant duplicate + use new gdk_pixbuf scaling API + protect with
	a const.

1999-09-18  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/image-generic/bonobo-image-generic.c (view_size_allocate_cb):
	Add image scaling.

	* components/image-generic: Create; #defined out for now: nasty
	hack with temp files :-)

1999-09-17  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/image-x-png/bonobo-image-x-png.c (stream_read): Add init
	/ free corba exception. (bonobo_object_factory): setup 'image'.

	* components/bonobo.keys: Add new keys.

	* components/Makefile.am: add image-generic.

	* configure.in: Added image-generic.

1999-09-17  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "da" to ALL_LINGUAS.
	
1999-09-16  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/gnome-canvas-component.c: include stdio.h

	* bonobo/gnome-stream-memory.c (mem_read): Read from the current offset,
	and not the BOF. (mem_write): ditto.

1999-09-15  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/test-container.c (add_pdf_cmd): Update to application-x-pdf,
	fixup menu shortcut.

1999-09-13  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/Makefile.am: Add bonobo created file clean.

	* bonobo/gnome-client-site.c (gnome_client_site_new_view): Use
	gnome_object_unref. (gnome_client_site_new_item): ditto.

	* components/image-x-png/bonobo-image-x-png.c (get_pixbuf): Helper fn.
	(redraw_view, configure_size): use it
	(view_size_query_cb): Implement size query (view_factory): ditto.

1999-09-14  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-canvas-component.c (gcc_render): If the is_buf is
	FALSE, then allocate our buffer

	* bonobo/gnome-bonobo-item.c (gbi_render): Do not queue an
	update.  Thanks Federico!
	(gbi_render): Optimization.  if is_buf is FALSE, then we do not
	transfer the buffer across.

	* bonobo/test-container.c (add_canvas_cmd): Make a bigger canvas.  
	(item_event_handler): fix logic.
	
1999-09-11  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_object_destroy): Only
	release the servant resources if we have a servant.
	(GnomeObjectClient is our example).

1999-09-11  Michael Meeks  <michael@nuclecu.unam.mx>

	* bonobo/gnome-ui-handler.c (toolbar_toplevel_get_widget): Created.
	(toolbar_toplevel_set_sensitivity_internal): Use toolbar_topleve_get_widget
	so we look in the right hash table.
	(pixmap_data_to_corba): Remove warning on stock / filename; seems to
	work well.
	(pixmap_xpm_copy_data, pixmap_copy_data, pixmap_xpm_get_length): Constify.
	(gnome_ui_handler_destroy): Added warning & kill compile warning.

	* doc/debugging.txt: Removed enumeration: pain to renumber :-) Add
	mention of the FAQ

1999-09-10  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-bonobo-item.c (gbi_finalize): Add call to
	POA_GNOME_Unknown__fini here too.

	* bonobo/gnome-object.c (gnome_object_object_destroy): Add call to
	POA_GNOME_Unknown__fini here.

1999-09-09  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view.c (make_component): Invoke gdk_rgb_init if we
	create an _aa canvas.

	* bonobo/gnome-canvas-component.c (gcc_update): Copy the entire
	affine, not only the first 5 fields.

	* bonobo/gnome-bonobo-item.c (gbi_update): ditto

	* doc/bonobo-faq.sgml: Start a FAQ.
	
	* bonobo/gnome-client-site.c: New routine for requesting a
	GnomeCanvasItem from a View.  I am not sure if I like this setup.
	Needs discussion with Nat.

	* bonobo/Makefile.am: Ship item.gnorba;  Add Bonobo-item support. 

	* idl/gnome-canvas.idl: Canvas::Item update method should return
	its boudning box and the update flag status.
	
1999-09-08  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/sample-server.c (main): Invoke bonobo_main here.

	* bonobo/sample-item.c: new file, implements an item server.

	* bonobo/gnome-view.c: Moved various private members into our
	private data structure.
	(make_component): Creates the component if we are missing one by
	calling the view-item-provider routine.
	(impl_GNOME_View_set_window): Returns the canvas for the item if
	we are requested a window.
	(impl_GNOME_View_get_canvas_item): New routine.
	(gnome_view_construct): modify to accept an item_creator callback
	routine. 
	(gnome_view_new_canvas): New routine to create a GnomeView server
	that will respond to get_canvas_item requests.

	* bonobo/sample-server.c: fixed to use bonobo_main().

	* bonobo/sample-item.c: Sample item server.

	* bonobo/test-container.c: New test for bonobo canvas items.

	* idl/gnome-canvas.idl: Make Item derived from GNOME_Unkown.
	
	* bonobo/gnome-canvas-component.c: New file.  the other end of a
	GnomeBonoboItem. 

1999-09-07  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-canvas-item.c: Implements a server for
	GNOME::Canvas::Item interface for a real item.
	
	* bonobo/gnome-view.c (gnome_view_popup_verbs): Constify.

	* bonobo/gnome-bonobo-item.c (gdk_event_to_bonobo_event): Finished
	event marshalling here.

1999-09-08  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/bonobo.keys: Update text/plain: doh.

1999-09-08  Michael Meeks  <michael@nuclecu.unam.mx>

	* components/Makefile.am: Added bonobo.keys install

	* components/bonobo.keys: Added.

1999-09-07  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-bonobo-item.c: New file, implements a proxy canvas
	item that will talk to a GNOME::Canvas::Item returned by a GNOME::View.

1999-09-07  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-object.c (gnome_object_usage_error): Updated warning to
	elucidate the fix.

1999-09-05  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (impl_menu_activated, impl_menu_get_children): 
	Cleaned pointer dereference style.

1999-09-06  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/gnome-canvas.idl: New interface for canvas-based renderers. 

Mon Sep  6 01:22:10 1999 Timur Bakeyev <timur@gnu.org>

	* storage-modules/Makefile.am: Remove in libstorage_efs_la_LDFLAGS
	$(shell pwd) and src/.libs - libtool takes care about paths.

1999-09-04  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_create_toolbar): Add docs.
	Added precondition on name.
	Added several unimplemented warnings.
	(menu_toplevel_item_activated): Remove cast.
	(toolbar_toplevel_item_activated): Implemented.
	(impl_toolbar_activated): Implemented.
	(init_ui_handler_corba_class): Inserted missing impl assignments, moved to eof
	to save using innumerable forward static definitions !
	struct _ToolbarItemLocalInternal: update callback to GnomeUIHandlerCallbackFunc.

	* components/image-x-png/bonobo-image-x-png.c (bonobo_object_factory):
	Clean redundant assignment.

1999-09-04  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* samples/sample-container.c (component_add_view): fix typo

1999-09-03  Nat Friedman  <nat@gnome-support.com>

	* samples/paint-component-simple.c (view_button_press_cb): New
 	function to pop up a component-side verb menu.
	(view_factory): Connect to the button_press_event on the drawing
 	area.
	(container_exit_cmd): Destroy the GnomeContainer object on exit.
	(component_shutdown): New function.
	(component_view_frame_system_exception_cb): New function.
	(component_add_view): Connect to the system_exception signal on
 	the view frame.
	(component_client_site_system_exception_cb): New function.
	(container_activate_component): Connect to the system_exception
 	signal on the client site.
	(container_container_system_exception_cb): New function.
	(container_create): Connect to the system_exception signal on the
 	GnomeContainer.

	* components/text-plain/bonobo-text-plain.c (destroy_view): Don't
 	unref the widgets.

	* bonobo/gnome-view.c
	(gnome_view_execute_verb): New function.
 	(impl_GNOME_View_do_verb): Call gnome_view_execute_verb.
	(gnome_view_construct): Moved bonobo_setup_x_error_handler call
 	here.
	(gnome_view_popup_verbs): New function.

	* bonobo/gnome-ui-handler.c
 	(toolbar_toplevel_item_remove_widgets_recursive): New function.
	(toolbar_toplevel_toolbar_override_notify_recursive): Ditto.
	(impl_toolbar_overridden): Filled in.
	(toolbar_toplevel_create_item): Added a call to
 	set_sensitivity_internal and set_toggle/radio_state_internal upon
 	toolbar widget creation.
	(gnome_ui_handler_toolbar_free_list): Implemented.
	(gnome_ui_handler_toolbar_free_tree): Implemented.
	(gnome_ui_handler_toolbar_get_pos): Implemented.
	(gnome_ui_handler_toolbar_set_sensitivity): Implemented.
	(gnome_ui_handler_toolbar_get_sensitivity): Implemented.

	* bonobo/gnome-persist-stream.c (init_persist_stream_corba_class):
 	Hook up the implementation for is_dirty.

	* bonobo/gnome-main.c (bonobo_init): Add a note about EPIPE.

	* bonobo/gnome-embeddable.c (gnome_embeddable_view_destroy_cb):
 	Disable ping again.
	(gnome_embeddable_get_verbs): New function.

	* bonobo/gnome-container.c (gnome_container_add): Pass the
 	container as the closure on the ClientSite destroy signal.

	* bonobo/gnome-bonobo.h: Include gnome-bonobo-widget.h

	* bonobo/gnome-bonobo-widget.c: Now overrides size_allocate and
 	size_request.

	* bonobo/Makefile.am: Added test-bw and gnome-bonobo-widget.

1999-09-02  Michael Meeks  <michael@imaginator.com>

	* doc/debugging.txt: Updated.

	* components/image-x-png/bonobo-image-x-png.c (main): Add bonobo_main() !

	* components/audio-ulaw/bonobo-audio-ulaw.c (main): ditto.

	* components/text-plain/bonobo-text-plain.c (main): Use bonobo_main();

	* components/image-x-png/bonobo-image-x-png.c (bonobo_object_factory),
	(init_bonobo_image_x_png_factory): Update to embeddable:image-x-png.

	* components/image-x-png/image-x-png.gnorba (location_info):
	the component make lives inside the factory. Remove loop in location_info.

	* bonobo/gnome-object.c: include gtktypeutils for gtk_type_is_a

	* bonobo/gnome-embeddable.c (gnome_embeddable_get_uri): Return NULL
	on preconditions. (impl_GNOME_Embeddable_set_uri): remove const.

	* bonobo/gnome-embeddable.h (GNOME_VIEW_FACTORY): Add helper macro.

	* bonobo/gnome-view.h (GNOME_VIEW_VERB_FUNC): Add helper macro.

	* samples/sample-container.c: Considerably simplify by moving
	all redundant gpointer data casts into the function prototype.

	* samples/paint-component-simple.c (view_size_allocate_cb): 
	ditto: s/gpointer data/embeddable_data_t *embeddable_data/ &
	s/gpointer data/view_data_t *view_data/. Saving scads of lines.
	(view_factory, view_create_menus): Add function cast macros.

1999-09-01  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-embeddable.h: host_name_changed signature now
	includes the new name.
	new uri_changed signal

	* bonobo/gnome-embeddable.c (gnome_embeddable_destroy): Release
	the uri if we have one.
	(gnome_embeddable_set_uri): New method.
	(gnome_embeddable_get_uri): New method.
	(gnome_embeddable_corba_class_init): Use this method instead of
	the static initialization scheme.

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_activate_uri):
	Emit the "activate_uri" signal here.
	(init_view_frame_corba_class): Implement the activate_uri. 
	
	* idl/gnome-embeddable.idl (GNOME::ViewFrame): new method:
	activate_uri
	(GNOME::Embeddable): new method: set_uri.
	
	* bonobo/gnome-view-frame.c  

	* bonobo/gnome-view-frame.h (GnomeViewFrame): Added private field
	for future growth.

	* bonobo/gnome-ui-handler.h (GnomeUIHandler): Added private field
	for future growth.

	* bonobo/gnome-stream-memory.h (GnomeStreamMem): Added private
	field for future growth.

	* bonobo/gnome-storage.h (GnomeStorage): Added private field for
	future growth.

	* bonobo/gnome-simple-source.h (GnomeSimpleDataSource):  Added
	private field for future growth.

	* bonobo/gnome-progressive.h (GnomeProgressiveDataSink): Added
	private field for future growth.

	* bonobo/gnome-persist.h (GnomePersist): Added private field for
	future growth.

	* bonobo/gnome-persist-stream.h (GnomePersistStream); Added
	private field for future growth.

	* bonobo/gnome-persist-file.h (GnomePersistFile): Added private
	field for future growth.

	* bonobo/gnome-moniker.h (GnomeMoniker): Added private field for
	future growth.

	* bonobo/gnome-embeddable-factory.h (GnomeEmbeddableFactory):
	Added private field for future growth.

	* bonobo/gnome-container.h (GnomeContainer): Added private field
	for future growth.

	* bonobo/gnome-client-site.h (GnomeClientSite): Added private
	field for future growth.

	* bonobo/gnome-view.h (GnomeView): Added private field
	for future growth.

	* bonobo/gnome-embeddable.h (GnomeEmbeddable): Added private field
	for future growth.

1999-08-30  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-bonobo-selector.c (select_row): Transparent handler
	except for double clicks.
	(gnome_bonobo_selector_init): Add double click support.

1999-08-29  Michael Meeks  <michael@imaginator.com>

	* components/text-plain/bonobo-text-plain.c (bonobo_object_destroy_cb):
	Same bug fixed again.

1999-08-29  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-view.c (plug_destroy_cb): Added debug.
	(gnome_view_destroy): Set plug to NULL: paranoid.

	* bonobo/gnome-container.c (gnome_container_destroy): Fix
	nasty bug using freed GList pointer.

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): ditto.

1999-08-29  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-embeddable.c (gnome_embeddable_destroy): Fix
	nasty bug using freed GList pointer.

1999-08-29  Nat Friedman  <nat@gnome-support.com>

	* samples/sample-container.c (component_view_set_size): New
 	function to abstract away the container-side size setting.
	(component_request_resize_cb): New function to handle component
 	size change requests.
	(component_add_view): Connect to the "resize_request" signal.

	* bonobo/gnome-view.c (gnome_view_request_resize): New method.

	* bonobo/gnome-bonobo-widget.c: More work.

	* samples/sample-container.c (container_add_embeddable_cmd):
 	Ignore NULL goad ids.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_set_app): Set the
 	UIHandler's global accelgroup to the GnomeApp's accelgroup if it's
 	not already set.

1999-08-28  Ettore Perazzoli  <ettore@comm2000.it>

	* bonobo/gnome-view-frame.c: Make `gnome_view_frame_epv' and
	`gnome_view_frame_vepv' extern.
	* bonobo/gnome-view-frame.h: Declare them here.

	* bonobo/gnome-view.c: Make `gnome_view_epv' and `gnome_view_vepv'
	extern.
	* bonobo/gnome-view.h: Declare them here.

1999-08-27  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-object.c (gnome_object_destroy): Move use of pointer
	to after pre-condition.

1999-08-24  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-bonobo-widget.c: Just a start.  Written during
 	Miguel's O'Reilly talk, as he described this widget on stage.

	* samples/sample-container.c (component_add_view): Perform the
 	size negotiation here, manually.

	* components/audio-ulaw/bonobo-audio-ulaw.c (embeddable_factory):
 	Use gnome_object_unref, not gtk_object_unref.
	(embeddable_factory): Cast the embeddable to GNOME_OBJECT, not
 	GTK_OBJECT.

	* bonobo/gnome-ui-handler.c (menu_copy_item): Use the COPY_STRING
 	macro instead of g_strdup() so we can copy NULL strings.
	(toolbar_toplevel_remove_item): Add a g_return_if_fail here to
 	check if the specified toolbar item exists.
	(toolbar_uiinfo_type_to_uih): Updated to print some more warning
 	messages.

	* bonobo/gnome-main.c (bonobo_init): Ignore SIGPIPE.  Please see
 	the in-line comment for an explanation.

	* bonobo/gnome-embeddable.c (gnome_embeddable_view_destroy_cb):
 	Re-enable gnome_unknown_ping.

	* bonobo/gnome-client-site.c (gnome_client_site_new_view): Remove
 	the automatic size_request proxying.

1999-08-22  Nat Friedman  <nat@gnome-support.com>

	* components/audio-ulaw/bonobo-audio-ulaw.c: Updated to use
 	gnome_object_add_interface.

1999-08-23  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (toolbar_remote_create_item): remove
	redundant GNOME_UIHandler uih_corba.
	(gnome_ui_handler_toolbar_add_one): remove in call.
	(toolbar_uiinfo_type_to_uih): added.
	(toolbar_local_remove_parent_entry, toolbar_local_add_parent_entry): 
	Add failure cases snarfed from menus.
	(toolbar_toplevel_item_remove_parent_entry): add failure return.
	(toolbar_toplevel_item_add_parent_entry): add null internal return.
	(toolbar_toplevel_item_create_widgets): add preconditions.

	* bonobo/gnome-ui-hander.c: Make toolbar API more similar to menu API
	( removed probably redundant GnomeUIHandlerToolbar argument ).

1999-08-23  Elliot Lee  <sopwith@redhat.com>
	* bonobo/gnome-bonobo-selector.c: Fix this aweful, ugly, totally messed up hack
	of a bonobo component directory to build with gcc 2.95.
	* bonobo/gnome-component-directory.h: Point out that we have a workable solution
	here for a component directory.

1999-08-23  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_toolbar_free_[one, list, tree]):
	Stubbed.
	(gnome_ui_handler_toolbar_parse_uiinfo_[one, list, tree]_with_data): Stubbed.
	(gnome_ui_handler_toolbar_free_[one, list, tree]): Stubbed.
	Added warning to unimplemented stubs.

1999-08-23  Elliot Lee  <sopwith@redhat.com>

	* Makefile.am: Put bonoboConf.sh in CLEANFILES.

1999-08-23  Miguel de Icaza  <miguel@gnu.org>

	* samples/sample-container.c (component_load_pf_ok_cb): Strdup the filename.
	(component_load_pf_ok_cb): unref queried interface.
	(component_load_ps_ok_cb): unref queried interface.
	(gnome_object_has_interface): unref queried interface.

	* bonobo/test-container-autoload.c (main): Activate bonobo.

	* bonobo/gnome-persist-file.c (create_gnome_persist_file):
	Initialize the ev;

	* bonobo/gnome-client-site.c (gnome_client_site_bind_embeddable):
	Unref the object we query interfaced.

1999-08-22  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-client-site.c (
	* samples/sample-container.c (component_load_pf_ok_cb): Bug fix:
	duplicate the string before destroying its container. 
	(component_load_pf_ok_cb): Do not invoke method if previous
	operation failed.

	It would be useful if GTK+ followed the const return convention. 

1999-08-22  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-inplace.idl: Removed.
	* bonobo/gnome-inplace-component.c: Likewise.
	* bonobo/gnome-inplace-component.h: Likewise.
	* bonobo/gnome-inplace-site.c: Likewise.
	* bonobo/gnome-inplace-site.h: Likewise.
	* bonobo/gtk-interfaces.c: Likewise.
	* bonobo/gtk-interfaces.h: Likewise.
	
	* samples/sample-container.c (component_add_view): Use
 	gnome_client_site_new_view.
	(component_create_fs): New function to create a file selection
 	dialog.
	(component_load_pf_ok_cb): Callback for when the user hits 'ok' on
 	a PersistFile loading dialog.
	(component_load_pf_cb): Use component_create_fs.
	(component_load_ps_cb): Likewise.
	(component_destroy_cb): Unref the remote object and destroy the
 	widget.  Probably I should destroy the local objects too.

	* samples/paint-component-simple.c (main): Updated to reflect the
 	new bonobo_main system.

	* idl/gnome-embeddable.idl (GNOME::Embeddable): Removed some stale
 	verb documentation.

	* doc/debugging.txt: Fixed some typos.

	* bonobo/gnome-object-client.h (GnomeObjectClient): Removed the
 	view_frames member variable from this.  Ugh.

	* bonobo/gnome-main.c (bonobo_orb): New function.  This used to be
 	a macro.
	(bonobo_poa): Likewise.
	(bonobo_poa_manager): Likewise.
	(bonobo_main): New function.  Activated the POA manager and then
 	runs the main event loop.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view):
 	Deconstified function declaration to avoid a warning.

	* bonobo/gnome-container.c (gnome_container_destroy): Destroy all
 	child GnomeClientSites.
	(gnome_container_client_site_destroy_cb): New function.  Removed a
 	ClientSite from the internal list when it is destroyed.
	(gnome_container_add): Connect to the destroy signal on the client
 	site so that we can remove it from our internal list when it dies.

	* bonobo/gnome-client-site.h (GnomeClientSite): Added a
 	view_frames list here.  Removed compatibility macros.

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): Destroy
 	the view frames.  Use gnome_object_unref to unref a GnomeObject,
 	not gtk_object_unref.
	(destroy_view_frame): Reflect the fact that the view frame list is
 	now stored in the client site.
	(gnome_client_site_new_view): Likewise.

	* bonobo/gnome-bonobo-selector.h: Formatted.

	* bonobo/gnome-bonobo-selector.c: File updated to use the correct
 	indentation style.  Please, if you commit to Bonobo, follow the
 	GNOME Programming guidelines.
	(gnome_bonobo_selector_get_type): Documented.
	(gnome_bonobo_selector_new): Documented.
	(gnome_bonobo_selector_get_selected_goad_id): Documented.
	(gnome_bonobo_selector_select_goad_id): Documented.
	(gnome_bonobo_selector_select_activate): Removed.  It is not the
 	job of the selector to perform server activation.  Furthermore,
 	the API was broken and did not return a reference to the
 	newly-created server.
	(gnome_bonobo_selector_activate_selected): Likewise.
	(close_callback): Removed stale code.

	* bonobo/gnome-object.h (GnomeObject): Removed the per-object
 	CORBA_Environment, as it can lead to re-entrancy problems.  Now
 	you must create your own local CORBA_Environment whenever you need
 	one.
	(GNOME_OBJECT_EV): Removed.

	* bonobo/gnome-bind-context.c: Updated to reflect the fact that we
 	no longer have a per-object CORBA_Environment.
		
	* bonobo/gnome-view.c): Likewise.

	* bonobo/gnome-view-frame.c: Likewise.

	* bonobo/gnome-ui-handler.c: Likewise.

	* bonobo/gnome-stream-memory.c: Likewise.

	* bonobo/gnome-stream-fs.c: Likewise.

	* bonobo/gnome-simple-source.c: Likewise.

	* bonobo/gnome-progressive.c: Likewise.

	* bonobo/gnome-persist-stream.c: Likewise.

	* bonobo/gnome-persist-file.c: Likewise.

	* bonobo/gnome-object-client.c: Likewise.

	* bonobo/gnome-embeddable.c: Likewise.

	* bonobo/gnome-embeddable-factory.c: Likewise.

	* bonobo/gnome-container.c: Likewise.

	* bonobo/gnome-bonobo-selector.c: Likewise.

1999-08-22  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-embeddable-factory.c
	(gnome_embeddable_factory_construct): Use gnome_object_unref
	instead of gtk_object_unref.
	(gnome_embeddable_factory_finalize): rename destroy to finalize.
	Make this unregister from the name server.
	(gnome_embeddable_factory_construct): remember the goad-id we
	register to unregister at finalize time.

1999-08-22  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-view-frame.h: Add gnome_view_frame_set_zoom_factor
	prototype.

	* bonobo/gnome-view-frame.c (gnome_view_frame_set_zoom_factor):
	slight omission fixed.

1999-08-22  Nat Friedman  <nat@gnome-support.com>

	* samples/sample-container.c (component_load_cancel_cb): Callback
 	for the file selector 'cancel' button.  Kills the file selector.
	(component_load_ps_ok_cb): Callback for the PersistStream file
 	selector 'ok' button.  Tries to load a file into a component using
 	the GNOME::PersistStream interface.
	(component_load_ps_cb): Create a file selector and connect the
 	above callback functions to the Ok/Cancel buttons.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_do_popup_menu): Hook
 	up to the "deactivate" signal on the popup menu so that we pop a
 	frame off the gtk main stack when the popup is destroyed.
	(menu_toplevel_popup_deactivated): Callback to handle popup
 	disappearance.

	* bonobo/gnome-view-frame.c (gnome_view_frame_popup_verbs): Use
 	gnome_object_unref to destroy the popup menu.

	* bonobo/gnome-view.c (gnome_view_destroy): Don't g_free the keys
 	when we destroy the verb closures.

1999-08-22  Peter Wainwright  <prw@wainpr.demon.co.uk>

	* bonobo/gnome-main.c (bonobo_activate): New function to perform
 	the actual POA manager activation.
	(bonobo_init): Reomved POA manager activation from here.
	
1999-08-19  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view.c (impl_GNOME_View_set_zoom_factor):
	Implemente method.

1999-08-20  Nat Friedman  <nat@gnome-support.com>

	* samples/sample-container.c: Sample container.  New file.

	* samples/paint-component-simple.c (view_update): Update the
 	correct dimensions.
	(view_factory): Removed the set_usize.  We do proper size
 	negotiation now.
	(view_factory): Connect to system_exception.

	* bonobo/gnome-view.c (gnome_view_class_init): Use the correct
 	marshaler for size_query.

	* bonobo/gnome-view-frame.c: Added the user_context signal.
	(gnome_view_frame_wrapper_button_press_cb): Emit user_context if
 	it was a right click.
	(gnome_view_frame_popup_verbs): New convenience function to do the
 	verb popup for you.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_get_verb_list):
 	Setup the verb list properly.
	(gnome_embeddable_view_destroy_cb): Temporarily disable ping.

	* bonobo/gnome-client-site.c (gnome_client_site_get_embeddable):
 	New function to return the object to which the client site is
 	bound.
	(size_request): New callback function to proxy size request on
 	the view frame.
	(gnome_client_site_new_view): Hookup the size_request callback.

1999-08-19  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object-client.c (gnome_object_client_from_corba):
	New function.

	* doc/api/tmpl/gnome-client-site.smgl: Documented.  

	* doc/api/tmpl/gnome-wrapper.sgml: Documented.
	
1999-08-18  Miguel de Icaza  <miguel@gnu.org>

	* doc/api/tmpl/gnome-object.sgml: Wrote the gnome-object
	documentation. 

1999-08-19  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.c (gnome_view_destroy_remove_verb): A new
 	helper function to free verbs when a view is destroyed.
	(gnome_view_destroy): Free the verbs.
	(init_view_corba_class): size_query, not size_request.

	* bonobo/gnome-view-frame.c (gnome_view_frame_size_request): Call
 	GNOME_View_size_query.

	* bonobo/gnome-container.c (gnome_container_construct): Return a
 	GnomeContainer.
	(gnome_container_new): Likewise.

	* samples/paint-component-simple.c: Removed the global CORBA_ORB
 	and CORBA_Environment.

1999-08-20  Michael Meeks  <michael@imaginator.com>

	* doc/debugging.txt: Even more advice from Nat.

1999-08-19  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.h (GnomeView): Added the GnomeUIHandler field.

	* bonobo/gnome-view.c (impl_GNOME_View_reactivate_and_undo):
 	Removed CORBA_boolean argument.
	(plug_destroy_cb): Cleaned this function up.
	(impl_GNOME_View_size_query): Use -1,-1 as the default, not
 	10,10!
	(gnome_view_destroy): Disconnect from the plug destroy signal when
 	we kill the plug.
	(gnome_view_class_init): Add the "size_query" signal.  Changed from
	"size_request" to "size_query" to avoid conflicting.
	(gnome_view_set_ui_handler): New function.  Components can use
 	this to keep track of the GnomeUIHandler for this view.
	(gnome_view_get_ui_handler): New function.
	(gnome_view_get_remote_ui_handler): The old
 	gnome_view_get_ui_handler was renamed to this.

	* bonobo/gnome-ui-handler.c (uih_toplevel_unregister_containee):
 	Sort the removal list in descending order of path length to ensure
	that children appear before their parents in the list.
 	(menu_toplevel_prune_compare_function): New function to help sort
 	the removal list.
	(menu_local_remove_item): Store the new list in the hash table if
 	there are still local items matching this path.
	(menu_toplevel_remove_item_internal): Don't try to remove the
 	widgets of a radiogroup.
	(toolbar_free_data): New function.
	(toolbar_free): Likewise.
	(toolbar_toplevel_get_item_for_containee): Likewise.
	(toolbar_toplevel_item_is_head): Likewise.
	(gnome_ui_handler_toolbar_new_separator): Likewise.
	(gnome_ui_handler_toolbar_new_radiogroup): Likewise.
	(gnome_ui_handler_toolbar_new_radioitem): Likewise.
	(gnome_ui_handler_toolbar_new_toggleitem): Likewise.
	(toolbar_local_remove_item): Likewise.
	(toolbar_toplevel_item_reinstate_notify): Likewise.
	(impl_toolbar_reinstated): Likewise.
	(toolbar_toplevel_item_remove_notify): Likewise.
	(impl_toolbar_removed): Likewise.
	(toolbar_toplevel_item_remove_data): Likewise.
	(toolbar_toplevel_remove_item_internal): Likewise.
	(toolbar_toplevel_remove_item): Likewise.
	(toolbar_remote_remove_item): Likewise.
	(impl_toolbar_remove_item): Likewise.

	* bonobo/gnome-object.h (GnomeObjectClass): Removed
 	user_exception.

	* bonobo/gnome-object.c: Removed USER_EXCEPTION.
	(gnome_object_check_env): Better documentation.

	* bonobo/gnome-main.c (bonobo_x_error_handler): Ignore BadWindow
 	and BadDrawable.

	* bonobo/gnome-embeddable.c (gnome_embeddable_view_destroy_cb):
 	New function.  When all views are destroyed, this function pings
 	the remote GnomeClientSite to see if it is still alive.  If it
 	isn't, this object self-destructs.  Pinging seems to be
 	non-functional at the moment, however.
	(impl_GNOME_Embeddable_new_view): Connect to the "destroy" signal
 	on the new view.
	(gnome_embeddable_destroy): Destroy all the embeddable's views.
  	Properly free the verbs.

1999-08-20  Michael Meeks  <michael@imaginator.com>

	* doc/debugging.txt: Added some advice on debugging components.

1999-08-19  Michael Meeks  <michael@imaginator.com>

	* doc/storage.txt: Re-hash: downgrade librepro, mention libefs.

	* README: typo.

	* README-gdk-patch: kill duplicate line & typo.

	* doc/Bonobo.sgml: re-phrasing in places.

	* doc/interfaces.txt: typos.
	
1999-08-18  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* doc/api/bonobo.types: Updated to reflect the new data types.

	* doc/Makefile.am: Added

	* bonobo/gnome-view-frame.c (gnome_view_frame_view_activate):
	added error checking.
	(gnome_view_frame_view_deactivate): ditto.
	(gnome_view_frame_view_do_verb): ditto.
	(gnome_view_frame_size_request): ditto.

	* bonobo/gnome-ui-handler.c (gnome_ui_handler_unset_container):
	Free exception for all cases.
	(gnome_ui_handler_set_container): Added gnome_object_check_enving.
	(gnome_ui_handler_unset_container): ditto.
	(uih_remote_unregister_containee): ditto.
	(menu_toplevel_item_activated): ditto
	(menu_toplevel_override_notify): ditto
	(menu_remote_create_item): ditto
	(menu_toplevel_remove_notify): ditto
	(menu_toplevel_reinstate_notify): ditto
	(menu_remote_remove_item): ditto
	(menu_remote_fetch): ditto
	(menu_remote_get_children): ditto
	(menu_remote_get_pos): ditto
	(menu_remote_set_sensitivity): ditto
	(menu_remote_get_sensitivity): ditto
	(menu_remote_set_label): ditto
	(menu_remote_get_label): ditto
	(menu_remote_get_hint): ditto
	(menu_remote_set_hint): ditto.
	(menu_remote_set_pixmap): ditto.
	(menu_remote_set_accel): ditto.
	(menu_remote_get_accel): ditto.
	(menu_remote_set_toggle_state): ditto
	(menu_remote_get_toggle_state): ditto.
	(toolbar_toplevel_toolbar_override_notify_recursive): ditto.
	(toolbar_remote_toolbar_create): ditto.
	(toolbar_remote_toolbar_remove): ditto
	(toolbar_toplevel_item_override_notify): ditto.
	(toolbar_remote_create_item): ditto.

	* bonobo/gnome-object.c (gnome_object_check_env): Change to the
	new signature.
	(gnome_unknown_ping): New method.

	* bonobo/gnome-view.c (impl_GNOME_View_size_request): Implement
	size_request method.

	* bonobo/gnome-view.c (gnome_view_class_init): Added new signal
	view_undo_last_operation.   
	(impl_GNOME_View_reactivate_and_undo): New method implementation.
	Emit activate followed by view_undo_last_operation.

	* idl/gnome-embeddable.idl: Added reactivate_and_undo to the GNOME::View.

	* idl/Makefile.am (idl_DATA): gnome-inplace.idl has been dropped
	in favor of the GNOME::View interfaces.

	* idl/gnome-embeddable.idl: Added deactivate_and_undo to the
	GNOME::ViewFrame. 
	Added request_resize to the GNOME::ViewFrame.
	(ViewFrame): add size_request method.
	
	* bonobo/gnome-client-site.c (gnome_client_site_new_view): Check
	errors.  Pass view_frame to enable error signal emission.
	(gnome_client_site_get_verbs): Removed free of list in this case.
	If we got an exception, there is probably no information here.
	(gnome_client_site_get_verbs): added error checking.

1999-08-18  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.c (gnome_view_new): Call bonobo_setup_x_error_handler.

	* bonobo/gnome-main.c (bonobo_x_error_handler): New function to
 	handle X errors in bonobo.
	(bonobo_setup_x_error_handler): New function to setup the X error
 	handler.

	* bonobo/gnome-object.h: Added prototype for gnome_object_destroy.

	* bonobo/gnome-view.c (gnome_view_get_embeddable): Use
 	g_return_val_if_fail.
	(impl_GNOME_View_set_window): Connect to the destroy_event signal
 	when creating the plug.
	(plug_destroy_cb): New function to handle unexpected plug
 	destruction.  Please also see README-gdk-patch.

	* bonobo/gnome-view.h (GnomeView): Added plug_destroy_id.

1999-08-18  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_destroy): Implement
 	gnome_object_destroy

1998-08-11 Michael Meeks <michael@imagiantor.com>

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_create): kill 'full'
	(gnome_stream_fs_class_init): Add close, eos, length
	(fs_close, fs_eos): Stubbed,
	(fs_length): Implemented

	* bonobo/test-container.c: Hacked to include pdf bits.

1999-08-17  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-object-client.c (gnome_object_restore_from_url):
 	Set persist to NULL if an exception occurs in query_interface.
  	Thanks to Peter Wainwright <prw@wainpr.demon.co.uk> for spotting
 	this!

	* bonobo/gnome-view.h (GnomeView): Added an 'embeddable' field.

	* bonobo/gnome-view.c (gnome_view_set_embeddable): New function.
	(gnome_view_get_embeddable): Likewise.

	* bonobo/gnome-embeddable.h (GnomeEmbeddable): Added a views field
 	here to maintain a list of an embeddable's views.

	* bonobo/gnome-embeddable.c (impl_GNOME_Embeddable_new_view): Grow
 	the embeddable's view list and set the view's embeddable.

	(gnome_embeddable_corba_object_create): New
 	function. create_gnome_embeddable renamed to this and made public
 	so that derived objects which export no new CORBA functionality
 	can be created.

1999-08-16  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-storage.c (load_storage_driver): Change
	driver_open_t to gpointer to make glib happy.
	Add 'const' to scads of CORBA_char *path things to make
	compile clean.

1999-08-16  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-stream-fs.c (fs_seek): Update to
	new seek type.

	* bonobo/gnome-stream-memory.c (mem_seek): ditto.

	* storage-modules/gnome-stream-efs.c (real_seek): ditto.

	* idl/gnome-storage.idl: Added enum SeekType and
	updated 'seek'

1999-08-14  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-stream-fs.c (fs_eos): Implemented.
	(fs_close): Implemented.

1999-08-14  Michael Meeks  <michael@imaginator.com>

	* components/image-x-png/bonobo-image-x-png.c (bonobo_object_factory):
	Remove unused variable.

1999-08-13  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.h (GnomeObjectClass): Added "user_exception"
	and "system_exception" signals.
	(gnome_object_check_env, GNOME_OBJECT_CHECK): function and utility
	macro for testing exceptions.

1999-08-12  Michael Meeks  <michael@imaginator.com>

	* bonobo/gnome-stream-fs.c (gnome_stream_create): Killed 'full'
	(gnome_stream_fs_class_init): Added close, eos, length
	(fs_close, fs_eos): Stubbed,
	(fs_length): Implemented.

	* bonobo/test-container.c (add_pdf_cmd): Implemented.

1999-08-11  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_ui_handler):
	If no UI Handler is there, return CORBA_OBJECT_NIL.

	* components/text-plain/bonobo-text-plain.c (create_view_menus):
	Handle the case of no UI Handler available.

1999-08-10  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-container.c (gnome_container_class_init): Set the
	function offset to zero, to not execute our default handler ever.
	(gnome_container_class_init): remove default_get_object from
	here. 

	* bonobo/gnome-object-client.c (parse_moniker_string): Do not
	create an empty item moniker if the string is empty here.

1999-08-10  Federico Mena Quintero  <federico@redhat.com>

	* doc/Bonobo.sgml: Made it valid DocBook.  Spell-checked it.
	Someone should fix the grammatical errors.

1999-08-09  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-ui-handler.c: Fixed numerous menu bugs.  Wrote half
 	of the toolbar routines.

	* bonobo/gnome-moniker.h: Include bonobo/bonobo.h

	* bonobo/gnome-container.c (gnome_container_class_init): Use
 	GTK_RETLOC_BOOL instead of GTK_RETLOC_POINTER.

1999-08-09  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_add_interface): Fix
	preconditions here.
	(gnome_object_instance_init): refernece count is initially 1.

1999-08-07  Miguel de Icaza <miguel@gnu.org>

	* bonobo/Makefile.am: Kill -Wstrict-prototypes.  

	If you feel like today is a good day to add a warning to the
	Makefile.am do *PUT* a ChangeLog entry.  And no, it was not
	correct. 

1999-08-08  Jaka Mocnik  <jaka.mocnik@kiss.uni-lj.si>

	* bonobo/gnome-moniker-client.[ch]: added some #includes to
	make them compile.

1999-08-06  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object-client.c (gnome_object_activate): Use
	"moniker_url:" instead of "moniker:"

	* bonobo/gnome-moniker.c: new implementation of this file.
	Simple creation of monikers and rendering them as strings.

1999-08-03  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object.c (gnome_object_destroy): Do not release the
	aggregate information here. 
	(gnome_object_init): Catch "destroy" signal and abort if a member
	of an aggregate object is destroyed.
	(gnome_object_unref): 
	(gnome_object_ref, gnome_object_unref): New methods to do
	ref/unref from the Gtk level.  They encapsulate the life-time of a
	GnomeObject and any aggregates of it.

	* doc/Bonobo.sgml: Layed out the rules for query_interface,
	documented the fact that you have to fully assemble your object
	before using as discussed today with Federico.

	* bonobo/gnome-object.c: Added a refcount to the AggregateObject.
	(gnome_object_construct): GnomeObjects are all sinked at startup.

	* bonobo/gnome-object-client.c (gnome_object_activate): Simplistic
	file,item moniker implementation.  
	(gnome_object_restore_from_url): New routine for implementing
	moniker loading from an url.  We need an async version of this as
	well.  Probably we need async versions of all of these routines.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): Remove
	double free here.

1999-07-31  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/test-storage.c (main): Improved error checking;  Use a
	named file on the command line.

	* storage-modules/gnome-storage-fs.c (gnome_storage_fs_open): Use
	storage flags here too.

	* storage-modules/gnome-storage-efs.c (gnome_storage_driver_open):
	Use storage flags here.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_open): Does not longer
	take a GnomeStorageFS as an argument.

	* bonobo/gnome-storage.c (gnome_storage_open): New function for
	opening storages, uses a driver argument.
	
	* storage-modules/gnome-storage-efs.c (gnome_storage_driver_open):
	Added shared library entry point.

	* storage-modules/gnome-storage-fs.c: Killed
	gnome_storage_fs_create.
	(gnome_storage_fs_open): Made this routine take the same arguments
	as open(2).
	(gnome_storage_driver_open): Added shared library entry point.

	* components/text-plain/Makefile.am (bonobo_text_plain_LDADD):
	Kill references to efs.

	* components/image-x-png/Makefile.am (bonobo_image_x_png_LDADD):
	Kill references to efs.

	* components/audio-ulaw/Makefile.am (bonobo_audio_ulaw_LDADD):
	Kill references to efs.

	* bonobo/Makefile.am: remove references to moved files and to efs.
	
	* storage-modules: New directory that holds the storage modules.
	Moved bonobo/gnome-{storage,stream}-{fs,efs}.[ch] here. 

1999-07-30  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-item-moniker.c: Implemented bind operation here.

	* idl/gnome-container.idl: Eliminated the ItemContainer interface.
	And put everything into the Container interface.  There is little
	need for all of those other interfaces.

1999-07-29  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-moniker.c (gnome_moniker_create_corba_object):
	Export this CORBA creation routine, as it is used all over the
	place verbatim.

	* bonobo/gnome-item-moniker.c: Started implementing.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_destroy): Chain
	to parent destructor.

1999-07-29  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* configure.in (ALL_LINGUAS): Added es to the list of languages.

	* components/image-x-png/Makefile.am (bonobo_image_x_png_LDADD):
	Reference libefs in a libtool-happy fashion.

	* components/text-plain/Makefile.am (bonobo_text_plain_LDADD): Likewise.

	* components/audio-ulaw/Makefile.am (bonobo_audio_ulaw_LDADD): Likewise.

1999-07-29  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-ui-handler.c: Use CORBA_Object_duplicate and
 	CORBA_Object_is_equivalent where appropriate, thanks to Elliot's
 	suggestion.

	* components/text-plain/bonobo-text-plain.c
 	(bonobo_object_factory): Use gnome_object_add_interface instead of
 	gtk_object_add_interface.

July 29, 1999 Elliot Lee <sopwith@redhat.com>
	* bonobo/gnome-view-frame.c: CORBA_Object_duplicate() the containee we add.

July 28, 1999 Elliot Lee <sopwith@redhat.com>
	Include libefs as a virtual module.

Wed Jul 28 13:34:13 1999  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>
	
	* configure.in: added checks for libefs.
	* bonobo/gnome-storage-repo.[ch]: Removed.
	* bonobo/gnome-stream-repo.[ch]: Removed.
	* bonobo/test-storage.c: New File.
	* bonobo/gnome-storage-efs.[ch]: New File.
	* bonobo/gnome-stream-efs.[ch]: New File.

	Removed obsolete librepo files and added files for libefs (you
	need libefs to compile bonobo).
	
1999-07-24  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c: Removed obsolete verb
 	code.

	* bonobo/gnome-ui-handler.c: Continued work.
	
	* bonobo/gnome-moniker.c (gnome_moniker_construct): Fixed the call
 	to gnome_persist_stream_construct so that the arguments are in the
 	right order.

	* bonobo/gnome-file-moniker.c: Added description to top of file.
	Include gnome-moniker-client.h
	(gnome_file_moniker_bind): Added const to the bind options parameter.

	* bonobo/gnome-embeddable.c: Added comment to top of file.

	* bonobo/gnome-embeddable-factory.c: Added description to top of
 	file.
	(gnome_embeddable_signals): Removed irrelevant cut-n-paste signal code.

	* bonobo/gnome-embeddable-client.c: Added description to top of
 	file.

	* bonobo/gnome-container.c: Added description to top of file.
	(impl_enum_objects): Cast client_site->bound_object to GNOME_OBJECT.

	* bonobo/gnome-client-site.c: Added descrption to top of file.
	(impl_GNOME_client_site_get_moniker): Pass ev, not &ev.

	* bonobo/gnome-bonobo.h: Include gnome-ui-handler.h.

	* bonobo/gnome-bind-context.c: Include bonobo/bonobo.h.

1999-07-21  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-item-container.c: New file.  Implements the
	GnomeItemContainer.

	* bonobo/gnome-container.c (impl_enum_objects): Implemented object
	enumeration in GnomeContainer.

1999-07-20  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-moniker-client.c (gnome_moniker_unregister,
	gnome_moniker_register, gnome_moniker_find_in_naming_service): New
	file.  Implement the file moniker registration/unregistration in
	the name server.

	Moved the finding-in-name-service routine here.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): Use the
	goad id from the GnomePersist object.
	(gnome_file_moniker_bind): Finished implementing.  And cleaned up.
	(map_file): killed

1999-07-19  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-object-io.c (gnome_persist_stream_load_goad_id,
	gnome_persist_stream_save_goad_id,
	gnome_persiststream_save_to_stream, gnome_object_save_to_stream):
	New file and new functions for Component IO.

	* bonobo/gnome-stream-client.c: New file.
	* bonobo/gnome-persist-stream.c (gnome_persist_stream_construct,
	gnome_persist_stream_new): Now we require a GOAD it to initialize
	the stream.
	(gnome_persist_stream_set_dirty): New function.

	* bonobo/gnome-moniker.c (gnome_moniker_construct): Pass the
	monker_goad_id. 

	* bonobo/gnome-component-io.c (gnome_embeddable_save_to_stream):
	Rename class_id to goad_id.

July 19, 1999, Elliot:
	bonobo/gnome-embeddable-factory.c:
		Remove warning about using params - don't need to use
		them.
	bonobo/gnome-embeddable.h:
		Make the gnome_embeddable_epv be extern.
	bonobo/test-container-autoload.c:
		query_interface doesn't grant a refcount, so don't
		unref the results.

		Use CORBA_Object_is_nil instead of assuming that
		CORBA_OBJECT_NIL == NULL.

July 17, 1999, Elliot:
	bonobo/gnome-embeddable-factory.c:
		Duplicate the returned objref.

Changes July 16, 1999 by Elliot:
	bonobo/*.[ch]:
		Add an emacs indent format line to the top of each file.

Changes July 1[456], 1999 by Elliot:
	bonobo/gnome-main.c: Make it work with CORBA_OBJECT_NIL for all
			     params.

	bonobo/gnome-component-directory: Prototype solution for
		"How do I find a component to handle X" problem.

	doc/Bonobo.sgml: Change GNOME::obj to GNOME::Unknown

	components/image-x-png:
		. Don't need to initialize the 'ev' every time we use it,
		  as long as it is initialized somewhere.
		. Don't need to copy the data that we are writing to a
		  stream.
		. Use gnome_object_add_interface instead of
		  gtk_object_add_interface.
		. Pass CORBA_OBJECT_NIL to bonobo_init instead of NULL
		  (objrefs are totally opaque & non-equivalent).

1999-07-13  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-embeddable.idl (GNOME::ViewFrame): Documented
 	get_client_site.  Added get_ui_handler.

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_ui_handler):
 	New function to implement the new GNOME::ViewFrame.get_ui_handler
 	method.
	(gnome_view_frame_set_ui_handler): New function to set a
 	ViewFrame's GnomeUIHandler object.
	(gnome_view_frame_get_ui_handler): New function to get a
 	ViewFrame's GnomeUIHandler object.

	* bonobo/gnome-ui-handler.c: Massive updates.  Local menu stuff is
 	now functional.  More work to come.

	* bonobo/gnome-moniker.h: Added prototype for gnome_moniker_new.

	* bonobo/gnome-moniker.c (gnome_moniker_new): Cast to GNOME_OBJECT
 	when calling create_gnome_moniker, not GNOME_MONIKER.

	* bonobo/gnome-container.c (gnome_container_get_moniker):
 	Documented.

	* bonobo/gnome-client-site.c (gnome_client_site_new): Fixed up
 	docs.
	(gnome_client_site_bind_embeddable): Renamed
 	gnome_client_site_bind_bonobo_object to this.

	* bonobo/gnome-bind-context.c (gnome_bind_context_new):
 	Documented.
	(gnome_bind_context_get_type): Likewise.

1999-07-11  Raja R Harinath  <harinath@cs.umn.edu>

	* bonobo/gnome-file-moniker.c (MAP_FILE): 
	Define to zero if not already defined.

1999-07-08  Miguel de Icaza  <miguel@gnu.org>

	* components/text-plain/bonobo-text-plain.c
	(bonobo_object_factory): Removed unused initialization.

1999-07-08  Nat Friedman  <nat@gnome-support.com>

	* bonobo/Makefile.am: Don't compile gnome-ui-handler yet.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_construct):
 	Added missing closure argument to gnome_moniker_construct.

	* bonobo/gnome-object.h: Added missing semicolon to end of
 	prototype.

	* idl/gnome-ui-handler.idl (GNOME::UIHandler): Added iobuf
 	typedef.

1999-07-07  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.c (gnome_view_construct): Documented.
	(gnome_view_new): Likewise.
	(gnome_view_get_type): Likewise.

	* bonobo/gnome-view-frame.c (gnome_view_frame_construct):
 	Documented.
	(gnome_view_frame_new): Fixed docs.
	(gnome_view_frame_get_type): Documented.
	(gnome_view_frame_get_wrapper): Likewise.

	* bonobo/gnome-stream.c (gnome_stream_get_type): Documented.

	* bonobo/gnome-stream-memory.c (gnome_stream_mem_get_type):
 	Documented.
	(gnome_stream_mem_create): Likewise.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_create): Fixed up docs.

	* bonobo/gnome-storage.c (gnome_storage_get_type): Documented.
	(gnome_storage_construct): Likewise.

	* bonobo/gnome-progressive.c
 	(gnome_progressive_data_sink_get_type): Documented.
	(gnome_progressive_data_sink_construct): Likewise.
	(gnome_progressive_data_sink_new): Likewise.

	* bonobo/gnome-persist.c (gnome_persist_get_type): Documented.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_get_type):
 	Documented.
	(gnome_persist_stream_construct): Fixed up documentation.
	(gnome_persist_stream_new): Likewise.

	* HACKING: Added a note about using GtkDoc and documenting IDL
 	files.

	* bonobo/gnome-object.c (gnome_object_query_interface): Documented.
	(gnome_object_add_interface): Documented.
	(gnome_object_corba_objref): Documented.
	(gnome_object_get_servant): New function.

	* bonobo/gnome-moniker.h: Added the bind_function_closure field.

	* bonobo/gnome-moniker.c (gnome_moniker_new): New function to create a moniker.
	(impl_bind_to_object): Pass the closure to bind_function.
	(gnome_moniker_construct): Documented.
	(gnome_moniker_get_type): Documented.

	* bonobo/gnome-embeddable-factory.c
 	(gnome_embeddable_factory_construct): Documented.
	(gnome_embeddable_factory_set): Documented.  Fixed to set the
 	callback closure.
	* bonobo/gnome-emeddable-client.c: Reworded inline docs.

1999-07-07  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-stream-fs.c (fs_copy_to): Re-indented this
 	function.
	(gnome_stream_fs_create): Added API documentation for
 	gnome_stream_fs_get_type, gnome_stream_fs_construct,
 	gnome_stream_fs_open, and gnome_stream_fs_create.

	* HACKING: New file.

1999-07-06  Miguel de Icaza  <miguel@gnu.org>

	* More renaming.  We go back to GnomeObject for the
	implementation and we only keep GNOME::Unknown as the interface.

	* Renamed BonoboObject interface to Embeddable.

	* More to come, hold on.

1999-07-05  Elliot Lee <sopwith@redhat.com>

	* bonobo/gnome-component-factory.c
	(impl_GNOME_ComponentFactory_create_object): Use
	gnome_unknown_corba_objref here.  

	Make the code CORBA_Object_duplicate return values from
	implementation functions.
	
	* bonobo/gnome-unknown.h: Revamped the query interface mechanism

	* bonobo/gnome-view-frame.c (impl_GNOME_ViewFrame_get_client_site): ditto.

	* bonobo/gnome-storage.c (impl_create_stream): ditto.
	(impl_open_stream): ditto.
	(impl_create_storage): ditto.
	(impl_open_storage): ditto.

	* bonobo/gnome-object-client.c (gnome_unknown_client_destroy): ditto.

	* bonobo/gnome-bonobo-object.c (impl_GNOME_BonoboObject_new_view): ditto.

	* bonobo/gnome-client-site.c (gnome_client_site_bind_bonobo_object): ditto.
	(impl_GNOME_client_site_get_moniker): ditto.
	(impl_GNOME_client_site_get_container): ditto.

	* bonobo/gnome-component-client.c
	(gnome_bonobo_object_client_new_view): ditto.
	(gnome_bonobo_object_client_get_verbs): ditto.
	(gnome_view_client_do_verb): ditto.


1999-07-06  Elliot Lee  <sopwith@redhat.com>

	* configure.in: s/gnome-object/gnome-unknown/

1999-07-05  Miguel de Icaza  <miguel@gnu.org>

	* components/image-x-png/bonobo-image-x-png.c: Make it use
	GNOME::Unknown as well.
	* components/text-plain/bonobo-text-plain.c (bonobo_object_factory): ditto.

	* idl/*, src/*: Changed from GNOME::obj to GNOME::Unknown. 

1999-06-28  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-ui-handler.h: Removed toolbar IDs.  Fixed some
 	return values.  Added some routines.

	* idl/gnome-ui-handler.idl (GNOME::UIHandler): Added object method
 	prototypes.

	* bonobo/gnome-ui-handler.h: Added sensitivity and hidden fields
 	to the GnomeUIHandlerMenuItem.  Changed return value of a bunch of
 	functions to void.

1999-06-26  Nat Friedman  <nat@gnome-support.com>

	* bonobo/gnome-view.h: Include bonobo/gnome-view-frame.h.
	(GnomeView): Added a field to store the GNOME_ViewFrame for this
 	View.

	* bonobo/gnome-component.c (impl_GNOME_BonoboObject_new_view):
 	Save a handle to the ViewFrame.

1999-06-26  Jaka Mocnik  <jaka.mocnik@kiss.uni-lj.si>

	bonobo/test-container-autoload.c (application_new): set default
	size and resizing policy (makes it behave better with ps component).

1999-06-26  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-persist-file.h: new file.

	* bonobo/gnome-persist-file.c: new file.

1999-06-23  Matt Loper  <matt@gnome-support.com>

	* bonobo/test-container-autoload.c
	(add_object_to_container): Add buttons for each containee, which
	correspond to loading and destruction of that containee. Also
	renamed.
	(gnome_object_has_interface): new function.
	(destroy_embedded_object_cb): new function.  
	(cancel_hydrating_object_from_file_cb): new function.
	(hydrate_object_from_file_cb): renamed.
	(create_persist_file_dialog_cb): renamed.
	Commenting.

1999-06-22  Tomas Ogren  <stric@ing.umu.se>

	* configure.in: Added 'sv' to ALL_LINGUAS

1999-06-22  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-component.idl (GNOME): Moved do_verb to the View.
  	Prefixed all standard bonobo verbs with "bonobo_".
	(GNOME::ViewFrame): Added the view_activated method.
	(GNOME): Fixed a typo in the get_verb_list comment.

	* components/text-plain/bonobo-text-plain.c (view_data_t): Keep
 	track of our View and ViewFrame, and the internal widgets we will
 	need to unref when the View is destroyed.
	(destroy_view): Unref the widgets we're done with and unref our
 	ViewFrame object.
	(bonobo_object_destroy_cb): New function to handle destroying the
 	BonoboObject and all its views.
	(verb_struct): Simple structure to pair verb names with their
 	functions.
	(view_do_verb_cb): This is the do_verb signal handler.  It
 	dispatches to the appropriate verb handling function.
	(verb_bonobo_activate): New function to handle activation.  All it
 	does is tell the container's ViewFrame that we're active.  The
 	ViewFrame will then uncover us so that we can receive X events.
	(view_factory): CORBA_Object_duplicate the ViewFrame interface so
 	that we can hang onto it.  Also save the widgets we need to unref
 	later.
	(create_menu_string): Takes a list of GnomeUIInfos and creates a
 	menu string.  Ignore all this menu stuff for now; it will all
 	change soon.
	(bonobo_object_factory): Connect to the destroy signal for the
 	BonoboObject.  Build a verb list.

	* components/image-x-png/bonobo-image-x-png.c (view_factory): Take
 	the view frame as a parameter.

	* bonobo/test-container.c (view_frame_activated_cb): New function
 	to handle the view_activated signal on the ViewFrame.
	(add_view): Use gnome_bonobo_object_client_new_view_simple now,
 	since it sets up the verb handler for BonoboObject activation.
  	Removed the call to gnome_bonobo_object_client_activate, since we
 	can now do activation properly.

	* bonobo/test-container-autoload.c (add_object_cmd): Use
 	gnome_bonobo_object_client_new_view, since
 	gnome_bonobo_object_new_view changed names.

	* bonobo/sample-server.c (view_factory): Take the ViewFrame as an
 	argument.

	* bonobo/gnome-wrapper.c (gnome_wrapper_realize): Added
 	GDK_BUTTON_PRESS_MASK to the event mask for the wrapper.

	* bonobo/gnome-view.c: Added a DO_VERB signal, since do_verb was
 	moved from the GNOME::BonoboObject to the GNOME::View.
	(gnome_view_construct): Added precondition that corba_view isn't
 	CORBA_OBJECT_NIL.
	(init_view_corba_class): Add do_verb to the epv.
	(gnome_view_class_init): Create a do_verb signal.
	(impl_GNOME_View_do_verb): New function to handle do_verb.

	* bonobo/gnome-view.h: Added do_verb to the GnomeViewClass.

	* bonobo/gnome-simple-source.c
 	(gnome_simple_data_source_construct): Added precondition that
 	corba_ssource isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-progressive.c
 	(gnome_progressive_data_sink_construct): Added precondition that
 	corba_psink isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-persist.c (gnome_persist_construct): Added
 	precondition that corba_persist isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_construct):
 	Added precondition that corba_ps isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-inplace-site.c (gnome_inplace_site_construct):
 	Added preconditions where none were.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_construct):
 	Added precondition that gfm_corba isn't CORBA_OBJECT_NIL.

	* bonobo/gnome-component.c (enum): Removed DO_VERB.
	(impl_GNOME_BonoboObject_do_verb): Removed.
	(impl_GNOME_BonoboObject_new_view): Now takes a GNOME::ViewFrame
 	as a parameter and passes it to the view factory.
	(gnome_bonobo_object_epv): Removed do_verb.
	(gnome_bonobo_object_class_init): Removed DO_VERB signal.

	* bonobo/gnome-component.h: Removed do_verb signal handler pointer
 	from GnomeBonoboObjectClass.  Updated prototypes to reflect the
 	changes described above.

	* bonobo/gnome-component-client.c
 	(gnome_bonobo_object_client_new_view): Renamed from
 	gnome_bonobo_object_new_view, since it is not a method on a
 	GNOME::BonoboObject, but a helper function that the client uses.
	(gnome_bonobo_object_client_new_view_simple): Likewise.
	(gnome_bonobo_object_client_get_verbs): Likewise.
	(gnome_bonobo_object_client_free_verbs): Likewise.
	(gnome_view_client_do_verb): Likewise.
	(gnome_bonobo_object_client_new_view_simple): Connect to the
 	button_pres_event on the ViewFrame, not the server object.
	(gnome_view_client_do_verb): Now acts on a View, not a
 	BonoboObject.
	(wrapper_button_press_cb): Activate the view corresponding to this
 	wrapper when we get a double click.

	* bonobo/gnome-component-client.h: Include bonobo/gnome-view.h.
  	Updated function prototypes to reflect changes described above.

1999-06-22  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-component-factory.c: Rename BonoboObjectFactory to
	ComponentFactory, and make it useful to _anyone_ that wants
	convenience functions for implementing/exposing a factory that
	creates components.
	(gnome_component_factory_new_bonobo_object): Removed `name', as
	there's no use for create_path anymore.

	* bonobo/gnome-component-factory.h: likewise. Remove path from
	GnomeComponentFactoryFn.

	* bonobo/sample-server.c (bonobo_object_factory): Changed to
	return a GnomeObject.
	(init_server_factory): Changed to make a GnomeComponentFactory.

	* components/text-plain/bonobo-text-plain.c
	(bonobo_object_factory): Return GnomeObject.
	(init_bonobo_text_plain_factory): Call
	gnome_component_factory_new, as per name change.

	* components/image-x-png/bonobo-image-x-png.c
	(bonobo_object_factory): Return GnomeObject.
	(init_bonobo_image_x_png_factory): Call
	gnome_component_factory_new, as per name change.

	* components/audio-ulaw/bonobo-audio-ulaw.c (component_factory):
	No need for path. Return GnomeObject.
	(init_bonobo_audio_ulaw_factory): call
	gnome_component_factory_new, as per name change.	

	* bonobo/gnome-dot.h: old file removed.
	
1999-06-14  Jaka Mocnik  <jaka.mocnik@kiss.uni-lj.si>

	* bonobo/bonobo-stream-fs.c (fs_copy_to): implemented.
	(gnome_stream_fs_open): always g_free(full).

1999-06-13  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* doc/Bonobo.sgml: fixed typo ("funtion") in ref()/unref() section

1999-06-12  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-component.c
	(impl_GNOME_BonoboObject_set_client_site): Duplicate reference here.
	(impl_GNOME_BonoboObject_get_client_site): Duplicate return value
	here. 
	(impl_GNOME_BonoboObject_new_view): Duplicate return value here.

	* bonobo/gnome-object.c (gnome_object_construct): Duplicate the
	CORBA_Object_duplicate at construction time.
	(gnome_object_activate_servant): Do not duplicate the object
	here, this addresses the concerns I had.

	Added in-line api documentation for the whole file.

	* doc/Bonobo.sgml: Extended the Bonobo documentation a bit with
	more information on query_interface.

1999-06-11  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-file-moniker.c (map_file): helper function. Is
	there already a function to do this?

	* bonobo/gnome-moniker.h: Add find_moniker_in_naming_service.

	* bonobo/gnome-moniker.c (find_moniker_in_naming_service): New function.

	* bonobo/gnome-moniker.c (impl_bind_to_object): Changed it to take
	a GNOME_BindOptions* struct instead of a BindContext CORBA object.
	(impl_bind_to_storage): same.
	(impl_get_display_name): same.
	(impl_parse_display_name): same.

	* bonobo/gnome-moniker.h: Changed GnomeMonikerBindFn to take a
	GNOME_BindOptions struct.

	* idl/gnome-moniker.idl: Added BindOptions struct, which is
	analogous to GNOME::BindContext. I don't think we'll need the
	CORBA object form of BindContext; we'll see. . .

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_bind): New
	function, which acts as the filemoniker-specific binding function.
	(gnome_file_moniker_construct): Give gnome_file_moniker_bind to
	gnome_moniker_construct.

1999-06-10  Matt Loper  <matt@gnome-support.com>

	* bonobo/gnome-file-moniker.h: Change gnome_file_moniker_new to
	take filename and goad_id as params.  Changed
	gnome_file_moniker_construct to take filename and goad_id as
	params.

	* bonobo/gnome-moniker.h: Add a GnomeMonikerBindFn type to
	GnomeMoniker. Include gnorba.h. Add binding_function to
	gnome_moniker_construct.

	* bonobo/gnome-moniker.c (gnome_moniker_construct): Initialize a
	GnomeMoniker's bind_function here.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_new): Changed
	signature and body to reflect goad_id/filename basis for
	GnomeFileMoniker.
	(gnome_file_moniker_construct): Changed to reflect
	goad_id/filename basis for GnomeFileMoniker

	* bonobo/gnome-file-moniker.h: changed GnomeFileMoniker to be
	defined in terms of a goad_id and a filename.

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_destroy):
	Changed to reflect the above.

1999-06-10  Nat Friedman  <nat@gnome-support.com>

	* bonobo/test-container.c: Added comment at top of file.

	* bonobo/sample-server.c (main): Return an int.

	* bonobo/gnome-component-client.c: Include gdktypes.h
	(view_frame_activated_cb): New simple default callback function to
 	attach to the view_activated signal of a newly-created
 	GnomeViewFrame.  Uncovers the BonoboObject by removing the
 	GnomeWrapper.  For use with gnome_bonobo_object_new_view_simple.
	(wrapper_button_press_cb): New simple default callback function to
 	attach to the button_press_event signal of a GnomeWrapper.  Sends
 	the bonobo_open verb to the contained BonoboObject when the user
 	double clicks on the GnomeWrapper.  For use with
 	gnome_bonobo_object_new_view_simple.
	(gnome_bonobo_object_new_view_simple): New function to make it
 	easy to setup a new view of an existing BonoboObject.

1999-06-09  Matt Loper <matt@gnome-support.com>

	* bonobo/test-container.c (add_image_cmd): Released `persist' properly.
	(add_text_cmd): likewise.

	* bonobo/test-container-autoload.c: Include
	bonobo/gnome-stream-fs.h rather than a local version.
	(hydrate_object_from_file): Release `persist' properly. Also some
	minor commenting.

1999-06-08  Nat Friedman  <nat@gnome-support.com>

	* idl/gnome-component.idl (ViewFrame): Added the GNOME::ViewFrame interface.
	(BonoboObject): Added the ViewFrame argument to new_view.

	* idl/gnome-client-site.idl (show_window): No longer oneway.

	* components/text-plain/bonobo-text-plain.c: Added
	progressive_data field to the BonoboObject private data structure
	to keep track of whether or not the component is in the process of
	receiving data view the ProgressiveDataSink.
	(progressive_start): Set bonobo_object_data->progressive_data to TRUE.
	(progressive_end): Set bonobo_object_data->progressive_data to FALSE.
	(view_factory): Only hide the progress meter if we're not
	receiving progressive data.

	* bonobo/test-container.c (text_client_site): New global variable
	to cache the client site associated with the text_obj
	BonoboObject.
	(image_client_site): Ditto for image_png_obj.
	(launch_server): Take the GnomeClientSite as a paramter.
	(add_view): Take the GnomeClientSite as an argument so it can be
	passed to gnome_bonobo_object_new_view.  Get the GnomeWrapper from
	the ViewFrame.  Return the ViewFrame, not the wrapper.
	(add_cmd): Create the client site and return it in a new
	parameter.  Pass it to add_view.
	(add_demo_cmd): Pass &client_site to add_cmd.
	(add_image_cmd): Pass &image_client_site to add_cmd.
	(add_image_view): Pass image_client_site to add_view.
	(add_text_cmd): Pass &text_client_site to add_cmd.
	(add_text_view): Pass text_client_site to add_view.

	* bonobo/test-container-autoload.c (launch_server): Added a
	client_site parameter.  Don't create the client_site here.
	(add_object_cmd): Create the client site here and pass it to
	launch_server.  Pass the client site to
	gnome_bonobo_object_new_view .  Get the view_widget from the
	view_frame that new_view returned.

	* bonobo/gnome-object-client.h: Changed views list to view_frames.

	* bonobo/gnome-component-client.h: Include gnome-client-site.h and
	gnome-view-frame.h.
	(gnome_bonobo_object_new_view): Changed prototype to have
	client_site argument.

	* bonobo/gnome-component-client.c (destroy_view_frame): Thre
	destroy_view function was renamed to this.  Remove the specified
	ViewFrame from the GnomeClientSite's ViewFrame list.
	(gnome_bonobo_object_client_activate): Get the wrapper from the
	ViewFrame list.
	(gnome_bonobo_object_client_deactivate): Likewise.

	(gnome_bonobo_object_new_view): Take the GnomeClientSite as an
	argument.  Create the view frame for the new view and return it.
	Associate the view and the view frame with the cover.

	* bonobo/Makefile.am (libbonobo_la_SOURCES): Added gnome-view-frame.c
	(libbonoboinclude_HEADERS): Added gnome-view-frame.h

1999-06-08  Miguel de Icaza  <miguel@gnu.org>

	* bonobo/gnome-view.c (gnome_view_class_init): Parent is
	GNOME::obj, not GtkObject.
	
	* bonobo/gnome-container.c (gnome_container_class_init): ditto.
	* bonobo/gnome-component-factory.c (gnome_bonobo_object_factory_class_init): ditto.
	* bonobo/gnome-bind-context.c (gnome_bind_context_class_init): ditto

1999-06-07  Matt Loper  <matt@gnome-support.com>

	* idl/gnome-persist.idl (GNOME): Added a `WrongDataType' exception
	to the load functions in PersistFile, PersistStorage, and
	PersistStream.

1999-06-06  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (text_inserted_cb):
 	New function to catch "insert_text" signals on a view.  Adds the
 	new text to all existing views and adds it to BonoboObject's
 	internal data.
	(text_deleted_cb): New function to catch "delete_text" signals on
 	a view.  Deletes the appropriate text from all existing views and
 	removes it from the BonoboObject's internal data.
	(view_factory): Use a table instead of a vbox to store the
 	progress bar and the scrollable window.  Add any existing
 	BonoboObject text into the new view when it is created.  Connect
 	to the "insert_text" and "delete_text" signals.

	* components/image-x-png/bonobo-image-x-png.c (view_factory):
 	Removed call to gtk_widget_set_usize.

	* bonobo/test-container.c (image_png_obj): New global variable to
 	hold a pointer to an existing image/x-png BonoboObject.
	(add_view): New function.  Creates a new view from a
 	BonoboObject's GnomeObjectClient.
	(add_cmd): Modified to use add_view.
	(add_image_cmd): Store a pointer to the new image BonoboObject in
 	image_png_obj.
	(add_image_view): New function to add a new view of an existing
 	image/x-png BonoboObject.
	(add_text_view): New function to add a new view of an existing
 	text/plain BonoboObject.
	(container_text_plain_menu): New menu subtree for all the
 	text/plain operations.
	(container_image_png_menu): New menu subtree for all the
 	image/x-png operations.
	(container_file_menu): Removed image/x-png and text/plain
 	operations.
	(container_main_menu): Added subtree entries for
 	container_text_plain_menu and container_image_png_menu.

	* bonobo/gnome-component.c (gnome_bonobo_object_remove_verb): Cast
 	l->data to a char * in the strcmp to avoid a compiler warning.

1999-06-04  Richard Hestilow  <hestgray@ionet.net>

	* bonobo/gnome-bonobo-selector.h: Use 
	'GnomeBonoboSelectorPrivate *priv" instead of "gpointer priv" so
	as to avoid ugly casting.
	
1999-06-04  Chris Lahey  <clahey@umich.edu>

	* components/audio-ulaw/doc/C/Makefile.am,
	components/image-x-png/doc/C/Makefile.am: Fixed make distcheck.

1999-06-03  Richard Hestilow  <hestgray@ionet.net>
	
	* bonobo/gnome-bonobo-selector.[ch]: Updated to use the new private
	fields - didn't bother leaving compat fields in though, as nothing
	uses this code yet :-)

1999-06-02  Nat Friedman  <nat@gnome-support.com>

	* components/image-x-png/doc/C/image_x_png.sgml: Rewrote the
 	summary.  Changed some of the section titles.

	* components/image-x-png/bonobo-image-x-png.c (save_image): New
 	function implementing GNOME::PersistStream.save.
	(stream_write): New fuhnction.  Helper for save_image.
	(bonobo_object_factory): Setup callback to save_image for
 	GNOME::PersistStream.save.

1999-06-01  Chris Lahey  <clahey@umich.edu>

	* configure.in, components/Makefile.am: Added audio-ulaw subdirectory.

	* components/audio-ulaw/Makefile.am,
	components/audio-ulaw/.cvsignore: Files needed for compilation and cvs.

	* components/audio-ulaw/audio-ulaw.gnorba: Description of this
	component for gnorba to use.

	* components/audio-ulaw/color.h, components/audio-ulaw/color.c:
	These are borrowed almost exactly from gnumeric/src/color.[ch].
	They handle color allocation.

	* components/audio-ulaw/bonobo-audio-ulaw.h,
	components/audio-ulaw/bonobo-audio-ulaw.c: The bonobo component.
	Uses item-audio to display audio/ulaw data.

	* components/audio-ulaw/item-audio.h,
	components/audio-ulaw/item-audio.c: This is the gnome-canvas item
	which displays the audio data.

	* components/audio-ulaw/: Added a audio/ulaw component.

1999-06-01  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (view_data_t): Added a
 	progress field for the progress bar widget.
	(view_destroy_cb): Renamed destroy_view to this.
	(blank_all_views): Hide the progress bar.
	(progressive_update): Removed the old progress meter code.  Update
 	the new progress bar widget.
	(progressive_start): Show the progress bar.
	(progressive_end): Removed the old progress meter code.  Hide the
 	progress bar widget.
	(view_factory): Create a vbox to hold both the GtkText and the new
 	GtkProgressBar.

	* bonobo/gnome-progressive.h (GnomeProgressiveDataSinkAddDataFn):
 	Made the iobuf const.
	(GnomeProgressiveDataSinkClass): Made the iobuf in the add_data_fn
 	callback's paramter list const.

	* bonobo/gnome-progressive.c (impl_add_data): Made the iobuf
 	parameter const to match the skels.
	(gnome_progressive_data_sink_add_data_nop): Removed the
 	CORBA_Environment parameter.

	* bonobo/gnome-view.c (impl_GNOME_View_set_window): Moved the call
 	to gtk_widget_show_all before the gtk_container_add so that the
 	component can control when its subwidgets are displayed.

	* bonobo/gnome-inplace-site.c (create_inplace_site): Removed
 	unused untyped variable corba_class_inited.

1999-05-31  Nat Friedman  <nat@gnome-support.com>

	* bonobo/test-container.c (timeout_next_line): Call
 	GNOME_ProgressiveDataSink_end when the whole file has been sent.
  	Then free the tmt struct, close the file, and release the
 	interface object.

	* bonobo/test-container.c (send_text_cmd): Stat the file and call
 	GNOME_ProgressiveDataSink_set_size.
	
1999-06-01  Elliot Lee <sopwith@redhat.com>

	* bonobo/gnome-object.[ch]: Removed servant_to_object hash table.
  	Now all servants store a gnome_object pointer for
 	servant->GnomeObject translation.

	* bonobo/*.[ch]: Changes to match above.

1999-06-01  Richard Hestilow  <hestgray@ionet.net>

	* bonobo/gnome-bonobo-selector.[ch]: New widget, a dialog
	that prompts the user to select from a filtered list of goad servers.

	* bonobo/selector_test.c: Test program for aforementioned widget
	
	* bonobo/Makefile.am: added new sources, test program

1999-06-01  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object.c: Removed object_to_servant hash table.
	Now the GnomeObject contains a pointer to the servant.

1999-05-31  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (SHOW_PROGRESS_INFO):
 	Define this for kicks.
	(bonobo_object_data_t): Added total_size field.
	(progressive_set_size): New function.
	(progressive_end): Likewise.
	(bonobo_object_factory): Hook up the callbacks for progressive_end
 	and progressive_set_size.
	(progressive_update): Update the progress meter.

1999-05-31  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component-client.c (gnome_bonobo_object_get_verbs):
	Helper routine to fetch the verbs supported by an embedded
	BonoboObject.
	(gnome_bonobo_object_free_verbs): Routine to release the return
	value returned from gnome_bonobo_object_get_verbs.

	* idl/gnome-component.idl (BonoboObject): Verbs are now only
	strings.  No code is now passed.
	
	* bonobo/gnome-component.c (gnome_bonobo_object_remove_verb,
	gnome_bonobo_object_add_verb, gnome_bonobo_object_add_verbs):
	Change the API to only use strings.

	* bonobo.spec.in (Obsoletes): Include *Conf.sh files in distribution.

	* bonobo/Makefile.am (EXTRA_DIST): Include corba_DATA in
	distirbution. 

1999-05-30  Matt Loper  <matt@gnome-support.com>

	* idl/gnome-component.idl (GNOME): Changed the GNOME::Component
	interface to GNOME::BonoboObject. This implies changes in all of
	the following files.

	* idl/gnome-persist.idl (GNOME): likewise

	* idl/gnome-inplace.idl (GNOME): likewise

	* components/text-plain/text-plain.gnorba: likewise

	* components/text-plain/bonobo-text-plain.c: likewise

	* components/image-x-png/image-x-png.gnorba: likewise

	* components/image-x-png/bonobo-image-x-png.c: likewise

	* bonobo/test-container.c: likewise

	* bonobo/test-container-autoload.c: likewise 

	* bonobo/sample.gnorba: likewise

	* bonobo/sample-server.c: likewise

	* bonobo/gnome-object.c: likewise

	* bonobo/gnome-inplace-component.c: likewise

	* bonobo/gnome-container.c: likewise.

	* bonobo/gnome-component.h: likewise

	* bonobo/gnome-component.c: likewise

	* bonobo/gnome-component-io.h: likewise

	* bonobo/gnome-component-io.c: likewise

	* bonobo/gnome-component-factory.h: likewise

	* bonobo/gnome-component-factory.c: likewise

	* bonobo/gnome-component-client.h: likewise

	* bonobo/gnome-component-client.c: likewise

	* bonobo/gnome-client-site.h: likewise

	* bonobo/gnome-client-site.c:likewise

1999-05-29  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c (view_factory): Put
	the GtkText widget in a scrolled window.

1999-05-28  Nat Friedman  <nat@gnome-support.com>

	* components/text-plain/bonobo-text-plain.c
	(progressive_add_data): Removed the call to
	GNOME_SimpleDataSource_pop_data.  Now just use the buffer that
	comes from add_data.

	* bonobo/test-container.c (struct progressive_timeout): Now stores
	much less information since we don't need to manage a
	SimpleDataSource.  It now only stores the file we're loading data
	from and the GNOME_ProgressiveDataSinik.
	(ssource_pop_data): Removed, since we're no longer using the
	SimpleDataSource.
	(ssource_remaining_data): Likewise.
	(timeout_next_line): Modified to just send a buffer with add_buff.
	(send_text_cmd): No longer creates a SimpleDataSource interface
	object.

	* bonobo/gnome-progressive.h (GnomeProgressiveDataSinkAddDataFn):
	Modified to reflect the change in the interface to add_data.
	(GnomeProgressiveDataClass): Likewise.

	* bonobo/gnome-progressive.c (impl_add_data): Modified to reflect
	the change in the interface to add_data, which only takes one
	argument now.
	(gnome_progressive_data_sink_add_data_nop): Likewise.

	* bonobo/gnome-bonobo.h: Don't include gnome-simple-source.h

	* idl/gnome-progressive.idl: Removed SimpleDataSource interface.

	* bonobo/Makefile.am: Removed gnome-simple-source.c and
	gnome-simple-source.h

1999-05-28  Raja R Harinath  <harinath@cs.umn.edu>

	* configure.in (AC_OUTPUT): Remove 'sed .. POTFILES' expression.
	(AM_GNOME_GETTEXT): Use instead of AM_GNU_GETTEXT.
	(BONOBO_INCLUDEDIR): Use $GNOME_CONFIG instead of calling
	gnome-config directly.
	(BONOBO_LIBS): Likewise.

	* bonobo/Makefile.am (idl_flags): Use $(GNOME_CONFIG) instead of
	calling `gnome-config' directly.
	($(CORBA_SOURCE)): Use $(ORBIT_IDL) instead of calling `orbit-idl'
	directly. 

	* components/text-plain/Makefile.am (bonobo_text_plain_LDADD): 
	Use $(top_builddir) not $(top_srcdir).
	* components/image-x-png/Makefile.am (bonobo_image_x_png_LDADD): 
	Likewise.
	
1999-05-28  Nat Friedman  <nat@gnome-support.com>

	* Makefile.am (SUBDIRS): Added components.

	* bonobo/gnome-simple-source.c: New file which implements the
	GNOME::SimpleDataSource interface.
	* bonobo/gnome-simple-source.h: New file.

	* bonobo/gnome-progressive.c: New file which implements the
	GNOME::ProgressiveDataSink interface.
	* bonobo/gnome-progressive.h: New file.

	* idl/gnome-progressive.idl: New file which defines the interfaces
	for GNOME::ProgressiveDataSink and GNOME::SimpleDataSource, which
	work together to provide an interface for progressive loading of
	slow data streams to components.

	* idl/gnome-component.idl: Fixed comment.

	* idl/Makefile.am (idl_DATA): Added gnome-progressive.idl.

	* components/text-plain/bonobo-text-plain.c (free_text): Set
	component_data->text to NULL after freeing it.
	(blank_all_views): Don't blank blank views.
	(update_all_views): New function to perform non-progressive
	display updating, as occurs after new data is loaded through the
	PersistStream interface.
	(progressive_update): Renamed progressive_update_all_views to
	this.  It also updates the component data and is modified to take
	a char * buffer and a byte count.
	(stream_read): Don't call CORBA_exception_free, since we have a
	global exception.  Don't progressively update the display as we
	read data; stream_read is only used as a helper function for the
	PersistStream interface now.  Return -1 on error and 0 on success.
	(pstream_load): Renamed load_text_from_stream to this.  Modified
	to only update the display after the entire stream has been
	loaded.
	(pstream_save): New function to implement
	GNOME::PersistStream:save.
	(progressive_start): New function to implement
	GNOME::ProgressiveDataSink:start.
	(progressive_add_data): New function to implement
	GNOME::ProgressiveDataSink:add_data.
	(component_factory): Add the GNOME::ProgressiveDataSink interface.

	* bonobo/test-container.c: Added struct progressive_timeout to
	hold the closure data that needs to be sent to the timeout.
	(ssource_pop_data): New function.  Implements the
	GNOME::SimpleDataSource:pop_data method for progressive loading.
	(timeout_next_line): New function.  Timeout callback to send new
	data to the text/plain BonoboObject using the ProgressiveDataSink
	interface.
	(send_text_cmd): Modified to use ProgressiveDataSink.
	(container_file_menu): New accelerators.
	(ssource_remaining_data): New function to implement the
	GNOME::SimpleDataSource:remaining_data method.

	* bonobo/gnome-persist-stream.h: Added get_size_max_fn to
	GnomePersistStream.

	* bonobo/gnome-persist-stream.c (impl_get_size_max): Try to call
	the user-provided get_size_max function if it is available.

	* bonobo/gnome-bonobo.h: Include gnome-stream.h,
	gnome-stream-fs.h, gnome-progressive.h and gnome-simple-source.h

	* bonobo/Makefile.am (libbonobo_la_SOURCES): Added
	gnome-progressive.c and gnome-simple-source.c.
	(libbonobo_la_SOURCES): Added gnome-progressive.h and
	gnome-simple-source.h

	* bonobo/Makefile.am (idls): Added gnome-progresive.idl to idls
	list.

1999-05-28  Matt Loper  <matt@gnome-support.com>

	* bonobo/test-container-autoload.c: New file.

1999-05-27  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* doc/.cvsignore: added file

	* bonobo/test-container.c (main): fix compiler warnings
	(should bonobo.h include gnome-stream-fs.h? 
	if so: remove #include <bonobo/gnome-stream-fs.h> from here)
	
1999-05-24  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-storage-repo.c (gnome_storage_repo_class_init):
	Method rename from delete to erase to deal with C++.

	* bonobo/gnome-storage.c (init_storage_corba_class): ditto

	* idl/gnome-storage.idl: ditto.

1999-05-27  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c (gnome_component_remove_verb): Add
	routines for registering and unregistering verbs. 

	* bonobo/gnome-container.c (corba_container_class_init): Use corba
	init class mechanism instead of online initialization.

	* bonobo/gnome-view.c (impl_GNOME_View_size_allocate): Pass the
	size on the component to the actual widget.

	* bonobo/gnome-component-client.c (size_allocate): Propagage size
	changes to the client.

1999-05-27  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* idl/gnome-component.idl: change a "Baboon" -> "Bonobo"

1999-05-27  Michael Meeks  <michael@imaginator.com>

	* idl/gnome-persist.idl: Polish docs.

	* idl/gnome-inplace.idl: typo.

1999-05-26  Jacob Berkman  <jberkman@andrew.cmu.edu>

	* components/text-plain/.cvsignore: added file

	* doc/Bonobo.sgml: changed some GNOME::object -> GNOME::obj

	* bonoboConf.sh.in: typo: XML -> Bonobo

1999-05-26  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* idl/Makefile.am (idl_DATA): Removed gnome-base.idl and
	gnome-object.idl from the list of files.

	* bonobo/Makefile.am (idls): Likewise.

1999-05-26    <sopwith@moebius.labs.redhat.com>

	* idl/bonobo.idl: Use GnomeObject.idl (from gnome-libs) instead of
	gnome-object.idl and gnome-base.idl

1999-05-26  Nat Friedman  <nat@nat.org>

	* components/text-plain/bonobo-text-plain.c (blank_all_views): New
 	function.
	(progressive_update_all_views): New function.
	(stream_read): Update the display as the data comes in.
	(load_text_from_stream): Updated to use the progressive display.
	(component_factory): No default text.
	(view_factory): No default text.

	* bonobo/test-container.c (add_text_cmd): Load /usr/dict/words.
	(text_obj): New variable.
	(send_text_cmd): New callback to send /tmp/pipe to the current
	text component.  To show off progressive loading.
	(container_file_menu): Added a menu entry for send_text_cmd.

1999-05-26  Nat Friedman  <nat@nat.org>

	* components/image-x-png/bonobo-image-x-png.c (view_factory): Add
 	the new view to the component_data's view list.

	* bonobo/test-container.c (add_text_cmd): New function to embed a
 	text/plain component.
	(container_file_menu): Added a menu item to embed a text/plain
 	component.

	* configure.in: Added components/text-plain/Makefile to the build
 	list.

	* components/text-plain/text-plain.gnorba (location_info): New file.

	* components/text-plain/Makefile.am: New file.

	* components/text-plain/bonobo-text-plain.c: New component to
 	implement the text/plain display component.

1999-05-25  Nat Friedman  <nat@nat.org>

	* components/image-x-png/image-x-png.gnorba (location_info):
 	Changed the description to "image/x-png component factory" for the
 	component-factory:image-x-png entry.
 
	* bonobo/test-container.c (add_cmd): Removed unused 'socket'
 	variable.  This stuff is handled in gnome-component-client.c these
 	days anyway.
	(add_cmd): Added call to gnome_component_client_activate.
	(add_image_cmd): Display a warning if the component can't be
 	added.
	(container_file_menu): Use the GNOMEUIINFO_MENU_EXIT_ITEM macro.

	* bonobo/gnome-component.c (gnome_component_class_init): Inherit
 	from GnomeObject, not GtkObject.
	(gnome_component_class_init): Added missing call to
 	gtk_object_class_add_signals.  Verbs now work.

	* bonobo/gnome-component-client.h: Added prototypes for
 	gnome_component_client_activate and
 	gnome_component_client_deactivate.

	* bonobo/gnome-component-client.c (gnome_component_new_view):
 	Don't call gtk_container_add on the socket twice.
	(gnome_component_client_deactivate): Renamed
 	gnome_object_client_deactivate to
 	gnome_component_client_deactivate.
	(gnome_component_client_activate): Renamed
 	gnome_object_client_activate to
 	gnome_component_client_activate.

1999-05-25  Havoc Pennington  <hp@pobox.com>

	* bonobo/gnome-component.c (impl_GNOME_Component_do_verb): Cast
	the varargs arguments to be sure they're the right size

	* bonobo/gnome-storage.h, bonobo/gnome-storage.c,
	idl/gnome-storage.idl:
	s/delete/erase (fixes from LE)

1999-05-18  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* idl/gnome-storage.idl (interface Stream):
 	added new functions close, eos, length. seek now returns the 
	current position.
	* idl/gnome-storage.idl (interface Storage):
	renamed destory to delete 
	
1999-05-16  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/gnome-object.idl, idl/*.idl: Renamed GNOME::object to
	GNOME::obj to make it complain to the CORBA standard (they do not
	let use use object in any case-sensitive fashion).

	* bonobo/gtk-interfaces.c: Simplified the code, cleaned up, and
	address the bug pointed out by Jacob: interfaces were not being
	propagated to all of the conforming objects, only to the last 2
	objects being assembled.

	* bonobo/object_test.c (test2): Extended interfaces tests to cover
	the bug found by Jacob.

	* bonobo/gtk-interfaces.c (gtk_object_query_interface): Use
	gtk_get_interface here, so that we can do query (A, A) and get A.
	Thanks to Dietmar for pointing this out.

1999-05-10  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-storage-fs.c (gnome_storage_fs_get_type): use
	initialization class.

1999-05-14  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-stream-fs.c (fs_write): small fix 
	(gnome_stream_fs_create): added O_RDWR to open flags
	* bonobo/gnome-storage-fs.c 
	(gnome_storage_fs_create): small fix 
	* bonobo/gnome-storage-repo.[hc]: new files (librepo interface) 
	* bonobo/gnome-stream-repo.[hc]: new files (librepo interface)

1999-05-12  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-storage.[hc]: added destroy function
	
1999-05-11  Dietmar Maurer  <dm@vlsivie.tuwien.ac.at>

	* bonobo/gnome-storage.c (impl_*): don't access storage->object
	if object == NULL.
	
1999-04-28  Jacob Berkman  <jberk+@cmu.edu>

	* idl/Makefile.am (idl_DATA): install the .idl files in
	$(datadir)/idl

1999-04-28  Jacob Berkman  <jberk+@cmu.edu>

	* idl/Makefile.am (idl_files): install gnome-*.idl files now
	* idl/: removed old .idl files

1999-04-28  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object-client.c
	(gnome_object_activate_with_goad_id): Small fix.

	* bonobo/gnome-client-site.c (gnome_client_site_bind_component):
	Adapt to new GnomeObjectClient existance.

	Added documentation.

	* bonobo/test-container.c: ditto.

	* bonobo/gnome-object-client.c (set_remote_window): New file.
	Includes all the client-side implementation of a remote
	GNOME::object. 

1999-04-27  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/test-container.c,sample-server.c,
	components/image-x-png/bonobo-image-x-png:  Simplify by using the
	gnome-bonobo.h header file.

	* bonobo/gnome-stream-memory.c (mem_read): Typo fix.  And use the
	auto-release feature for sequences from Elliot.

	* bonobo/gnome-stream-fs.c (fs_read): Use the auto-release feature
	here.  Thanks to Elliot for pointing this out.

1999-04-26  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* idl/gnome-storage.idl: Use sequences of octets, not strings for
	the buffers. 

	* bonobo/test-container.c: Improved to have a sample call to
	PersistStream_load
	
	* bonobo/gnome-stream-fs.c (fs_read): Implement this function

	* bonobo/gnome-stream-memory.c (mem_read): Use
	CORBA_octet_allocbuf here instead of malloc.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_get_type): List the
	class initialization routine.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_new): Do not
	use const for the streams.

	* components/image-x-png/bonobo-image-x-png.c (stream_read):
	Implement using CORBA streams instead of the hardcoded values. 

1999-04-24  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c (gnome_component_class_init): Register
	the "do_verb" and "host_name_changed" signals.  
	(impl_GNOME_Component_do_verb): Implement it.

1999-04-23  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object.h: Jesus.  I am a dork.  These should be
	externs.  Thanks to Robert Roebling for pointing this out.

1999-04-22  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-stream-memory.c: New memory-based stream object.

	* bonobo/gnome-stream-fs.c (gnome_stream_fs_get_type): Use the
	correct class name here.

1999-04-21  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* components/image-x-png: It loads PNG files now, draws them,
	works.  Hardcoded value currently.  Will fix in a second.
	
	* bonobo/gnome-object.c (gnome_object_activate_with_goad_id):
	Implement activation by goad-id.

	* bonobo/test-container.c (main): Argument line allows you to
	specify the goad id to activate.
	(launch_server): Activate by goad id instead of repo id.

	* bonobo/gnome-persist-stream.c (gnome_persist_stream_new): Finish
	implementing. 

1999-04-21  Havoc Pennington  <hp@pobox.com>

	* bonobo/gnome-client-site.h
	bonobo/gnome-component-factory.h
	bonobo/gnome-component.h
	bonobo/gnome-container.h
	bonobo/gnome-dot.h
	bonobo/gnome-inplace-component.h
	bonobo/gnome-inplace-site.h
	bonobo/gnome-object.h
	bonobo/gnome-view.h
	bonobo/gtk-interfaces.h:
	Match BEGIN_GNOME_DECLS with END_GNOME_DECLS in these
	headers.

1999-04-16  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c (gnome_component_new_view): Use a
	GtkCover on top of the Socket.

	* bonobo/gtk-cover.c (gtk_cover_get_type): New file.  An InputOnly
	window used to cover embedded objects. 

1999-04-14  Tomislav Vujec  <tvujec@carnet.hr>

	* configure.in: remove second GNOME_INIT invocation.

	* bonobo/Makefile.am: $(includedir) should be on the end, because in
	$(srcdir) != $(builddir) scenario, bonobo picks up old headers from
	$(includedir)

1999-04-13  Federico Mena Quintero  <federico@nuclecu.unam.mx>

	* bonobo/gnome-object.c: #include "gtk-interfaces.h"

	* bonobo/gnome-file-moniker.c (gnome_file_moniker_new): Declare
	gfm_corba as "GNOME_Moniker gfm_corba", not "GNOME_Moniker *gfm_corba".

	* bonobo/gnome-client-site.c (impl_GNOME_client_site_save_object):
	Made static.

1999-04-11  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-client-site.c (gnome_client_site_destroy): Unref
	the remote object here.
	(gnome_client_site_bind_component): Keep track of the remote
	object here. 

1999-04-07  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-stream.c: Base class for stream implementations.
	
	* bonobo/gnome-storage-fs.c: Implemented sample file-system based
	storage. 

	* bonobo/gtk-interfaces.c (gtk_object_query_interface): Do the
	query interface on the hierarchy.

1999-03-31  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-view.c: Use the new corba-class init framework.

1999-04-05  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-object.c (impl_GNOME_object_query_interface): Make
	gnome_object_query_interface call gtk_object_query_interface.  We
	need to make gtk_object_query_interface walk the hierarchy
	optionally (ie, to ask for parent classes).  

	This fixes the first part of the problem.  Need to fix the next later.

1999-04-01  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-file-moniker.c, bonobo/gnome-moniker.c: Initial
	implementations. 

1999-03-17  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-bind-context.c: New file. 

1999-03-26  Timur Bakeyev <mc@bat.ru>

	* bonobo/Makefile.am: fixed library inclusion order in $(bonobo_libs).

1999-03-08  Martijn van Beers <martijn@earthling.net>

	* bonobo/Makefile.am: fixed double -I for orbit-idl
	* po/.cvsignore:
	* idl/.cvsignore: New files

1999-03-07  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-inplace-site.c (init_inplace_corba_class): New file.

1999-02-16  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* bonobo/gnome-component.c: New file.  Implements a component.

	* bonobo/gnome-view.c (create_gnome_view): Simplify.
	(gnome_view_construct): New function.

	* bonobo/gnome-object.c (gnome_object_activate_servant): New
	function. 

	* bonobo/gnome-container.c: Implement.

1999-02-06  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* src/gnome-object.c (gnome_object_drop_binding,
	gnome_object_drop_binding_by_servant): New routines to drop the
	bindings by servant and by object.

	* src/gnome-main.c (bonobo_init): Bootstrap routine, plus helper
	routines. 

	* src/gnome-object.h: Provide an environment here.

1999-02-08  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* src/gtk-interfaces.c (gtk_get_interface): Apply the mixins patch
	from Tero.

1999-02-04  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* src/gtk-interfaces.c, src/gtk-interfaces.h: New files.
	Implements gtk-interfaces.
	(gtk_get_interface): Use destroy, not shutdown.

