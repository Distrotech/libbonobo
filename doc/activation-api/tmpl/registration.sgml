<!-- ##### SECTION Title ##### -->
Registration

<!-- ##### SECTION Short_Description ##### -->
Registering CORBA objects to Bonobo Activation.

<!-- ##### SECTION Long_Description ##### -->
<para>
When writing a component which can be activated through
Bonobo Activation by clients, you need to be register your component
to Bonobo Activation once it is created.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### ENUM Bonobo_RegistrationResult ##### -->
<para>

</para>

@Bonobo_ACTIVATION_REG_SUCCESS: 
@Bonobo_ACTIVATION_REG_NOT_LISTED: 
@Bonobo_ACTIVATION_REG_ALREADY_ACTIVE: 
@Bonobo_ACTIVATION_REG_ERROR: 

<!-- ##### FUNCTION bonobo_activation_unregister_active_server ##### -->
<para>

</para>

@iid: 
@obj: 


<!-- ##### FUNCTION bonobo_activation_active_server_register ##### -->
<para>

</para>

@registration_id: 
@obj: 
@Returns: 
<!-- # Unused Parameters # -->
@iid: 


<!-- ##### FUNCTION bonobo_activation_active_server_unregister ##### -->
<para>

</para>

@iid: 
@obj: 


<!-- ##### FUNCTION bonobo_activation_make_registration_id ##### -->
<para>

</para>

@iid: 
@display: 
@Returns: 


<!-- ##### FUNCTION bonobo_activation_registration_env_free ##### -->
<para>

</para>

@reg_env: 


<!-- ##### FUNCTION bonobo_activation_registration_env_set ##### -->
<para>

</para>

@reg_env: 
@name: 
@value: 
@Returns: 


<!-- ##### FUNCTION bonobo_activation_registration_env_set_global ##### -->
<para>

</para>

@reg_env: 
@append_if_existing: 


<!-- ##### FUNCTION bonobo_activation_registration_env_get_global ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION bonobo_activation_register_active_server ##### -->
<para>

</para>

@iid: 
@obj: 
@reg_env: 
@Returns: 


<!-- ##### FUNCTION bonobo_activation_register_client ##### -->
<para>

</para>

@context: 
@ev: 


<!-- ##### FUNCTION bonobo_activation_iid_get ##### -->
<para>

</para>

@Returns: 


<!-- ##### TYPEDEF BonoboActivationPlugin ##### -->
<para>
Components which want to be activated as 
shared libraries must export an BonoboActivationPlugin
structure of name <structname>BonoboActivation_Plugin_info</structname>.
An exmaple of how to use it folows:
<programlisting>
static CORBA_Object
hi_shlib_make_object (PortableServer_POA poa,
                      const char *iid,
                      gpointer impl_ptr,
                      CORBA_Environment *ev)
{
        CORBA_Object object_ref;

        object_ref = impl_Hi__create (poa, ev);
        if (object_ref == CORBA_OBJECT_NIL 
            || ev->_major != CORBA_NO_EXCEPTION) {
                printf ("Server cannot get objref\n");
                return CORBA_OBJECT_NIL;
        }

        bonobo_activation_plugin_use (poa, impl_ptr);

        return object_ref;
}

static const BonoboActivationPluginObject hi_plugin_list[] = {
        {
                "OAFIID:Hi:20000923",
                hi_shlib_make_object
        },
        {
                NULL
  	}
};

const BonoboActivationPlugin BonoboActivation_Plugin_info = {
        hi_plugin_list,
        "Hi example"
};
</programlisting>
</para>


<!-- ##### TYPEDEF BonoboActivationPluginObject ##### -->
<para>

</para>


<!-- ##### FUNCTION bonobo_activation_plugin_use ##### -->
<para>

</para>

@servant: 
@impl_ptr: 


<!-- ##### FUNCTION bonobo_activation_plugin_unuse ##### -->
<para>

</para>

@impl_ptr: 


