<!-- ##### FUNCTION gnome_ui_handler_toolbar_parse_uiinfo_list ##### -->
<para>

</para>

@uih: 
@uii: 
@Returns: 

<!-- ##### FUNCTION gnome_embeddable_add_verb ##### -->
<para>

</para>

@bonobo_object: 
@verb_name: 
@verb_label: 
@verb_hint: 

<!-- ##### STRUCT embeddable_data_t ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_get_radio_group_selection ##### -->
<para>

</para>

@uih: 
@rg_path: 
@Returns: 

<!-- ##### FUNCTION gnome_object_client_from_corba ##### -->
<para>
</para>

@o: 

<!-- ##### SECTION ./tmpl/gnome-stream-memory.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_new_radiogroup ##### -->
<para>

</para>

@uih: 
@path: 

<!-- ##### FUNCTION gnome_embeddable_client_get_verbs ##### -->
<para>

</para>

@server_object: 
@Returns: 

<!-- ##### MACRO GNOME_SIMPLE_DATA_SOURCE_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_new ##### -->
<para>

</para>

@uih: 
@path: 
@type: 
@label: 
@hint: 
@pos: 
@pixmap_type: 
@pixmap_data: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### FUNCTION gnome_stream_write_class_id ##### -->
<para>

</para>

@stream: 
@class_id: 

<!-- ##### SECTION ./tmpl/gnome-object-client.sgml:Title ##### -->
GnomeObjectClient


<!-- ##### SECTION ./tmpl/gnome-view.sgml:See_Also ##### -->
<para>
   #GnomeViewFrame #GnomeEmbeddable
</para>


<!-- ##### FUNCTION gnome_view_frame_bind_to_view ##### -->
<para>

</para>

@view_frame: 
@view: 

<!-- ##### SECTION ./tmpl/gnome-component-io.sgml:Short_Description ##### -->



<!-- ##### VARIABLE gnome_embeddable_epv ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_storage_write_class_id ##### -->
<para>

</para>

@storage: 
@class_id: 

<!-- ##### SECTION ./tmpl/gnome-bonobo-selector.sgml:Title ##### -->
GnomeBonoboSelector


<!-- ##### FUNCTION gnome_view_new ##### -->
<para>

</para>

@widget: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-simple-source.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_new_toggleitem ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### SECTION ./tmpl/gnome-container.sgml:Short_Description ##### -->
A server for components that can embedd other components.


<!-- ##### SECTION ./tmpl/gnome-component-directory.sgml:Title ##### -->
gnome-component-directory


<!-- ##### FUNCTION gnome_view_set_view_frame ##### -->
<para>

</para>

@view: 
@view_frame: 

<!-- ##### MACRO gnome_client_site_embeddable_new_view ##### -->
<para>

</para>


<!-- ##### STRUCT StorageDriver ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-persist.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### VARIABLE gnome_progressive_data_sink_epv ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-inplace-component.sgml:Title ##### -->
GnomeInPlaceEmbeddable


<!-- ##### FUNCTION gnome_container_remove ##### -->
<para>

</para>

@container: 
@object: 

<!-- ##### FUNCTION gnome_stream_storage_open ##### -->
<para>

</para>

@storage: 
@path: 
@open_mode: 
@Returns: 

<!-- ##### MACRO GNOME_INPLACE_BONOBO_OBJECT_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_client_site_get_verbs ##### -->
<para>

</para>

@client_site: 
@Returns: 

<!-- ##### MACRO GNOME_OBJECT_CHECK ##### -->
<para>
   Checks if the exception in @e needs to be signaled.  If so, then
   the proper exception signal is generated on the GnomeObject object
   @o for the CORBA reference @c.
</para>

@o: 
@c: 
@e: 

<!-- ##### VARIABLE gnome_storage_vepv ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_callback ##### -->
<para>

</para>

@uih: 
@path: 
@callback: 
@callback_data: 

<!-- ##### FUNCTION gnome_ui_handler_add_containee ##### -->
<para>

</para>

@uih: 
@containee: 

<!-- ##### SECTION ./tmpl/gnome-storage-fs.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-main.sgml:Title ##### -->
gnome-main


<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_pixmap ##### -->
<para>

</para>

@uih: 
@path: 
@type: 
@data: 

<!-- ##### FUNCTION gnome_simple_data_source_new ##### -->
<para>

</para>

@pop_data_fn: 
@remaining_data_fn: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_construct ##### -->
<para>

</para>

@ui_handler: 
@corba_uihandler: 
@Returns: 

<!-- ##### FUNCTION gnome_persist_file_set_dirty ##### -->
<para>

</para>

@ps: 
@dirty: 

<!-- ##### FUNCTION gnome_ui_handler_create_toolbar ##### -->
<para>

</para>

@uih: 
@name: 

<!-- ##### SECTION ./tmpl/bonobo-storage-priv.sgml:Title ##### -->
bonobo-storage-priv


<!-- ##### SECTION ./tmpl/gnome-unknown-client.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_ui_handler_menu_get_accel ##### -->
<para>

</para>

@uih: 
@path: 
@accelerator_key: 
@ac_mods: 

<!-- ##### MACRO gnome_client_site_embeddable_get_verbs ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_set_radio_state ##### -->
<para>

</para>

@uih: 
@path: 
@state: 

<!-- ##### SECTION ./tmpl/gnome-object-client.sgml:Short_Description ##### -->
Object activation routines


<!-- ##### SECTION ./tmpl/gnome-embeddable.sgml:Title ##### -->
GnomeEmbeddable


<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_label ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-object.sgml:Title ##### -->
GnomeObject


<!-- ##### FUNCTION gnome_ui_handler_menu_set_hint ##### -->
<para>

</para>

@uih: 
@path: 
@hint: 

<!-- ##### STRUCT StorageHandle ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-simple-source.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_ui_handler_menu_get_child_paths ##### -->
<para>

</para>

@uih: 
@parent_path: 
@Returns: 

<!-- ##### FUNCTION gnome_embeddable_remove_verb ##### -->
<para>

</para>

@bonobo_object: 
@verb_name: 

<!-- ##### FUNCTION gnome_ui_handler_menu_set_accel ##### -->
<para>

</para>

@uih: 
@path: 
@accelerator_key: 
@ac_mods: 

<!-- ##### FUNCTION gnome_ui_handler_menu_free_one ##### -->
<para>

</para>

@item: 

<!-- ##### SECTION ./tmpl/gnome-storage.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_moniker_find_in_naming_service ##### -->
<para>

</para>

@name: 
@goad_id: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_new_radioitem ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### MACRO GNOME_FILE_MONIKER_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-embeddable-client.sgml:Title ##### -->
gnome-embeddable-client


<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_sensitivity ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_add_one ##### -->
<para>

</para>

@uih: 
@parent_path: 
@item: 

<!-- ##### FUNCTION gnome_ui_handler_build_path ##### -->
<para>

</para>

@comp1: 
@Varargs: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_set_label ##### -->
<para>

</para>

@uih: 
@path: 
@label: 

<!-- ##### SECTION ./tmpl/gnome-stream-fs.sgml:Long_Description ##### -->
<para>
  The <classname>GnomeStreamFs</classname> object is a file-based
  <classname>GnomeStream</classname> object that implements the
  <classname>GNOME::Stream</classname> CORBA interface.
</para>

<para>
  The routines in this module enable you to create a GnomeStream that
  will be backed up by a file.
</para>


<!-- ##### FUNCTION gnome_embeddable_factory_set ##### -->
<para>

</para>

@c_factory: 
@factory: 
@data: 

<!-- ##### FUNCTION gnome_ui_handler_menu_get_sensitivity ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_add_one ##### -->
<para>

</para>

@uih: 
@parent_path: 
@item: 

<!-- ##### MACRO GNOME_OBJECT_TYPE ##### -->
<para>
Returns the #GtkType for the GnomeObject object.
</para>


<!-- ##### FUNCTION gnome_object_construct ##### -->
<para>

</para>

@object: 
@corba_object: 
@Returns: 

<!-- ##### VARIABLE gnome_client_site_epv ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_get_accelgroup ##### -->
<para>

</para>

@uih: 
@Returns: 

<!-- ##### FUNCTION gnome_persist_stream_new ##### -->
<para>

</para>

@goad_id: 
@load_fn: 
@save_fn: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_free_tree ##### -->
<para>

</para>

@item: 

<!-- ##### VARIABLE gnome_storage_epv ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-embeddable-factory.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-view.sgml:Long_Description ##### -->
<para>
   #GnomeView objects are typically created on the view factory
   callback of a #GnomeEmbeddable object.  Bonobo components should be
   able to provide as many view objects as requested by the
   #GnomeEmbeddable object on demand.
</para>

<para>
   It is the programmer responsability to keep the contents of all the
   views displaying the same information (modulo per-view state, like
   the zoom factor).
</para>

<para>
   If your component provides menus, then you use the
   gnome_view_set_ui_handler() on your view to provide it with a set
   of menus and toolbars.   You can also retrieve the container's UI
   handler using gnome_view_get_ui_handler().
</para>

<para>
   You can register verbs in the View by using the
   gnome_view_register_verb().  When you want to stop supporting a
   verb, you can use the gnome_view_unregister_verb().  Alternatively,
   you can hook up to the "do_verb" signal and catch the verb requests
   on the signal handler.
</para>

<para>
   #GnomeView objects get a chance to tell their containers their
   desired size by responding to the "size_query" signal.  They will
   get their size assigned later.  The size assignment happens on the
   GtkWidget using the normal Gtk+ size allocation procedure.
</para>

<para>
   If your component supports zooming, connect to the
   "set_zoom_factor" signal.  This signal takes a floating point value
   that indicates the desired zoom factor requested by your container.
</para>


<!-- ##### SECTION ./tmpl/gnome-persist-stream.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### STRUCT GnomeUIHandlerMenuItem ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-storage-private.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-bind-context.sgml:Title ##### -->
GnomeBindContext


<!-- ##### FUNCTION gnome_embeddable_corba_object_create ##### -->
<para>

</para>

@object: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_new_toggleitem ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### FUNCTION gnome_view_frame_set_ui_handler ##### -->
<para>

</para>

@view_frame: 
@uih: 

<!-- ##### SECTION ./tmpl/gnome-storage-driver.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-component-io.sgml:Title ##### -->
gnome-component-io


<!-- ##### FUNCTION gnome_view_register_verb ##### -->
<para>

</para>

@view: 
@verb_name: 
@callback: 
@user_data: 

<!-- ##### VARIABLE gnome_container_epv ##### -->
<para>
   This is the CORBA Entry Point Vector (EPV) of GnomeContainer that
   provides the implementaion for the GNOME::Container interface.  Use
   this to construct your CORBA VEPV when deriving objects from
   GnomeContainer.
</para>


<!-- ##### STRUCT GnomeStorageFS ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_object_add_interface ##### -->
<para>

</para>

@object: 
@newobj: 

<!-- ##### STRUCT GnomeVerb ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_factory_construct ##### -->
<para>

</para>

@goad_id: 
@c_factory: 
@corba_factory: 
@factory: 
@data: 
@Returns: 

<!-- ##### MACRO GNOME_STORAGE_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_client_new_view ##### -->
<para>

</para>

@server_object: 
@client_site: 
@Returns: 

<!-- ##### USER_FUNCTION GnomeViewVerbFunc ##### -->
<para>

</para>

@view: 
@verb_name: 
@user_data: 

<!-- ##### SECTION ./tmpl/gnome-stream-fs.sgml:Short_Description ##### -->
A file-based GnomeStream implementation


<!-- ##### FUNCTION gnome_view_frame_view_deactivate ##### -->
<para>

</para>

@view_frame: 

<!-- ##### FUNCTION gnome_persist_stream_construct ##### -->
<para>

</para>

@ps: 
@corba_ps: 
@goad_id: 
@load_fn: 
@save_fn: 
@closure: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-composite-moniker.sgml:Short_Description ##### -->



<!-- ##### MACRO GNOME_VIEW_TYPE ##### -->
<para>
   Returns the GtkType associated with the #GnomeView object.
</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_remove ##### -->
<para>

</para>

@uih: 
@path: 

<!-- ##### SECTION ./tmpl/gnome-object.sgml:Short_Description ##### -->
Base object for wrapping GNOME::Unknown derived objects.


<!-- ##### STRUCT GnomeBonoboSelectorPrivate ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-stream-client.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_add_verbs ##### -->
<para>

</para>

@bonobo_object: 
@verbs: 
@verb_list: 

<!-- ##### STRUCT GnomeUIHandlerToolbarItem ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-file-moniker.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SIGNAL GnomeView::size_query ##### -->
<para>
   This signal is emitted to request the GnomeView to provide its
   desired size.  The arguments @desired_width and @desired_height are
   pointers to integers that must be filled in with the View's desired size.
</para>

@desired_width: 
@desired_height: 

<!-- ##### SECTION ./tmpl/gnome-storage-fs.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-inplace-component.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_client_activate ##### -->
<para>

</para>

@client_object: 

<!-- ##### FUNCTION gnome_embeddable_save ##### -->
<para>

</para>

@bonobo_object: 
@storage: 
@same_as_loaded: 
@Returns: 

<!-- ##### FUNCTION gnome_bonobo_select_goad_id ##### -->
<para>

</para>

@title: 
@interfaces_required: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_set_pixmap ##### -->
<para>

</para>

@uih: 
@path: 
@type: 
@data: 

<!-- ##### SECTION ./tmpl/gnome-stream.sgml:See_Also ##### -->
<para>
   <classname>GnomeStreamFile</classname>, <classname>GnomeStreamMem</classname>
</para>


<!-- ##### SECTION ./tmpl/gnome-persist-file.sgml:Title ##### -->
GnomePersistFile


<!-- ##### SECTION ./tmpl/gnome-bind-context.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_client_deactivate ##### -->
<para>

</para>

@client_object: 

<!-- ##### FUNCTION gnome_ui_handler_menu_parse_uiinfo_list ##### -->
<para>

</para>

@uii: 
@Returns: 

<!-- ##### FUNCTION gnome_view_frame_new ##### -->
<para>

</para>

@client_site: 
@Returns: 

<!-- ##### ENUM GnomeUIHandlerPixmapType ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_new_subtree ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@pixmap_type: 
@pixmap_data: 
@accelerator_key: 
@ac_mods: 

<!-- ##### FUNCTION gnome_ui_handler_menu_get_toggle_state ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_view_unregister_verb ##### -->
<para>

</para>

@view: 
@verb_name: 

<!-- ##### SECTION ./tmpl/gnome-unknown-client.sgml:Title ##### -->
GnomeObjectClient


<!-- ##### SECTION ./tmpl/bonobo-storage-priv.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-component-directory.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-bind-context.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-storage-repo.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-progressive.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_client_site_new_view ##### -->
<para>

</para>

@client_site: 
@Returns: 

<!-- ##### FUNCTION gnome_view_set_embeddable ##### -->
<para>

</para>

@view: 
@embeddable: 

<!-- ##### SECTION ./tmpl/gnome-storage.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-storage-private.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-simple-source.sgml:Title ##### -->
GnomeSimpleDataSource


<!-- ##### ENUM GnomeComponentFunctionality ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_view_get_view_frame ##### -->
<para>

</para>

@view: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-persist.sgml:Title ##### -->
GnomePersist


<!-- ##### SECTION ./tmpl/gnome-client-site.sgml:See_Also ##### -->
<para>
  #GnomeEmbeddable #GnomeContainer #GnomeObjectClient #GnomeViewFrame
</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_parse_uiinfo_list_with_data ##### -->
<para>

</para>

@uii: 
@data: 
@Returns: 

<!-- ##### MACRO GNOME_STREAM_REPO_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-storage-driver.sgml:Title ##### -->
gnome-storage-driver


<!-- ##### SECTION ./tmpl/gnome-main.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-inplace-site.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_client_site_bind_embeddable ##### -->
<para>

</para>

@client_site: 
@object: 
@Returns: 

<!-- ##### MACRO GNOME_STREAM_FS_TYPE ##### -->
<para>
  Returns the GtkType associated with the
  <classname>GnomeStreamFS</classname> object
</para>


<!-- ##### FUNCTION gnome_bind_context_construct ##### -->
<para>

</para>

@bindctx: 
@corba_bindctx: 
@Returns: 

<!-- ##### FUNCTION gnome_component_directory_get ##### -->
<para>

</para>

@Returns: 

<!-- ##### FUNCTION gnome_object_activate ##### -->
<para>

</para>

@object_desc: 
@flags: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_new_separator ##### -->
<para>

</para>

@uih: 
@path: 
@pos: 

<!-- ##### SECTION ./tmpl/gnome-persist-stream.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_bonobo_selector_new ##### -->
<para>

</para>

@title: 
@interfaces_required: 
@Returns: 

<!-- ##### FUNCTION gnome_view_frame_construct ##### -->
<para>

</para>

@view_frame: 
@corba_view_frame: 
@wrapper: 
@client_site: 
@Returns: 

<!-- ##### FUNCTION gnome_storage_driver_new ##### -->
<para>

</para>

@type: 
@path: 
@open_mode: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-moniker.sgml:Title ##### -->
GnomeMoniker


<!-- ##### SECTION ./tmpl/gnome-progressive.sgml:Title ##### -->
GnomeProgressiveDataSink


<!-- ##### SECTION ./tmpl/gnome-ui-handler.sgml:Short_Description ##### -->



<!-- ##### MACRO GNOME_STORAGE_FS_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_set_menubar ##### -->
<para>

</para>

@uih: 
@menubar: 

<!-- ##### SIGNAL GnomeView::do_verb ##### -->
<para>
   This signal is emitted when the container requests the view to
   execute the verb name @verb.  You can install a verb handler if you
   preffer using the gnome_view_register_verb() function.
</para>

@verb: 

<!-- ##### SECTION ./tmpl/gnome-embeddable.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_view_get_ui_handler ##### -->
<para>

</para>

@view: 
@Returns: 

<!-- ##### FUNCTION gnome_stream_repo_create ##### -->
<para>

</para>

@storage: 
@path: 
@Returns: 

<!-- ##### VARIABLE gnome_persist_epv ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_load ##### -->
<para>

</para>

@storage: 
@interface: 
@client_site: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-moniker-client.sgml:Title ##### -->
gnome-moniker-client


<!-- ##### VARIABLE gnome_stream_epv ##### -->
<para>
   This is the CORBA Entry Point Vector (EPV) of GnomeStream that
   provides the implementaion for the GNOME::Stream base interface.
   Use this to construct your CORBA VEPV when deriving objects from
   GnomeStream.
</para>


<!-- ##### SECTION ./tmpl/gnome-persist-stream.sgml:Title ##### -->
GnomePersistStream


<!-- ##### FUNCTION gnome_object_bind_to_servant ##### -->
<para>

</para>

@object: 
@servant: 

<!-- ##### FUNCTION gnome_object_client_construct ##### -->
<para>

</para>

@object_client: 
@corba_object: 
@Returns: 

<!-- ##### FUNCTION gnome_moniker_register ##### -->
<para>

</para>

@moniker: 
@name: 
@goad_id: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_remove ##### -->
<para>

</para>

@uih: 
@path: 

<!-- ##### SECTION ./tmpl/gnome-persist-file.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-storage-repo.sgml:Short_Description ##### -->



<!-- ##### SIGNAL GnomeView::set_zoom_factor ##### -->
<para>
   This signal is emitted when the container requests the view to
   set its zoom factor to @zoom.  The view should respond by setting
   its zoom factor to the specified value.
</para>

@zoom: 

<!-- ##### FUNCTION gnome_view_construct ##### -->
<para>

</para>

@view: 
@corba_view: 
@widget: 
@Returns: 

<!-- ##### ENUM GnomeUIHandlerMenuItemType ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_set_callback ##### -->
<para>

</para>

@uih: 
@path: 
@callback: 
@callback_data: 

<!-- ##### USER_FUNCTION GnomeProgressiveDataSinkSetSizeFn ##### -->
<para>

</para>

@psink: 
@count: 
@closure: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-memory.sgml:Title ##### -->
GnomeStreamMem


<!-- ##### FUNCTION gnome_ui_handler_set_container ##### -->
<para>

</para>

@uih: 
@container: 

<!-- ##### FUNCTION gnome_wrapper_new ##### -->
<para>

</para>

@Returns: 

<!-- ##### FUNCTION gnome_bonobo_selector_get_selected_goad_id ##### -->
<para>

</para>

@sel: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_get_label ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-item-moniker.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-embeddable-factory.sgml:Title ##### -->
GnomeEmbeddableFactory


<!-- ##### FUNCTION gnome_composite_moniker_new ##### -->
<para>

</para>

@head: 
@tail: 
@Returns: 

<!-- ##### FUNCTION gnome_storage_fs_construct ##### -->
<para>

</para>

@storage: 
@corba_storage: 
@path: 
@open_mode: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_new_radioitem ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### SECTION ./tmpl/gnome-bind-context.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/bonobo-audio-ulaw.sgml:Title ##### -->
bonobo-audio-ulaw


<!-- ##### MACRO GNOME_PERSIST_STREAM_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_view_frame_set_covered ##### -->
<para>

</para>

@view_frame: 
@covered: 

<!-- ##### FUNCTION gnome_simple_data_source_construct ##### -->
<para>

</para>

@ssource: 
@corba_ssource: 
@pop_data_fn: 
@remaining_data_fn: 
@closure: 
@Returns: 

<!-- ##### USER_FUNCTION GnomePersistFileIOFn ##### -->
<para>

</para>

@pf: 
@filename: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_set_label ##### -->
<para>

</para>

@uih: 
@path: 
@label: 

<!-- ##### SECTION ./tmpl/gnome-component-directory.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-wrapper.sgml:See_Also ##### -->
<para>
   #GtkWidget #GnomeView #GnomeViewFrame
</para>


<!-- ##### FUNCTION gnome_view_frame_get_ui_handler ##### -->
<para>

</para>

@view_frame: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-progressive.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_object_restore_from_url ##### -->
<para>

</para>

@goad_id: 
@url: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-unknown-client.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-storage-private.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_storage_open ##### -->
<para>

</para>

@driver: 
@path: 
@flags: 
@mode: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-client-site.sgml:Long_Description ##### -->
<para>
   The <classname>GnomeClientSite</classname> implements the
   <classname>GNOME::ClientSite</classname> CORBA interface.  It acts
   as the container-side contact for
   <classname>GnomeEmbeddable</classname> objects.
</para>

<para>
   For each object embedded in your application, you should create a
   <classname>GnomeClientSite</classname> object.  
</para>

<para>
   Once you have a handle on a remote object that implements the
   <classname>GNOME::Embeddable</classname> interface (typically
   returned by gnome_object_activate_with_goad_id() or
   gnome_object_activate () or wrapper with
   gnome_object_client_from_corba ()) of type
   <classname>GnomeObjectClient</classname>), you will have to bind
   this object to the <classname>GnomeClientSite</classname> using the
   gnome_client_site_bind_embeddable ().  Once this is done, you will
   be able to request a #GnomeView on the #GnomeClientSite.  
</para>

<para>
   The #GnomeClientSite object also provides access to the remote
   GnomeEmbeddable object's verb list.  
</para>

<example>
   <title>Sample usage</title>

   <para>
      This demostrates the use of the #GnomeClientSite object.  This
      launches the object specified, creates a #GnomeClientSite,
      then requests a new #GnomeViewFrame and finally it returns the
      widget that represents that component.
   </para>
      
   <programlisting>
GtkWidget *
create_widget_from_component (GnomeContainer *container, const char *goad_id)
{
	GnomeObjectClient *server;
	GnomeClientSite   *client_site;
	GnomeViewFrame    *view_frame;

	/*
	 * Launch the requested component
	 */
	server = gnome_object_activate (goad_id, 0);
	if (!server){
		printf ("Could not activate the server");
		return NULL;
	}

	client_site = gnome_client_site_new (app->container);

	/*
	 * Add this client site to the container
	 */
	gnome_container_add (container, GNOME_OBJECT (client_site));

	/*
	 * Bind the component to the client site
	 */
	gnome_client_site_bind_embeddable (client_site, server);

	/*
	 * Create a new GnomeView, and then get a GtkWidget
	 */
	view_frame = gnome_client_site_embeddable_new_view (client_site);

	/*
	 * Get the widget for this view.
	 */

	 return gnome_view_frame_get_wrapper (view_frame);
}

   </programlisting>
</example>


<!-- ##### SECTION ./tmpl/gnome-client-site.sgml:Short_Description ##### -->
Container side object embedding server.


<!-- ##### MACRO GNOME_PROGRESSIVE_DATA_SINK_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-persist.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-persist-stream.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-main.sgml:Long_Description ##### -->
<para>
  Initialization functions for Bonobo applications.
</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_free_list ##### -->
<para>

</para>

@item: 

<!-- ##### FUNCTION gnome_ui_handler_unset_container ##### -->
<para>

</para>

@uih: 

<!-- ##### MACRO GNOME_STORAGE_REPO_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_bonobo_select_activate ##### -->
<para>

</para>

@title: 
@interfaces_required: 
@flags: 
@Returns: 

<!-- ##### TYPEDEF GnomeClientSiteList ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_radio_get_state ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-embeddable.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SIGNAL GnomeView::view_activate ##### -->
<para>
   Emmited when the activation state for the view is requested to
   change.  The gboolean @activate argument is %TRUE when the View is
   being asked to become active, and %FALSE when it is asked to
   deactivate.
</para>

@activate: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_fetch_by_callback ##### -->
<para>

</para>

@uih: 
@callback: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_get_pixmap ##### -->
<para>

</para>

@uih: 
@path: 
@type: 
@data: 

<!-- ##### FUNCTION gnome_object_check_env ##### -->
<para>

</para>

@object: 
@corba_object: 
@ev: 

<!-- ##### FUNCTION gnome_embeddable_new ##### -->
<para>

</para>

@factory: 
@data: 
@Returns: 

<!-- ##### FUNCTION gnome_embeddable_client_new_view_simple ##### -->
<para>

</para>

@server_object: 
@client_site: 
@Returns: 

<!-- ##### USER_FUNCTION GnomeProgressiveDataSinkAddDataFn ##### -->
<para>

</para>

@psink: 
@buffer: 
@closure: 
@Returns: 

<!-- ##### MACRO GNOME_SS_READ ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-stream-repo.sgml:Title ##### -->
GnomeStreamREPO


<!-- ##### SECTION ./tmpl/gnome-inplace-site.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_add_tree ##### -->
<para>

</para>

@uih: 
@parent_path: 
@item: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_radio_set_state ##### -->
<para>

</para>

@uih: 
@path: 
@state: 

<!-- ##### FUNCTION gnome_ui_handler_menu_fetch_tree ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_stream_fs_construct ##### -->
<para>

</para>

@stream: 
@corba_stream: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-storage-repo.sgml:Title ##### -->
GnomeStorageREPO


<!-- ##### FUNCTION gnome_persist_file_construct ##### -->
<para>

</para>

@ps: 
@corba_ps: 
@goad_id: 
@load_fn: 
@save_fn: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_view_get_embeddable ##### -->
<para>

</para>

@view: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-fs.sgml:See_Also ##### -->
<para>
   <classname>GnomeStreamFile</classname>, <classname>GnomeStreamMem</classname>
</para>


<!-- ##### FUNCTION gnome_progressive_data_sink_new ##### -->
<para>

</para>

@start_fn: 
@end_fn: 
@add_data_fn: 
@set_size_fn: 
@closure: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-moniker.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_wrapper_set_covered ##### -->
<para>

</para>

@wrapper: 
@covered: 

<!-- ##### VARIABLE gnome_persist_file_epv ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_stream_client_write ##### -->
<para>

</para>

@stream: 
@buffer: 
@size: 
@ev: 
@Returns: 

<!-- ##### FUNCTION gnome_object_corba_objref ##### -->
<para>

</para>

@object: 
@Returns: 

<!-- ##### USER_FUNCTION GnomeProgressiveDataSinkEndFn ##### -->
<para>

</para>

@psink: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_parse_uiinfo_tree_with_data ##### -->
<para>

</para>

@uii: 
@data: 
@Returns: 

<!-- ##### FUNCTION gnome_embeddable_factory_new ##### -->
<para>

</para>

@goad_id: 
@factory: 
@data: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-item-moniker.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-item-moniker.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_moniker_set_server ##### -->
<para>

</para>

@moniker: 
@goad_id: 
@filename: 

<!-- ##### FUNCTION gnome_object_unref ##### -->
<para>

</para>

@object: 

<!-- ##### FUNCTION gnome_ui_handler_menu_fetch_by_callback_data ##### -->
<para>

</para>

@uih: 
@callback_data: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-embeddable-factory.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_new ##### -->
<para>

</para>

@uih: 
@path: 
@type: 
@label: 
@hint: 
@pos: 
@pixmap_type: 
@pixmap_data: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### FUNCTION gnome_file_moniker_construct ##### -->
<para>

</para>

@gfm: 
@gfm_corba: 
@filename: 
@goad_id: 
@Returns: 

<!-- ##### FUNCTION gnome_object_get_servant ##### -->
<para>

</para>

@object: 
@Returns: 

<!-- ##### FUNCTION gnome_view_client_do_verb ##### -->
<para>

</para>

@view: 
@verb: 

<!-- ##### FUNCTION gnome_embeddable_construct ##### -->
<para>

</para>

@bonobo_object: 
@corba_bonobo_object: 
@factory: 
@data: 
@Returns: 

<!-- ##### FUNCTION gnome_inplace_bonobo_object_new ##### -->
<para>

</para>

@factory: 
@data: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-storage.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_ui_handler_menu_set_toggle_state ##### -->
<para>

</para>

@uih: 
@path: 
@state: 

<!-- ##### FUNCTION gnome_view_frame_get_view ##### -->
<para>

</para>

@view_frame: 
@Returns: 

<!-- ##### FUNCTION gnome_view_frame_view_do_verb ##### -->
<para>

</para>

@view_frame: 
@verb_name: 

<!-- ##### SECTION ./tmpl/gnome-wrapper.sgml:Long_Description ##### -->
<para>
   This is a GtkWidget that acts as a cover on top of another
   GtkWidget.  It enables you to control whether the containee can or
   can not receive events.
</para>

<para>
   It is used by the GnomeViewFrame object initialization to cover the
   embedded component and provide control of event delivery on the
   containee.  You should not control this wrapper directly when
   manipulating Bonobo components.  You should use the
   gnome_view_set_frame_set_covered() for #GnomeView objects.
</para>


<!-- ##### SECTION ./tmpl/gnome-wrapper.sgml:Short_Description ##### -->
Helper widget for controlling event delivery to embedded components


<!-- ##### FUNCTION gnome_ui_handler_toolbar_new_separator ##### -->
<para>

</para>

@uih: 
@path: 
@pos: 

<!-- ##### MACRO GNOME_PERSIST_FILE_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-stream-repo.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_object_from_servant ##### -->
<para>

</para>

@servant: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream.sgml:Short_Description ##### -->
Abstract object for file (stream) access.


<!-- ##### MACRO GNOME_SS_EXCL ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-storage-private.sgml:Title ##### -->
gnome-storage-private


<!-- ##### STRUCT view_data_t ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_load_from_stream ##### -->
<para>

</para>

@stream: 
@interface: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-repo.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_stream_fs_open ##### -->
<para>

</para>

@path: 
@mode: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-client.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_fetch ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-file-moniker.sgml:Title ##### -->
GnomeFileMoniker


<!-- ##### MACRO GNOME_MONIKER_TYPE ##### -->
<para>

</para>


<!-- ##### MACRO GNOME_OBJECT_CLIENT_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_stream_fs_create ##### -->
<para>

</para>

@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-inplace-component.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_inplace_site_new ##### -->
<para>

</para>

@container: 
@Returns: 

<!-- ##### FUNCTION gnome_moniker_append_item_name ##### -->
<para>

</para>

@moniker: 
@item_name: 

<!-- ##### VARIABLE gnome_object_base_epv ##### -->
<para>
   This is the CORBA Entry Point Vector (EPV) of the base GnomeObject
   that provides the implementaion for the GNOME::Unknown interface.
   Use this to construct your CORBA VEPV when deriving objects from
   GnomeObject.
</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_get_radio_state ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_client_site_new ##### -->
<para>

</para>

@container: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-component-io.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-embeddable-client.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION GnomeEmbeddableFactoryFn ##### -->
<para>

</para>

@Factory: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_component_activate ##### -->
<para>

</para>

@slist: 
@entry: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_add_tree ##### -->
<para>

</para>

@uih: 
@parent_path: 
@tree: 

<!-- ##### FUNCTION gnome_ui_handler_menu_parse_uiinfo_one_with_data ##### -->
<para>

</para>

@uii: 
@data: 
@Returns: 

<!-- ##### SECTION ./tmpl/bonobo-storage-priv.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-composite-moniker.sgml:Title ##### -->
GnomeCompositeMoniker


<!-- ##### FUNCTION gnome_container_new ##### -->
<para>

</para>

@Returns: 

<!-- ##### FUNCTION gnome_item_moniker_new ##### -->
<para>

</para>

@delimiter: 
@item_name: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-persist.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-view-frame.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### MACRO GNOME_INPLACE_SITE_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-bonobo-selector.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-storage-driver.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_ui_handler_toolbar_fetch_by_callback_data ##### -->
<para>

</para>

@uih: 
@callback_data: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-memory.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_set_toolbar ##### -->
<para>

</para>

@uih: 
@name: 
@toolbar: 

<!-- ##### FUNCTION gnome_storage_construct ##### -->
<para>

</para>

@storage: 
@corba_storage: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-component-directory.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-moniker.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### STRUCT GnomeComponentDirectoryEntry ##### -->
<para>

</para>


<!-- ##### MACRO GNOME_UI_HANDLER_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-stream-client.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_storage_repo_create ##### -->
<para>

</para>

@storage_repo: 
@path: 
@Returns: 

<!-- ##### VARIABLE gnome_simple_data_source_epv ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_storage_fs_open ##### -->
<para>

</para>

@path: 
@mode: 
@Returns: 

<!-- ##### FUNCTION gnome_object_destroy ##### -->
<para>

</para>

@object: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_set_sensitivity ##### -->
<para>

</para>

@uih: 
@path: 
@sensitive: 

<!-- ##### FUNCTION gnome_ui_handler_menu_set_sensitivity ##### -->
<para>

</para>

@uih: 
@path: 
@sensitive: 

<!-- ##### SECTION ./tmpl/gnome-ui-handler.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_component_directory_free ##### -->
<para>

</para>

@dir: 

<!-- ##### SECTION ./tmpl/gnome-main.sgml:Short_Description ##### -->
Bonobo initialization.


<!-- ##### MACRO GNOME_PERSIST_TYPE ##### -->
<para>

</para>


<!-- ##### VARIABLE gnome_stream_vepv ##### -->
<para>
   This is the CORBA Vector of EPVs (VEPV) of GnomeStream that
   provides the implementaion for the GNOME::Stream interface.
</para>


<!-- ##### SECTION ./tmpl/gnome-simple-source.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_persist_construct ##### -->
<para>

</para>

@persist: 
@corba_persist: 
@goad_id: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-view.sgml:Title ##### -->
GnomeView


<!-- ##### FUNCTION gnome_view_frame_view_activate ##### -->
<para>

</para>

@view_frame: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_parse_uiinfo_one ##### -->
<para>

</para>

@uih: 
@uii: 
@Returns: 

<!-- ##### FUNCTION gnome_stream_repo_open ##### -->
<para>

</para>

@storage: 
@path: 
@mode: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-repo.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_inplace_bonobo_object_construct ##### -->
<para>

</para>

@inplace: 
@corba_inplace: 
@factory: 
@data: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-object.sgml:See_Also ##### -->
<para>
#GtkObject
</para>


<!-- ##### FUNCTION gnome_ui_handler_create_popup_menu ##### -->
<para>

</para>

@uih: 

<!-- ##### STRUCT GnomeStorageMem ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION GnomeUIHandlerCallbackFunc ##### -->
<para>

</para>

@uih: 
@user_data: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-stream-memory.sgml:Short_Description ##### -->



<!-- ##### MACRO GNOME_SS_CREATE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_get_callback ##### -->
<para>

</para>

@uih: 
@path: 
@callback: 
@callback_data: 

<!-- ##### SECTION ./tmpl/gnome-embeddable.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_moniker_unregister ##### -->
<para>

</para>

@moniker: 

<!-- ##### SECTION ./tmpl/gnome-ui-handler.sgml:Title ##### -->
GnomeUIHandler


<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_hint ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_fetch_by_callback ##### -->
<para>

</para>

@uih: 
@callback: 
@Returns: 

<!-- ##### USER_FUNCTION GnomeSimpleDataSourceRemainingDataFn ##### -->
<para>

</para>

@ssource: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_parse_uiinfo_tree ##### -->
<para>

</para>

@uih: 
@uii: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-embeddable-factory.sgml:Short_Description ##### -->



<!-- ##### VARIABLE gnome_persist_stream_epv ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-stream.sgml:Title ##### -->
GnomeStream


<!-- ##### FUNCTION gnome_ui_handler_toolbar_new_item ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@pixmap_type: 
@pixmap_data: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### MACRO GNOME_VIEW_FRAME_TYPE ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-embeddable-client.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-embeddable-client.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### STRUCT GnomeComponentDirectory ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_view_corba_object_create ##### -->
<para>

</para>

@object: 
@Returns: 

<!-- ##### FUNCTION gnome_bind_context_new ##### -->
<para>

</para>

@Returns: 

<!-- ##### SECTION ./tmpl/gnome-bonobo-selector.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-storage-fs.sgml:Title ##### -->
GnomeStorageFS


<!-- ##### FUNCTION gnome_ui_handler_toolbar_add_list ##### -->
<para>

</para>

@uih: 
@parent_path: 
@item: 

<!-- ##### MACRO GNOME_SS_WRITE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_new_subtree ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@pixmap_type: 
@pixmap_data: 
@accelerator_key: 
@ac_mods: 

<!-- ##### STRUCT GnomeStoragePrivate ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION GnomePersistStreamMaxFn ##### -->
<para>

</para>

@ps: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_fetch_list ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-bonobo.sgml:Title ##### -->
gnome-bonobo


<!-- ##### FUNCTION gnome_inplace_site_construct ##### -->
<para>

</para>

@inplace_site: 
@corba_inplace_site: 
@container: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_create_menubar ##### -->
<para>

</para>

@uih: 

<!-- ##### SECTION ./tmpl/gnome-view-frame.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-unknown-client.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### STRUCT GnomeObjectServant ##### -->
<para>
  This structure defines the type for GnomeObject-based CORBA servants.
</para>

<para>
  #GnomeObject provides a mapping from the servant to the #GnomeObject
  by using the gnome_object field in the structure.  Typically in the
  C CORBA binding, per-servant information is piggy-backed to the POA
  servant.  With the GnomeObject setup per-servant information is
  typically attached to the GnomeObject (by using the regular
  inheritance mechanism of Gtk+).  Going from a
  #PortableServer_Servant to the actual #GnomeObject is accomplished 
  using the gnome_object_from_servant() routine.  
</para>

<para>
  If you decide not to use this scheme for fetching your per-servant
  information, but still want to inherit from a #GnomeObject object,
  just make sure that the second field of your servant is a gpointer.
</para>


<!-- ##### FUNCTION gnome_object_query_interface ##### -->
<para>

</para>

@object: 
@repo_id: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-moniker-client.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-view.sgml:Short_Description ##### -->
View object for exporting a view of a GnomeEmbeddable component


<!-- ##### FUNCTION gnome_storage_fs_create ##### -->
<para>

</para>

@storage_fs: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-container.sgml:See_Also ##### -->
<para>
   #GnomeMoniker, #GnomeObject.
</para>


<!-- ##### SIGNAL GnomeView::view_undo_last_operation ##### -->
<para>
   This signal is emitted after the signal view_activate if the
   user has selected the undo operation on the container and the last
   operation done was done by the component.
</para>

<para>
   The code should undo its last operation when it catches this signal.
</para>


<!-- ##### FUNCTION gnome_ui_handler_get_menubar ##### -->
<para>

</para>

@uih: 
@Returns: 

<!-- ##### FUNCTION gnome_object_activate_with_repo_id ##### -->
<para>

</para>

@list: 
@repo_id: 
@flags: 
@params: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_new ##### -->
<para>

</para>

@Returns: 

<!-- ##### MACRO GNOME_SS_RDWR ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-view-frame.sgml:Title ##### -->
GnomeViewFrame


<!-- ##### FUNCTION gnome_ui_handler_get_toolbar_list ##### -->
<para>

</para>

@uih: 
@Returns: 

<!-- ##### FUNCTION gnome_persist_stream_set_dirty ##### -->
<para>

</para>

@ps: 
@dirty: 

<!-- ##### SECTION ./tmpl/gnome-stream-client.sgml:Title ##### -->
gnome-stream-client


<!-- ##### FUNCTION gnome_ui_handler_toolbar_toggle_get_state ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-ui-handler.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_storage_driver_open ##### -->
<para>

</para>

@path: 
@flags: 
@mode: 
@Returns: 

<!-- ##### FUNCTION gnome_embeddable_set_view_factory ##### -->
<para>

</para>

@bonobo_object: 
@factory: 
@data: 

<!-- ##### FUNCTION gnome_ui_handler_get_statusbar ##### -->
<para>

</para>

@uih: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-composite-moniker.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_parse_uiinfo_one ##### -->
<para>

</para>

@uii: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-storage-driver.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### STRUCT GnomeObjectPrivate ##### -->
<para>
   Private information kept by the GnomeObject.  This should not be
   used by GnomeObject users.
</para>


<!-- ##### FUNCTION gnome_object_ref ##### -->
<para>

</para>

@object: 

<!-- ##### USER_FUNCTION GnomeViewFactory ##### -->
<para>

</para>

@embeddable: 
@view_frame: 
@closure: 
@Returns: 
@bonobo_object: 

<!-- ##### SECTION ./tmpl/gnome-persist-file.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-client-site.sgml:Title ##### -->
GnomeClientSite


<!-- ##### FUNCTION gnome_ui_handler_toolbar_toggle_set_state ##### -->
<para>

</para>

@uih: 
@path: 
@state: 

<!-- ##### FUNCTION gnome_component_activate_for_url ##### -->
<para>

</para>

@slist: 
@dir: 
@url: 
@required_functionality: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-inplace-site.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-bonobo.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-object.sgml:Long_Description ##### -->
<para>
  GnomeObject is the base object in Bonobo for wrapping CORBA servers
  as Gtk+ objects.  
</para>

<para>
  The <classname>GNOME::Unknown</classname> interface (wrapped by
  GnomeObject) is the foundation for the component system: it provides
  life cycle management for objects as well as service discovery.
</para>

<para>
  The Bonobo interfaces are all based on the
  <classname>GNOME::Unknown</classname> interface.  This
  interface is very simple and provides two basic services:
  object lifetime management and object
  functionality-discovery.   This interface only contains three
  methods, here it is:

  <programlisting>
  module GNOME {
      interface Unknown {
          void void ref ();
          void void unref ();
          Object query_interface (in string repoid);
      };
  };
  </programlisting>
</para>

<para>
  The <function>ref()</function> and <function>unref()</function>
  methods are used to control the lifetime of an object.  The
  <function>query_interface</function> method is used to discover
  optional functionality provided by the object implementation.
</para>

<para>
  The lifetime management is based on reference counting: when a
  component is initially launched, it starts life with a reference
  count of one.  This reference is held by the component invoker.
  Each time a reference is kept to this object (say, you store a
  copy of the object in an array), the reference count is
  incremented.  Every time a reference goes out of scope, the
  reference count needs to be decremented.  When the reference
  count reaches zero, the component knows that there are no
  outstanding references to it, and it is safe to shutdown.  At
  this point, the component shuts down.
</para>

<para>
  It is possible to ask an object which implements the
  <classname>GNOME::Unknown</classname> interface if it supports
  other CORBA interfaces.  For example, it would be possible to
  ask an object whether it supports the
  "IDL:GNOME/EmbeddablePrint:1.0" interface to find out if it is
  possible to print its contents.  If the return value from
  invoking the <function>query_interface</function> method on the
  interface is CORBA_OBJECT_NIL, then we know that the requested interface
  is not supported.  Otherwise, we can invoke
  IDL:GNOME/EmbeddablePrint:1.0 methods on the returned CORBA
  Object.
</para>

<para>
  Clients of the <function>query_interface</function> method use
  it to discover dynamically if a component supports a given
  interface.  Sometimes the client code would require a specific
  interface to exist, but many times it is possible to operate in
  a "downgraded" mode.  You should design your code to be able to
  cope with the lack of interfaces in objects.  This will allow
  your program to deal with more components, and this also allows
  components to work in more situations.
</para>

<para>
  For example, a help browser can load an HTML renderer component and
  ask this component which sort of features are supported by it:
  <programlisting>
_animations (BrowserHTML html)

  BrowserControl control

  control = html->query_interface ("IDL:Browser/Control:1.0");
  if (control)
          control->stop_animations ();

  </programlisting>
</para>

<para>
  The return value of the query_interface invocation contains a
  reference to a CORBA object that is derived from the
  <classname>GNOME::Unknown</classname> interface or
  CORBA_OBJECT_NIL if the interface is not supported by the
  object.  And this interface would have been already
  <function>ref()</function>ed before it was returned.  It is up
  to the caller to call <function>unref()</function> when they are
  done using the interface.
</para>

<para>
  GnomeObject implements the GNOME::Unknown interface and exports the
  implementations of the methods in this class to simplify creating
  new objects that inherit from GNOME::Unknown.  This base object
  provides default implementations for the ref, unref and
  query_interface methods.
</para>

<para>
  Other implementations reuse this implementation by listing on their
  VEPV tables the gnome_object_epv entry point vector.
</para>

<para>
  The <classname>GNOME::Unknown</classname> interface is inspired
  by the Microsoft COM <classname>IUnknown</classname> interface
  but it has been translated into the CORBA world.
</para>


<!-- ##### FUNCTION gnome_file_moniker_new ##### -->
<para>

</para>

@filename: 
@goad_id: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_set_statusbar ##### -->
<para>

</para>

@uih: 
@statusbar: 

<!-- ##### SECTION ./tmpl/bonobo-audio-ulaw.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_get_hint ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-storage-fs.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-object-client.sgml:See_Also ##### -->
<para>
  #GnomeMoniker #GnomeObject
</para>


<!-- ##### MACRO GNOME_BIND_CONTEXT_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_wrapper_is_covered ##### -->
<para>

</para>

@wrapper: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_accel ##### -->
<para>

</para>

@uih: 
@path: 
@accelerator_key: 
@ac_mods: 

<!-- ##### USER_FUNCTION GnomePersistStreamIOFn ##### -->
<para>

</para>

@ps: 
@stream: 
@closure: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-bonobo.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_ui_handler_toolbar_set_pixmap ##### -->
<para>

</para>

@uih: 
@path: 
@type: 
@data: 

<!-- ##### FUNCTION gnome_ui_handler_menu_new_item ##### -->
<para>

</para>

@uih: 
@path: 
@label: 
@hint: 
@pos: 
@pixmap_type: 
@pixmap_data: 
@accelerator_key: 
@ac_mods: 
@callback: 
@callback_data: 

<!-- ##### SECTION ./tmpl/gnome-stream-fs.sgml:Title ##### -->
GnomeStreamFS


<!-- ##### FUNCTION gnome_view_frame_size_request ##### -->
<para>

</para>

@view_frame: 
@desired_width: 
@desired_height: 

<!-- ##### SECTION ./tmpl/gnome-file-moniker.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_object_activate_servant ##### -->
<para>

</para>

@object: 
@servant: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_build_path_v ##### -->
<para>

</para>

@path_components: 
@Returns: 

<!-- ##### MACRO GNOME_STREAM_MEM_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_container_add ##### -->
<para>

</para>

@container: 
@object: 

<!-- ##### USER_FUNCTION GnomeProgressiveDataSinkStartFn ##### -->
<para>

</para>

@psink: 
@closure: 
@Returns: 

<!-- ##### MACRO GNOME_STREAM_TYPE ##### -->
<para>
  Returns the GtkType associated with the
  <classname>GnomeStream</classname> object
</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_set_accel ##### -->
<para>

</para>

@uih: 
@path: 
@accelerator_key: 
@ac_mods: 

<!-- ##### FUNCTION gnome_inplace_site_set_moniker ##### -->
<para>

</para>

@inplace: 
@moniker: 

<!-- ##### SECTION ./tmpl/gnome-stream.sgml:Long_Description ##### -->
<para>
   This is an abstract class for the various Stream implementations in
   Bonobo.  There are at least: file based streams, memory based
   streams and structured storage streams.
</para>


<!-- ##### MACRO GNOME_OBJECT_EV ##### -->
<para>
   Fetches the <structname>CORBA_Environment</structname> field of a
   <classname>GnomeObject</classname>.
</para>

@o: 

<!-- ##### FUNCTION gnome_ui_handler_menu_add_list ##### -->
<para>

</para>

@uih: 
@parent_path: 
@array: 

<!-- ##### SECTION ./tmpl/gnome-bonobo-selector.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_new_radiogroup ##### -->
<para>

</para>

@uih: 
@path: 

<!-- ##### MACRO GNOME_CLIENT_SITE_TYPE ##### -->
<para>
  Returns the GtkType associated with the
  <classname>GnomeClientSite</classname> object. 
</para>


<!-- ##### FUNCTION gnome_embeddable_client_free_verbs ##### -->
<para>

</para>

@string_list: 

<!-- ##### MACRO GNOME_EMBEDDABLE_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_container_get_moniker ##### -->
<para>

</para>

@container: 
@Returns: 

<!-- ##### FUNCTION gnome_bonobo_selector_activate_selected ##### -->
<para>

</para>

@sel: 
@flags: 
@Returns: 

<!-- ##### FUNCTION gnome_client_site_construct ##### -->
<para>

</para>

@client_site: 
@corba_client_site: 
@container: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-view-frame.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-moniker.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_storage_repo_open ##### -->
<para>

</para>

@storage_repo: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_remove_containee ##### -->
<para>

</para>

@uih: 
@containee: 

<!-- ##### SECTION ./tmpl/gnome-storage-repo.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-progressive.sgml:Short_Description ##### -->



<!-- ##### ENUM GnomeUIHandlerToolbarItemType ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-inplace-component.sgml:Short_Description ##### -->



<!-- ##### VARIABLE gnome_object_epv ##### -->
<para>
   This is the CORBA Entry Point Vector (EPV) of GnomeObject that
   provides the implementaion for the GNOME::Unknown interface.  Use
   this to construct your CORBA VEPV when deriving objects from
   GnomeObject.
</para>

<para>
   All Bonobo CORBA servers expose their epv vectors to enable
   programmers to fill in their CORBA VEPVs for any piece of code that
   wants to inherit the implementation.
</para>


<!-- ##### FUNCTION gnome_view_frame_get_wrapper ##### -->
<para>

</para>

@view_frame: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-item-moniker.sgml:Title ##### -->
GnomeItemMoniker


<!-- ##### FUNCTION gnome_ui_handler_set_app ##### -->
<para>

</para>

@uih: 
@app: 

<!-- ##### SECTION ./tmpl/gnome-moniker-client.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-moniker-client.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-file-moniker.sgml:Short_Description ##### -->



<!-- ##### FUNCTION gnome_container_construct ##### -->
<para>

</para>

@container: 
@container_corba: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-container.sgml:Long_Description ##### -->
<para>
   #GnomeContainer implements the
   <classname>GNOME::Container</classname> interface.  This interface
   is used by components that embedd other components.  It basically
   exposes to client users the names of the sub-components and enables
   a client to fetch these objects.
</para>

<para>
   A <classname>GnomeComponent</classname> is involved during the
   process of a moniker resolution for sub-objects.
</para>


<!-- ##### FUNCTION gnome_object_activate_with_goad_id ##### -->
<para>

</para>

@list: 
@goad_id: 
@flags: 
@params: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-storage.sgml:Title ##### -->
GnomeStorage


<!-- ##### FUNCTION gnome_ui_handler_set_accelgroup ##### -->
<para>

</para>

@uih: 
@accelgroup: 

<!-- ##### FUNCTION gnome_progressive_data_sink_construct ##### -->
<para>

</para>

@psink: 
@corba_psink: 
@start_fn: 
@end_fn: 
@add_data_fn: 
@set_size_fn: 
@closure: 
@Returns: 

<!-- ##### MACRO GNOME_EMBEDDABLE_FACTORY_TYPE ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_embeddable_save_to_stream ##### -->
<para>

</para>

@bonobo_object: 
@stream: 
@Returns: 

<!-- ##### SECTION ./tmpl/bonobo-storage-priv.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-inplace-site.sgml:Title ##### -->
GnomeInPlaceSite


<!-- ##### FUNCTION gnome_persist_file_new ##### -->
<para>

</para>

@goad_id: 
@load_fn: 
@save_fn: 
@closure: 
@Returns: 

<!-- ##### USER_FUNCTION GnomeSimpleDataSourcePopDataFn ##### -->
<para>

</para>

@ssource: 
@count: 
@buffer: 
@closure: 
@Returns: 

<!-- ##### FUNCTION gnome_get_class_id_from_file ##### -->
<para>

</para>

@filename: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_do_popup_menu ##### -->
<para>

</para>

@uih: 

<!-- ##### SECTION ./tmpl/gnome-wrapper.sgml:Title ##### -->
GnomeWrapper


<!-- ##### SECTION ./tmpl/gnome-component-io.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_client_site_free_verbs ##### -->
<para>

</para>

@string_list: 

<!-- ##### SECTION ./tmpl/gnome-container.sgml:Title ##### -->
GnomeContainer


<!-- ##### VARIABLE gnome_object_vepv ##### -->
<para>
<para>
   This is the CORBA Vector of EPVs (VEPV) of GnomeObject that
   provides the implementaion for the GNOME::Unknown interface.
</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_fetch_one ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_remove_toolbar ##### -->
<para>

</para>

@uih: 
@name: 

<!-- ##### FUNCTION gnome_storage_storage_open ##### -->
<para>

</para>

@storage: 
@path: 
@open_mode: 
@Returns: 

<!-- ##### SECTION ./tmpl/gnome-composite-moniker.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/gnome-persist-file.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_get_pos ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_stream_mem_create ##### -->
<para>

</para>

@buffer: 
@size: 
@read_only: 
@Returns: 

<!-- ##### FUNCTION gnome_moniker_get_as_string ##### -->
<para>

</para>

@moniker: 
@Returns: 

<!-- ##### FUNCTION gnome_moniker_new ##### -->
<para>

</para>

@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_get_pos ##### -->
<para>

</para>

@uih: 
@path: 
@Returns: 

<!-- ##### FUNCTION gnome_ui_handler_menu_parse_uiinfo_tree ##### -->
<para>

</para>

@uii: 
@Returns: 

<!-- ##### STRUCT GnomeUIHandlerTopLevelData ##### -->
<para>

</para>


<!-- ##### STRUCT GnomeStorageDriver ##### -->
<para>

</para>


<!-- ##### VARIABLE gnome_container_vepv ##### -->
<para>
   This is the CORBA Vector of EPVs (VEPV) of GnomeContainer that
   provides the implementaion for the GNOME::Container interface.
</para>


<!-- ##### MACRO GNOME_CONTAINER_TYPE ##### -->
<para>
   Returns the GtkType associated with the GnomeComponent Gtk object. 
</para>


<!-- ##### SECTION ./tmpl/gnome-bonobo.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### FUNCTION gnome_ui_handler_menu_set_callback ##### -->
<para>

</para>

@uih: 
@path: 
@callback: 
@callback_data: 

<!-- ##### SECTION ./tmpl/bonobo-audio-ulaw.sgml:Long_Description ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/bonobo-audio-ulaw.sgml:Short_Description ##### -->



<!-- ##### SECTION ./tmpl/gnome-object-client.sgml:Long_Description ##### -->
<para>
  The #GnomeObjectClient object is used primarly to activate Bonobo
  components (mainly by using gnome_object_activate ()).  The CORBA
  object reference to the Bonobo object is wrapped in a #GnomeObject.
</para>

<para>
  The #GnomeObjectClient object is also used to wrap an arbitrary
  GNOME::Unknown CORBA object reference into a #GnomeObject (by using
  gnome_object_client_from_corba()).
</para>

<para>
  The main activation entry point is the gnome_object_activate()
  function.  This is a high-level routine that knows how to activate
  components or activate and restore components.  Internally
  gnome_object_activate() checks whether its argument is a moniker_url
  or a GOAD-ID and depending on this it invokes
  gnome_object_activate_with_goad_id() or gnome_object_restore_from_url().
</para>

<para>
  The gnome_object_activate_with_goad_id() routine basically uses
  GNORBA's goad_server_activate_with_id() to launch the component ( or
  launch the factory implementing the component and requesting from
  the factory a new instance).
</para>

<para>
  The gnome_object_restore_from_url() takes a textual moniker url
  description (See #GnomeMoniker) that represents a specific object
  that is defined at least by a component and a url to restore its
  state from.  Optionally, you can specific a subobject to request
  from the resulting object.
</para>


<!-- ##### FUNCTION gnome_ui_handler_toolbar_set_hint ##### -->
<para>

</para>

@uih: 
@path: 
@hint: 

<!-- ##### FUNCTION gnome_component_activate_for_type ##### -->
<para>

</para>

@slist: 
@dir: 
@mime_type: 
@required_functionality: 
@Returns: 

