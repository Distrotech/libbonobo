/*
 * bonobo-moniker.idl: Implements an object naming and resolution interface
 *
 * Copyright (C) 2000  Helix Code, Inc.
 *
 * Authors:
 *	Michael Meeks (michael@helixcode.com)
 *	Ettore Perazzoli (ettore@helixcode.com)
 */

#ifndef BONOBO_MONIKER_IDL
#define BONOBO_MONIKER_IDL

#include "bonobo-unknown.idl"

module Bonobo {

	typedef long ResolveFlag;
	const ResolveFlag ALLOW_USER_INTERACTION = 1;

	struct ResolveOptions {
		ResolveFlag  flags;
		long         timeout; /* in ms */
	};

	interface Moniker : Bonobo::Unknown {
		exception InterfaceNotFound {};
		exception TimeOut           {};
		exception InvalidSyntax     {};
		exception UnknownPrefix     {};

		/**
		 * parent:
		 *
		 * A moniker can be composed of a chain of monikers
		 * which can be collectively resolved, displayed etc.
		 */
		attribute Moniker parent;

		/**
		 * getDisplayName:
		 * 
		 * Returns a human readable representation of the Moniker
		 */
		string  getDisplayName ()
			raises (InvalidSyntax);

		/**
		 * parseDisplayName:
		 * @parent: the parent of this moniker
		 * @name: the display name fragment to parse
		 *
		 * Generates a moniker from the string representation,
		 * it builds a list returning the root node in a
		 * similar way to g_list_append ();
		 */
		Moniker parseDisplayName (in Moniker parent, in string name)
			raises (InvalidSyntax, UnknownPrefix);
		
		/**
		 * resolve:
		 * @options: resolution options
		 * @inferface: what interface we want from the result
		 *
		 * Resolves a moniker; this returns a reference to the
		 * activated object described by the moniker
		 */
		Unknown resolve            (in ResolveOptions options,
					    in string         requested_interface)
			raises (InterfaceNotFound, TimeOut);
	};
};

#endif /* BONOBO_MONIKER_IDL */
