/*
 * Bonobo_Config.idl: The Bonobo Configuration System
 *
 * Author:
 *	Dietmar Maurer (dietmar@ximian.com)
 */

#ifndef __BONOBO_CONFIG_IDL__
#define __BONOBO_CONFIG_IDL__

%{
#pragma include_defs bonobo/Bonobo.h
%}
#pragma inhibit push

#include <Bonobo_Property.idl>
#include <Bonobo_Control.idl>

#pragma inhibit pop

module Bonobo {

	interface PropertyEditor : Bonobo::Control {
		struct Pair {
			string         name;
			PropertyEditor editor;
		};

		typedef sequence<Pair> PropertyEditorSet;
		
		exception InvalidType {};

		void setProperty (in Property property)
			raises (InvalidType);    

		PropertyEditorSet getSubEditors ();
	};

	typedef sequence<string> KeyList;

	/*
	 * aggregated with an event source
	 *
	 */
	interface ConfigDatabase : Unknown {
		
		exception BackendFailed {};
		exception InvalidType {};

		readonly attribute boolean writeable;

		any          getValue    (in string key)
			raises (BackendFailed);

		void         setValue    (in string key, in any value)
			raises (BackendFailed);

		any          getDefault  (in string key)
			raises (BackendFailed);

		KeyList      listDirs    (in string dir)
			raises (BackendFailed);

		KeyList      listKeys    (in string dir)
			raises (BackendFailed);

		boolean      dirExists   (in string dir)
			raises (BackendFailed);
		
		void         removeValue (in string key)
			raises (BackendFailed);

		void         removeDir   (in string dir)
			raises (BackendFailed);

		void         addDatabase (in ConfigDatabase ddb, 
					  in string filter_path,
					  in string append_path)
			raises (BackendFailed);

		void         sync        ()
			raises (BackendFailed);
	};

};

#endif /* ! __BONOBO_CONFIG_IDL__ */
