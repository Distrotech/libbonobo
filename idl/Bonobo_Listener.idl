/*
 * bonobo-listener.idl: Generic listener handling interfaces
 *
 * Copyright (C) 2000,  Helix Code, Inc.
 *
 * Author:
 *	Michael Meeks (michael@helixcode.com)
 */

module Bonobo {

	typedef sequence<any> ListenerArgs;

	interface Listener : Bonobo::Unknown {
		exception UnknownEvent {};

		/**
		 * event:   Invokes a named event on this listener object,
		 * thus a single Bonobo / CORBA object can multiplex
		 * many event requests without the overhead of an
		 * object per type of event we want to listen to.
		 * @event_name: the name of the event
		 * @args: A sequence of arguments.
		 */
		oneway void event (in string event_name, in ListenerArgs args)
			raises (UnknownEvent);
	};

	interface EventSource : Bonobo::Unknown {
		exception UnknownListener {};

		/**
		 * addListener: Adds a listener to events happening
		 * on this object.
		 * @l: the listener implementation.
		 */
		void addListener    (in Listener l);
		
		/**
		 * removeListener: Removes a listener
		 * @l: the listener
		 */
		void removeListener (in Listener l)
			raises (UnknownListener);
	};
};


