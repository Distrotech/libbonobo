module Bonobo {
	interface UIContainer;

	interface UIComponent : Bonobo::Unknown {

		void set_container   (in UIContainer container);
		void unset_container ();

		attribute string name;

		enum EventType {
			ACTIVATED,
			REMOVED,
			OVERRIDDEN,
			REINSTATED,
			STATE_CHANGED
		};

		/*
		 * Returns an XML description of all available verbs.
		 */
		string      describe_verbs ();

		/*
		 * Allows a remote user to execute a verb by name.
		 */
		oneway void exec_verb      (in string   cname);

		/*
		 * Allows a remote user to flag an event
		 */
		oneway void ui_event       (in string    id,
					    in EventType type,
					    in string    state);
	};

	interface UIContainer : Bonobo::Unknown {
		exception MalFormedXML {};
		exception InvalidPath {};

		/* FIXME: broken, use set/get object instead */
		void    register_component   (in string component_name,
					      in Bonobo::UIComponent component);

		void    deregister_component (in string component_name);

		oneway void     freeze       ();
		oneway void     thaw         ();

		void    node_set             (in string path, in string xml,
					      in string component_name)
			raises (MalFormedXML, InvalidPath);

		string  node_get             (in string path,
					      in boolean nodeOnly)
			raises (InvalidPath);

		void    node_remove          (in string path,
					      in string by_component_name)
			raises (InvalidPath);

		boolean node_exists          (in string path);

		/*
		 *  Currently the object should be a Bonobo::Control interface
		 * but this should be probably be changed to a Moniker interface
		 * in due course.
		 */
		void            object_set   (in string path,
					      in Bonobo::Unknown control)
			raises (InvalidPath);

		Bonobo::Unknown object_get   (in string path)
			raises (InvalidPath);
	};
};
